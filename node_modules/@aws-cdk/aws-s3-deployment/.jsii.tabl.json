{"version":"2","toolVersion":"1.84.0","snippets":{"bc79e49b70332f0663ade678190d4a8aac812909c4b83e474b489ccaad121f1f":{"translations":{"python":{"source":"website_bucket = s3.Bucket(self, \"WebsiteBucket\",\n    website_index_document=\"index.html\",\n    public_read_access=True\n)\n\ns3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(\"./website-dist\")],\n    destination_bucket=website_bucket,\n    destination_key_prefix=\"web/static\"\n)","version":"2"},"csharp":{"source":"var websiteBucket = new Bucket(this, \"WebsiteBucket\", new BucketProps {\n    WebsiteIndexDocument = \"index.html\",\n    PublicReadAccess = true\n});\n\nnew BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website-dist\") },\n    DestinationBucket = websiteBucket,\n    DestinationKeyPrefix = \"web/static\"\n});","version":"1"},"java":{"source":"Bucket websiteBucket = Bucket.Builder.create(this, \"WebsiteBucket\")\n        .websiteIndexDocument(\"index.html\")\n        .publicReadAccess(true)\n        .build();\n\nBucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(\"./website-dist\")))\n        .destinationBucket(websiteBucket)\n        .destinationKeyPrefix(\"web/static\")\n        .build();","version":"1"},"go":{"source":"websiteBucket := s3.NewBucket(this, jsii.String(\"WebsiteBucket\"), &BucketProps{\n\tWebsiteIndexDocument: jsii.String(\"index.html\"),\n\tPublicReadAccess: jsii.Boolean(true),\n})\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website-dist\")),\n\t},\n\tDestinationBucket: websiteBucket,\n\tDestinationKeyPrefix: jsii.String(\"web/static\"),\n})","version":"1"},"$":{"source":"const websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":25}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.BucketProps","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":5,"75":14,"104":2,"106":1,"192":1,"193":2,"194":4,"196":1,"197":2,"225":1,"226":1,"242":1,"243":1,"281":5},"fqnsFingerprint":"4f87bba10bb029fd3234ae3cf35803e9060bb564edef35bf6bfad2420fd11ac9"},"d09a206c710ad2ae2caa4a98a13a2a1766300823f0eaf099493f066f86f7ce52":{"translations":{"python":{"source":"# website_bucket: s3.Bucket\n\n\ndeployment = s3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(path.join(__dirname, \"my-website\"))],\n    destination_bucket=website_bucket\n)\n\nConstructThatReadsFromTheBucket(self, \"Consumer\", {\n    # Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n    \"bucket\": deployment.deployed_bucket\n})","version":"2"},"csharp":{"source":"Bucket websiteBucket;\n\n\nvar deployment = new BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(Join(__dirname, \"my-website\")) },\n    DestinationBucket = websiteBucket\n});\n\nnew ConstructThatReadsFromTheBucket(this, \"Consumer\", new Dictionary<string, IBucket> {\n    // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n    { \"bucket\", deployment.DeployedBucket }\n});","version":"1"},"java":{"source":"Bucket websiteBucket;\n\n\nBucketDeployment deployment = BucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(join(__dirname, \"my-website\"))))\n        .destinationBucket(websiteBucket)\n        .build();\n\nnew ConstructThatReadsFromTheBucket(this, \"Consumer\", Map.of(\n        // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n        \"bucket\", deployment.getDeployedBucket()));","version":"1"},"go":{"source":"var websiteBucket bucket\n\n\ndeployment := s3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(path.join(__dirname, jsii.String(\"my-website\"))),\n\t},\n\tDestinationBucket: websiteBucket,\n})\n\nNewConstructThatReadsFromTheBucket(this, jsii.String(\"Consumer\"), map[string]iBucket{\n\t// Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n\t\"bucket\": deployment.deployedBucket,\n})","version":"1"},"$":{"source":"declare const websiteBucket: s3.Bucket;\n\nconst deployment = new s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket: websiteBucket,\n});\n\nnew ConstructThatReadsFromTheBucket(this, 'Consumer', {\n  // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n  bucket: deployment.deployedBucket,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":57}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const websiteBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst deployment = new s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket: websiteBucket,\n});\n\nnew ConstructThatReadsFromTheBucket(this, 'Consumer', {\n  // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n  bucket: deployment.deployedBucket,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":3,"75":19,"104":2,"130":1,"153":1,"169":1,"192":1,"193":2,"194":5,"196":2,"197":2,"225":2,"226":1,"242":2,"243":2,"281":3,"290":1},"fqnsFingerprint":"0e751bb9f22d17ea47c3dd4846c776e5cb57696ecb6950aa735395ffa8f249ee"},"0073f985f281c58caf9d66a81430e6556415be764029af434b829cd6e4d61b92":{"translations":{"python":{"source":"# destination_bucket: s3.Bucket\n\ns3deploy.BucketDeployment(self, \"DeployMeWithoutDeletingFilesOnDestination\",\n    sources=[s3deploy.Source.asset(path.join(__dirname, \"my-website\"))],\n    destination_bucket=destination_bucket,\n    prune=False\n)","version":"2"},"csharp":{"source":"Bucket destinationBucket;\n\nnew BucketDeployment(this, \"DeployMeWithoutDeletingFilesOnDestination\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(Join(__dirname, \"my-website\")) },\n    DestinationBucket = destinationBucket,\n    Prune = false\n});","version":"1"},"java":{"source":"Bucket destinationBucket;\n\nBucketDeployment.Builder.create(this, \"DeployMeWithoutDeletingFilesOnDestination\")\n        .sources(List.of(Source.asset(join(__dirname, \"my-website\"))))\n        .destinationBucket(destinationBucket)\n        .prune(false)\n        .build();","version":"1"},"go":{"source":"var destinationBucket bucket\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployMeWithoutDeletingFilesOnDestination\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(path.join(__dirname, jsii.String(\"my-website\"))),\n\t},\n\tDestinationBucket: DestinationBucket,\n\tPrune: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"declare const destinationBucket: s3.Bucket;\nnew s3deploy.BucketDeployment(this, 'DeployMeWithoutDeletingFilesOnDestination', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket,\n  prune: false,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":140}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destinationBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew s3deploy.BucketDeployment(this, 'DeployMeWithoutDeletingFilesOnDestination', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket,\n  prune: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":2,"75":14,"91":1,"104":1,"130":1,"153":1,"169":1,"192":1,"193":1,"194":4,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":2,"282":1,"290":1},"fqnsFingerprint":"0e751bb9f22d17ea47c3dd4846c776e5cb57696ecb6950aa735395ffa8f249ee"},"97e92b95da6b42da181f2b62267837b4b2064e02f821ed5a2f6d2dd0c45d999e":{"translations":{"python":{"source":"# destination_bucket: s3.Bucket\n\ns3deploy.BucketDeployment(self, \"BucketDeployment\",\n    sources=[s3deploy.Source.asset(\"./website\", exclude=[\"index.html\"])],\n    destination_bucket=destination_bucket,\n    cache_control=[s3deploy.CacheControl.from_string(\"max-age=31536000,public,immutable\")],\n    prune=False\n)\n\ns3deploy.BucketDeployment(self, \"HTMLBucketDeployment\",\n    sources=[s3deploy.Source.asset(\"./website\", exclude=[\"*\", \"!index.html\"])],\n    destination_bucket=destination_bucket,\n    cache_control=[s3deploy.CacheControl.from_string(\"max-age=0,no-cache,no-store,must-revalidate\")],\n    prune=False\n)","version":"2"},"csharp":{"source":"Bucket destinationBucket;\n\nnew BucketDeployment(this, \"BucketDeployment\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website\", new AssetOptions { Exclude = new [] { \"index.html\" } }) },\n    DestinationBucket = destinationBucket,\n    CacheControl = new [] { CacheControl.FromString(\"max-age=31536000,public,immutable\") },\n    Prune = false\n});\n\nnew BucketDeployment(this, \"HTMLBucketDeployment\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website\", new AssetOptions { Exclude = new [] { \"*\", \"!index.html\" } }) },\n    DestinationBucket = destinationBucket,\n    CacheControl = new [] { CacheControl.FromString(\"max-age=0,no-cache,no-store,must-revalidate\") },\n    Prune = false\n});","version":"1"},"java":{"source":"Bucket destinationBucket;\n\nBucketDeployment.Builder.create(this, \"BucketDeployment\")\n        .sources(List.of(Source.asset(\"./website\", AssetOptions.builder().exclude(List.of(\"index.html\")).build())))\n        .destinationBucket(destinationBucket)\n        .cacheControl(List.of(CacheControl.fromString(\"max-age=31536000,public,immutable\")))\n        .prune(false)\n        .build();\n\nBucketDeployment.Builder.create(this, \"HTMLBucketDeployment\")\n        .sources(List.of(Source.asset(\"./website\", AssetOptions.builder().exclude(List.of(\"*\", \"!index.html\")).build())))\n        .destinationBucket(destinationBucket)\n        .cacheControl(List.of(CacheControl.fromString(\"max-age=0,no-cache,no-store,must-revalidate\")))\n        .prune(false)\n        .build();","version":"1"},"go":{"source":"var destinationBucket bucket\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"BucketDeployment\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website\"), &AssetOptions{\n\t\t\tExclude: []*string{\n\t\t\t\tjsii.String(\"index.html\"),\n\t\t\t},\n\t\t}),\n\t},\n\tDestinationBucket: DestinationBucket,\n\tCacheControl: []cacheControl{\n\t\ts3deploy.*cacheControl_FromString(jsii.String(\"max-age=31536000,public,immutable\")),\n\t},\n\tPrune: jsii.Boolean(false),\n})\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"HTMLBucketDeployment\"), &BucketDeploymentProps{\n\tSources: []*iSource{\n\t\ts3deploy.Source_*Asset(jsii.String(\"./website\"), &AssetOptions{\n\t\t\tExclude: []*string{\n\t\t\t\tjsii.String(\"*\"),\n\t\t\t\tjsii.String(\"!index.html\"),\n\t\t\t},\n\t\t}),\n\t},\n\tDestinationBucket: DestinationBucket,\n\tCacheControl: []*cacheControl{\n\t\ts3deploy.*cacheControl_*FromString(jsii.String(\"max-age=0,no-cache,no-store,must-revalidate\")),\n\t},\n\tPrune: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"declare const destinationBucket: s3.Bucket;\nnew s3deploy.BucketDeployment(this, 'BucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['index.html'] })],\n  destinationBucket,\n  cacheControl: [s3deploy.CacheControl.fromString('max-age=31536000,public,immutable')],\n  prune: false,\n});\n\nnew s3deploy.BucketDeployment(this, 'HTMLBucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['*', '!index.html'] })],\n  destinationBucket,\n  cacheControl: [s3deploy.CacheControl.fromString('max-age=0,no-cache,no-store,must-revalidate')],\n  prune: false,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":154}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-assets.AssetOptions","@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.CacheControl","@aws-cdk/aws-s3-deployment.CacheControl#fromString","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destinationBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew s3deploy.BucketDeployment(this, 'BucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['index.html'] })],\n  destinationBucket,\n  cacheControl: [s3deploy.CacheControl.fromString('max-age=31536000,public,immutable')],\n  prune: false,\n});\n\nnew s3deploy.BucketDeployment(this, 'HTMLBucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['*', '!index.html'] })],\n  destinationBucket,\n  cacheControl: [s3deploy.CacheControl.fromString('max-age=0,no-cache,no-store,must-revalidate')],\n  prune: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":9,"75":29,"91":2,"104":2,"130":1,"153":1,"169":1,"192":6,"193":4,"194":10,"196":4,"197":2,"225":1,"226":2,"242":1,"243":1,"281":8,"282":2,"290":1},"fqnsFingerprint":"5d48021c41baf8d75b37fde59a00e8a53a19b9fbb1e624ce716e3b53cd84c207"},"6f58d55f3332fb0fce94cb7bac0e9187674056231506b4e1f9522ca6b80792f8":{"translations":{"python":{"source":"# destination_bucket: s3.Bucket\n\ns3deploy.BucketDeployment(self, \"HTMLBucketDeployment\",\n    sources=[s3deploy.Source.asset(\"./website\", exclude=[\"*\", \"!index.html\"])],\n    destination_bucket=destination_bucket\n)","version":"2"},"csharp":{"source":"Bucket destinationBucket;\n\nnew BucketDeployment(this, \"HTMLBucketDeployment\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website\", new AssetOptions { Exclude = new [] { \"*\", \"!index.html\" } }) },\n    DestinationBucket = destinationBucket\n});","version":"1"},"java":{"source":"Bucket destinationBucket;\n\nBucketDeployment.Builder.create(this, \"HTMLBucketDeployment\")\n        .sources(List.of(Source.asset(\"./website\", AssetOptions.builder().exclude(List.of(\"*\", \"!index.html\")).build())))\n        .destinationBucket(destinationBucket)\n        .build();","version":"1"},"go":{"source":"var destinationBucket bucket\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"HTMLBucketDeployment\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website\"), &AssetOptions{\n\t\t\tExclude: []*string{\n\t\t\t\tjsii.String(\"*\"),\n\t\t\t\tjsii.String(\"!index.html\"),\n\t\t\t},\n\t\t}),\n\t},\n\tDestinationBucket: DestinationBucket,\n})","version":"1"},"$":{"source":"declare const destinationBucket: s3.Bucket;\nnew s3deploy.BucketDeployment(this, 'HTMLBucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['*', '!index.html'] })],\n  destinationBucket,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":175}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-assets.AssetOptions","@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destinationBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew s3deploy.BucketDeployment(this, 'HTMLBucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['*', '!index.html'] })],\n  destinationBucket,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":4,"75":11,"104":1,"130":1,"153":1,"169":1,"192":2,"193":2,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":2,"282":1,"290":1},"fqnsFingerprint":"57a2802a501af4bb29c004830fcdcc370ea6cf15f40d014d02b56aaf6369441e"},"8f7a30fb8029dda4cbd7b5ce9ee2c31cd1bfee05de59525c0403686197d0b082":{"translations":{"python":{"source":"# destination_bucket: s3.Bucket\n\ns3deploy.BucketDeployment(self, \"DeployButExcludeSpecificFiles\",\n    sources=[s3deploy.Source.asset(path.join(__dirname, \"my-website\"))],\n    destination_bucket=destination_bucket,\n    exclude=[\"*.txt\"]\n)","version":"2"},"csharp":{"source":"Bucket destinationBucket;\n\nnew BucketDeployment(this, \"DeployButExcludeSpecificFiles\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(Join(__dirname, \"my-website\")) },\n    DestinationBucket = destinationBucket,\n    Exclude = new [] { \"*.txt\" }\n});","version":"1"},"java":{"source":"Bucket destinationBucket;\n\nBucketDeployment.Builder.create(this, \"DeployButExcludeSpecificFiles\")\n        .sources(List.of(Source.asset(join(__dirname, \"my-website\"))))\n        .destinationBucket(destinationBucket)\n        .exclude(List.of(\"*.txt\"))\n        .build();","version":"1"},"go":{"source":"var destinationBucket bucket\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployButExcludeSpecificFiles\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(path.join(__dirname, jsii.String(\"my-website\"))),\n\t},\n\tDestinationBucket: DestinationBucket,\n\tExclude: []*string{\n\t\tjsii.String(\"*.txt\"),\n\t},\n})","version":"1"},"$":{"source":"declare const destinationBucket: s3.Bucket;\nnew s3deploy.BucketDeployment(this, 'DeployButExcludeSpecificFiles', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket,\n  exclude: ['*.txt'],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":185}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destinationBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew s3deploy.BucketDeployment(this, 'DeployButExcludeSpecificFiles', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket,\n  exclude: ['*.txt'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":3,"75":14,"104":1,"130":1,"153":1,"169":1,"192":2,"193":1,"194":4,"196":2,"197":1,"225":1,"226":1,"242":1,"243":1,"281":2,"282":1,"290":1},"fqnsFingerprint":"0e751bb9f22d17ea47c3dd4846c776e5cb57696ecb6950aa735395ffa8f249ee"},"5633a90ef8b55baa2f0d6e9d5ccafb520afd72fd73af49054b9c5bf21082d0a5":{"translations":{"python":{"source":"website_bucket = s3.Bucket(self, \"WebsiteBucket\",\n    website_index_document=\"index.html\",\n    public_read_access=True\n)\n\ns3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(\"./website-dist\")],\n    destination_bucket=website_bucket,\n    destination_key_prefix=\"web/static\",  # optional prefix in destination bucket\n    metadata=s3deploy.UserDefinedObjectMetadata(A=\"1\", b=\"2\"),  # user-defined metadata\n\n    # system-defined metadata\n    content_type=\"text/html\",\n    content_language=\"en\",\n    storage_class=s3deploy.StorageClass.INTELLIGENT_TIERING,\n    server_side_encryption=s3deploy.ServerSideEncryption.AES_256,\n    cache_control=[\n        s3deploy.CacheControl.set_public(),\n        s3deploy.CacheControl.max_age(Duration.hours(1))\n    ],\n    access_control=s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL\n)","version":"2"},"csharp":{"source":"var websiteBucket = new Bucket(this, \"WebsiteBucket\", new BucketProps {\n    WebsiteIndexDocument = \"index.html\",\n    PublicReadAccess = true\n});\n\nnew BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website-dist\") },\n    DestinationBucket = websiteBucket,\n    DestinationKeyPrefix = \"web/static\",  // optional prefix in destination bucket\n    Metadata = new UserDefinedObjectMetadata { A = \"1\", B = \"2\" },  // user-defined metadata\n\n    // system-defined metadata\n    ContentType = \"text/html\",\n    ContentLanguage = \"en\",\n    StorageClass = StorageClass.INTELLIGENT_TIERING,\n    ServerSideEncryption = ServerSideEncryption.AES_256,\n    CacheControl = new [] { CacheControl.SetPublic(), CacheControl.MaxAge(Duration.Hours(1)) },\n    AccessControl = BucketAccessControl.BUCKET_OWNER_FULL_CONTROL\n});","version":"1"},"java":{"source":"Bucket websiteBucket = Bucket.Builder.create(this, \"WebsiteBucket\")\n        .websiteIndexDocument(\"index.html\")\n        .publicReadAccess(true)\n        .build();\n\nBucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(\"./website-dist\")))\n        .destinationBucket(websiteBucket)\n        .destinationKeyPrefix(\"web/static\") // optional prefix in destination bucket\n        .metadata(UserDefinedObjectMetadata.builder().A(\"1\").b(\"2\").build()) // user-defined metadata\n\n        // system-defined metadata\n        .contentType(\"text/html\")\n        .contentLanguage(\"en\")\n        .storageClass(StorageClass.INTELLIGENT_TIERING)\n        .serverSideEncryption(ServerSideEncryption.AES_256)\n        .cacheControl(List.of(CacheControl.setPublic(), CacheControl.maxAge(Duration.hours(1))))\n        .accessControl(BucketAccessControl.BUCKET_OWNER_FULL_CONTROL)\n        .build();","version":"1"},"go":{"source":"websiteBucket := s3.NewBucket(this, jsii.String(\"WebsiteBucket\"), &BucketProps{\n\tWebsiteIndexDocument: jsii.String(\"index.html\"),\n\tPublicReadAccess: jsii.Boolean(true),\n})\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website-dist\")),\n\t},\n\tDestinationBucket: websiteBucket,\n\tDestinationKeyPrefix: jsii.String(\"web/static\"),\n\t // optional prefix in destination bucket\n\tMetadata: &UserDefinedObjectMetadata{\n\t\tA: jsii.String(\"1\"),\n\t\tB: jsii.String(\"2\"),\n\t},\n\t // user-defined metadata\n\n\t// system-defined metadata\n\tContentType: jsii.String(\"text/html\"),\n\tContentLanguage: jsii.String(\"en\"),\n\tStorageClass: s3deploy.StorageClass_INTELLIGENT_TIERING,\n\tServerSideEncryption: s3deploy.ServerSideEncryption_AES_256,\n\tCacheControl: []cacheControl{\n\t\ts3deploy.*cacheControl_SetPublic(),\n\t\ts3deploy.*cacheControl_MaxAge(awscdkcore.Duration_Hours(jsii.Number(1))),\n\t},\n\tAccessControl: s3.BucketAccessControl_BUCKET_OWNER_FULL_CONTROL,\n})","version":"1"},"$":{"source":"const websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: s3deploy.StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: s3deploy.ServerSideEncryption.AES_256,\n  cacheControl: [\n    s3deploy.CacheControl.setPublic(),\n    s3deploy.CacheControl.maxAge(Duration.hours(1)),\n  ],\n  accessControl: s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":222}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.CacheControl","@aws-cdk/aws-s3-deployment.CacheControl#maxAge","@aws-cdk/aws-s3-deployment.CacheControl#setPublic","@aws-cdk/aws-s3-deployment.ServerSideEncryption","@aws-cdk/aws-s3-deployment.ServerSideEncryption#AES_256","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3-deployment.StorageClass","@aws-cdk/aws-s3-deployment.StorageClass#INTELLIGENT_TIERING","@aws-cdk/aws-s3-deployment.UserDefinedObjectMetadata","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.BucketAccessControl","@aws-cdk/aws-s3.BucketAccessControl#BUCKET_OWNER_FULL_CONTROL","@aws-cdk/aws-s3.BucketProps","@aws-cdk/aws-s3.IBucket","@aws-cdk/core.Duration","@aws-cdk/core.Duration#hours","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: s3deploy.StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: s3deploy.ServerSideEncryption.AES_256,\n  cacheControl: [\n    s3deploy.CacheControl.setPublic(),\n    s3deploy.CacheControl.maxAge(Duration.hours(1)),\n  ],\n  accessControl: s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"8":1,"10":9,"75":40,"104":2,"106":1,"192":2,"193":3,"194":15,"196":4,"197":2,"225":1,"226":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"5d235be89927b40b9b646b3624fd753b99e3d7bb90a784b80424ddd6a05b9f10"},"884d9b7e4a2c212e616c46f2af86b43e58c4190b77e629117aae42e7d7514883":{"translations":{"python":{"source":"import aws_cdk.aws_cloudfront as cloudfront\nimport aws_cdk.aws_cloudfront_origins as origins\n\n\nbucket = s3.Bucket(self, \"Destination\")\n\n# Handles buckets whether or not they are configured for website hosting.\ndistribution = cloudfront.Distribution(self, \"Distribution\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.S3Origin(bucket))\n)\n\ns3deploy.BucketDeployment(self, \"DeployWithInvalidation\",\n    sources=[s3deploy.Source.asset(\"./website-dist\")],\n    destination_bucket=bucket,\n    distribution=distribution,\n    distribution_paths=[\"/images/*.png\"]\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.CloudFront;\nusing Amazon.CDK.AWS.CloudFront.Origins;\n\n\nvar bucket = new Bucket(this, \"Destination\");\n\n// Handles buckets whether or not they are configured for website hosting.\nvar distribution = new Distribution(this, \"Distribution\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new S3Origin(bucket) }\n});\n\nnew BucketDeployment(this, \"DeployWithInvalidation\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website-dist\") },\n    DestinationBucket = bucket,\n    Distribution = distribution,\n    DistributionPaths = new [] { \"/images/*.png\" }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.cloudfront.*;\nimport software.amazon.awscdk.services.cloudfront.origins.*;\n\n\nBucket bucket = new Bucket(this, \"Destination\");\n\n// Handles buckets whether or not they are configured for website hosting.\nDistribution distribution = Distribution.Builder.create(this, \"Distribution\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new S3Origin(bucket)).build())\n        .build();\n\nBucketDeployment.Builder.create(this, \"DeployWithInvalidation\")\n        .sources(List.of(Source.asset(\"./website-dist\")))\n        .destinationBucket(bucket)\n        .distribution(distribution)\n        .distributionPaths(List.of(\"/images/*.png\"))\n        .build();","version":"1"},"go":{"source":"import cloudfront \"github.com/aws-samples/dummy/awscdkawscloudfront\"\nimport origins \"github.com/aws-samples/dummy/awscdkawscloudfrontorigins\"\n\n\nbucket := s3.NewBucket(this, jsii.String(\"Destination\"))\n\n// Handles buckets whether or not they are configured for website hosting.\ndistribution := cloudfront.NewDistribution(this, jsii.String(\"Distribution\"), &DistributionProps{\n\tDefaultBehavior: &BehaviorOptions{\n\t\tOrigin: origins.NewS3Origin(bucket),\n\t},\n})\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployWithInvalidation\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website-dist\")),\n\t},\n\tDestinationBucket: bucket,\n\tDistribution: Distribution,\n\tDistributionPaths: []*string{\n\t\tjsii.String(\"/images/*.png\"),\n\t},\n})","version":"1"},"$":{"source":"import * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst bucket = new s3.Bucket(this, 'Destination');\n\n// Handles buckets whether or not they are configured for website hosting.\nconst distribution = new cloudfront.Distribution(this, 'Distribution', {\n  defaultBehavior: { origin: new origins.S3Origin(bucket) },\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWithInvalidation', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: bucket,\n  distribution,\n  distributionPaths: ['/images/*.png'],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":251}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudfront-origins.S3Origin","@aws-cdk/aws-cloudfront.BehaviorOptions","@aws-cdk/aws-cloudfront.Distribution","@aws-cdk/aws-cloudfront.DistributionProps","@aws-cdk/aws-cloudfront.IDistribution","@aws-cdk/aws-cloudfront.IOrigin","@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst bucket = new s3.Bucket(this, 'Destination');\n\n// Handles buckets whether or not they are configured for website hosting.\nconst distribution = new cloudfront.Distribution(this, 'Distribution', {\n  defaultBehavior: { origin: new origins.S3Origin(bucket) },\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWithInvalidation', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: bucket,\n  distribution,\n  distributionPaths: ['/images/*.png'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":7,"75":23,"104":3,"192":2,"193":3,"194":6,"196":1,"197":4,"225":2,"226":1,"242":2,"243":2,"254":2,"255":2,"256":2,"281":5,"282":1,"290":1},"fqnsFingerprint":"55b63ae333cca9bda4539505eb322450a148c25b2c85f4129b492a49e51b7fc4"},"fe6523d08640b129139ffb6dd04158a970194e83f4a0baffb63f0a8028a0729e":{"translations":{"python":{"source":"# destination_bucket: s3.Bucket\n# vpc: ec2.Vpc\n\n\ns3deploy.BucketDeployment(self, \"DeployMeWithEfsStorage\",\n    sources=[s3deploy.Source.asset(path.join(__dirname, \"my-website\"))],\n    destination_bucket=destination_bucket,\n    destination_key_prefix=\"efs/\",\n    use_efs=True,\n    vpc=vpc,\n    retain_on_delete=False\n)","version":"2"},"csharp":{"source":"Bucket destinationBucket;\nVpc vpc;\n\n\nnew BucketDeployment(this, \"DeployMeWithEfsStorage\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(Join(__dirname, \"my-website\")) },\n    DestinationBucket = destinationBucket,\n    DestinationKeyPrefix = \"efs/\",\n    UseEfs = true,\n    Vpc = vpc,\n    RetainOnDelete = false\n});","version":"1"},"java":{"source":"Bucket destinationBucket;\nVpc vpc;\n\n\nBucketDeployment.Builder.create(this, \"DeployMeWithEfsStorage\")\n        .sources(List.of(Source.asset(join(__dirname, \"my-website\"))))\n        .destinationBucket(destinationBucket)\n        .destinationKeyPrefix(\"efs/\")\n        .useEfs(true)\n        .vpc(vpc)\n        .retainOnDelete(false)\n        .build();","version":"1"},"go":{"source":"var destinationBucket bucket\nvar vpc vpc\n\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployMeWithEfsStorage\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(path.join(__dirname, jsii.String(\"my-website\"))),\n\t},\n\tDestinationBucket: DestinationBucket,\n\tDestinationKeyPrefix: jsii.String(\"efs/\"),\n\tUseEfs: jsii.Boolean(true),\n\tVpc: Vpc,\n\tRetainOnDelete: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"declare const destinationBucket: s3.Bucket;\ndeclare const vpc: ec2.Vpc;\n\nnew s3deploy.BucketDeployment(this, 'DeployMeWithEfsStorage', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket,\n  destinationKeyPrefix: 'efs/',\n  useEfs: true,\n  vpc,\n  retainOnDelete: false,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":293}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destinationBucket: s3.Bucket;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew s3deploy.BucketDeployment(this, 'DeployMeWithEfsStorage', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket,\n  destinationKeyPrefix: 'efs/',\n  useEfs: true,\n  vpc,\n  retainOnDelete: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":3,"75":20,"91":1,"104":1,"106":1,"130":2,"153":2,"169":2,"192":1,"193":1,"194":4,"196":2,"197":1,"225":2,"226":1,"242":2,"243":2,"281":4,"282":2,"290":1},"fqnsFingerprint":"5fb122fdf1e3004f4fa23a071fcbdce3ba275062ab66fbca2349dc3269776e93"},"348c35e1d51c19fa1a521f503abff9badbda91d480f322ecc82cbed2a8a6126e":{"translations":{"python":{"source":"import aws_cdk.aws_sns as sns\n\n# destination_bucket: s3.Bucket\n# topic: sns.Topic\n\n\napp_config = {\n    \"topic_arn\": topic.topic_arn,\n    \"base_url\": \"https://my-endpoint\"\n}\n\ns3deploy.BucketDeployment(self, \"BucketDeployment\",\n    sources=[s3deploy.Source.json_data(\"config.json\", app_config)],\n    destination_bucket=destination_bucket\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.SNS;\n\nBucket destinationBucket;\nTopic topic;\n\n\nIDictionary<string, object> appConfig = new Dictionary<string, object> {\n    { \"topic_arn\", topic.TopicArn },\n    { \"base_url\", \"https://my-endpoint\" }\n};\n\nnew BucketDeployment(this, \"BucketDeployment\", new BucketDeploymentProps {\n    Sources = new [] { Source.JsonData(\"config.json\", appConfig) },\n    DestinationBucket = destinationBucket\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.sns.*;\n\nBucket destinationBucket;\nTopic topic;\n\n\nMap<String, Object> appConfig = Map.of(\n        \"topic_arn\", topic.getTopicArn(),\n        \"base_url\", \"https://my-endpoint\");\n\nBucketDeployment.Builder.create(this, \"BucketDeployment\")\n        .sources(List.of(Source.jsonData(\"config.json\", appConfig)))\n        .destinationBucket(destinationBucket)\n        .build();","version":"1"},"go":{"source":"import sns \"github.com/aws-samples/dummy/awscdkawssns\"\n\nvar destinationBucket bucket\nvar topic topic\n\n\nappConfig := map[string]interface{}{\n\t\"topic_arn\": topic.topicArn,\n\t\"base_url\": jsii.String(\"https://my-endpoint\"),\n}\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"BucketDeployment\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_JsonData(jsii.String(\"config.json\"), appConfig),\n\t},\n\tDestinationBucket: DestinationBucket,\n})","version":"1"},"$":{"source":"import * as sns from '@aws-cdk/aws-sns';\n\ndeclare const destinationBucket: s3.Bucket;\ndeclare const topic: sns.Topic;\n\nconst appConfig = {\n  topic_arn: topic.topicArn,\n  base_url: 'https://my-endpoint',\n};\n\nnew s3deploy.BucketDeployment(this, 'BucketDeployment', {\n  sources: [s3deploy.Source.jsonData('config.json', appConfig)],\n  destinationBucket,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-s3-deployment"},"field":{"field":"markdown","line":314}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#jsonData","@aws-cdk/aws-s3.IBucket","@aws-cdk/aws-sns.Topic#topicArn","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as sns from '@aws-cdk/aws-sns';\n\ndeclare const destinationBucket: s3.Bucket;\ndeclare const topic: sns.Topic;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst appConfig = {\n  topic_arn: topic.topicArn,\n  base_url: 'https://my-endpoint',\n};\n\nnew s3deploy.BucketDeployment(this, 'BucketDeployment', {\n  sources: [s3deploy.Source.jsonData('config.json', appConfig)],\n  destinationBucket,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":4,"75":20,"104":1,"130":2,"153":2,"169":2,"192":1,"193":2,"194":4,"196":1,"197":1,"225":3,"226":1,"242":3,"243":3,"254":1,"255":1,"256":1,"281":3,"282":1,"290":1},"fqnsFingerprint":"4591f02a3bdbec853145a96056b9d93981bca95e74fa76aeec6daeae424de0ba"},"d33f77096ca45894ea1153a07a1c839c02593578d14cfdfaf5edbb47e93746db":{"translations":{"python":{"source":"# website_bucket: s3.Bucket\n\n\ndeployment = s3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(path.join(__dirname, \"my-website\"))],\n    destination_bucket=website_bucket\n)\n\nConstructThatReadsFromTheBucket(self, \"Consumer\", {\n    # Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n    \"bucket\": deployment.deployed_bucket\n})","version":"2"},"csharp":{"source":"Bucket websiteBucket;\n\n\nvar deployment = new BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(Join(__dirname, \"my-website\")) },\n    DestinationBucket = websiteBucket\n});\n\nnew ConstructThatReadsFromTheBucket(this, \"Consumer\", new Dictionary<string, IBucket> {\n    // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n    { \"bucket\", deployment.DeployedBucket }\n});","version":"1"},"java":{"source":"Bucket websiteBucket;\n\n\nBucketDeployment deployment = BucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(join(__dirname, \"my-website\"))))\n        .destinationBucket(websiteBucket)\n        .build();\n\nnew ConstructThatReadsFromTheBucket(this, \"Consumer\", Map.of(\n        // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n        \"bucket\", deployment.getDeployedBucket()));","version":"1"},"go":{"source":"var websiteBucket bucket\n\n\ndeployment := s3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(path.join(__dirname, jsii.String(\"my-website\"))),\n\t},\n\tDestinationBucket: websiteBucket,\n})\n\nNewConstructThatReadsFromTheBucket(this, jsii.String(\"Consumer\"), map[string]iBucket{\n\t// Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n\t\"bucket\": deployment.deployedBucket,\n})","version":"1"},"$":{"source":"declare const websiteBucket: s3.Bucket;\n\nconst deployment = new s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket: websiteBucket,\n});\n\nnew ConstructThatReadsFromTheBucket(this, 'Consumer', {\n  // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n  bucket: deployment.deployedBucket,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.BucketDeployment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const websiteBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst deployment = new s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket: websiteBucket,\n});\n\nnew ConstructThatReadsFromTheBucket(this, 'Consumer', {\n  // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n  bucket: deployment.deployedBucket,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":3,"75":19,"104":2,"130":1,"153":1,"169":1,"192":1,"193":2,"194":5,"196":2,"197":2,"225":2,"226":1,"242":2,"243":2,"281":3,"290":1},"fqnsFingerprint":"0e751bb9f22d17ea47c3dd4846c776e5cb57696ecb6950aa735395ffa8f249ee"},"6c4eb2b6519cbb2395fbbd626fb4d5168106695b0c713ad7d26a1660a76b3b1d":{"translations":{"python":{"source":"# website_bucket: s3.Bucket\n\n\ndeployment = s3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(path.join(__dirname, \"my-website\"))],\n    destination_bucket=website_bucket\n)\n\nConstructThatReadsFromTheBucket(self, \"Consumer\", {\n    # Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n    \"bucket\": deployment.deployed_bucket\n})","version":"2"},"csharp":{"source":"Bucket websiteBucket;\n\n\nvar deployment = new BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(Join(__dirname, \"my-website\")) },\n    DestinationBucket = websiteBucket\n});\n\nnew ConstructThatReadsFromTheBucket(this, \"Consumer\", new Dictionary<string, IBucket> {\n    // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n    { \"bucket\", deployment.DeployedBucket }\n});","version":"1"},"java":{"source":"Bucket websiteBucket;\n\n\nBucketDeployment deployment = BucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(join(__dirname, \"my-website\"))))\n        .destinationBucket(websiteBucket)\n        .build();\n\nnew ConstructThatReadsFromTheBucket(this, \"Consumer\", Map.of(\n        // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n        \"bucket\", deployment.getDeployedBucket()));","version":"1"},"go":{"source":"var websiteBucket bucket\n\n\ndeployment := s3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(path.join(__dirname, jsii.String(\"my-website\"))),\n\t},\n\tDestinationBucket: websiteBucket,\n})\n\nNewConstructThatReadsFromTheBucket(this, jsii.String(\"Consumer\"), map[string]iBucket{\n\t// Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n\t\"bucket\": deployment.deployedBucket,\n})","version":"1"},"$":{"source":"declare const websiteBucket: s3.Bucket;\n\nconst deployment = new s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket: websiteBucket,\n});\n\nnew ConstructThatReadsFromTheBucket(this, 'Consumer', {\n  // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n  bucket: deployment.deployedBucket,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.BucketDeploymentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const websiteBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst deployment = new s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket: websiteBucket,\n});\n\nnew ConstructThatReadsFromTheBucket(this, 'Consumer', {\n  // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n  bucket: deployment.deployedBucket,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":3,"75":19,"104":2,"130":1,"153":1,"169":1,"192":1,"193":2,"194":5,"196":2,"197":2,"225":2,"226":1,"242":2,"243":2,"281":3,"290":1},"fqnsFingerprint":"0e751bb9f22d17ea47c3dd4846c776e5cb57696ecb6950aa735395ffa8f249ee"},"962780dd45be99976498cdcff9e1ad5c6ee811717f296cec3908a49d177b1a02":{"translations":{"python":{"source":"# destination_bucket: s3.Bucket\n\ns3deploy.BucketDeployment(self, \"BucketDeployment\",\n    sources=[s3deploy.Source.asset(\"./website\", exclude=[\"index.html\"])],\n    destination_bucket=destination_bucket,\n    cache_control=[s3deploy.CacheControl.from_string(\"max-age=31536000,public,immutable\")],\n    prune=False\n)\n\ns3deploy.BucketDeployment(self, \"HTMLBucketDeployment\",\n    sources=[s3deploy.Source.asset(\"./website\", exclude=[\"*\", \"!index.html\"])],\n    destination_bucket=destination_bucket,\n    cache_control=[s3deploy.CacheControl.from_string(\"max-age=0,no-cache,no-store,must-revalidate\")],\n    prune=False\n)","version":"2"},"csharp":{"source":"Bucket destinationBucket;\n\nnew BucketDeployment(this, \"BucketDeployment\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website\", new AssetOptions { Exclude = new [] { \"index.html\" } }) },\n    DestinationBucket = destinationBucket,\n    CacheControl = new [] { CacheControl.FromString(\"max-age=31536000,public,immutable\") },\n    Prune = false\n});\n\nnew BucketDeployment(this, \"HTMLBucketDeployment\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website\", new AssetOptions { Exclude = new [] { \"*\", \"!index.html\" } }) },\n    DestinationBucket = destinationBucket,\n    CacheControl = new [] { CacheControl.FromString(\"max-age=0,no-cache,no-store,must-revalidate\") },\n    Prune = false\n});","version":"1"},"java":{"source":"Bucket destinationBucket;\n\nBucketDeployment.Builder.create(this, \"BucketDeployment\")\n        .sources(List.of(Source.asset(\"./website\", AssetOptions.builder().exclude(List.of(\"index.html\")).build())))\n        .destinationBucket(destinationBucket)\n        .cacheControl(List.of(CacheControl.fromString(\"max-age=31536000,public,immutable\")))\n        .prune(false)\n        .build();\n\nBucketDeployment.Builder.create(this, \"HTMLBucketDeployment\")\n        .sources(List.of(Source.asset(\"./website\", AssetOptions.builder().exclude(List.of(\"*\", \"!index.html\")).build())))\n        .destinationBucket(destinationBucket)\n        .cacheControl(List.of(CacheControl.fromString(\"max-age=0,no-cache,no-store,must-revalidate\")))\n        .prune(false)\n        .build();","version":"1"},"go":{"source":"var destinationBucket bucket\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"BucketDeployment\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website\"), &AssetOptions{\n\t\t\tExclude: []*string{\n\t\t\t\tjsii.String(\"index.html\"),\n\t\t\t},\n\t\t}),\n\t},\n\tDestinationBucket: DestinationBucket,\n\tCacheControl: []cacheControl{\n\t\ts3deploy.*cacheControl_FromString(jsii.String(\"max-age=31536000,public,immutable\")),\n\t},\n\tPrune: jsii.Boolean(false),\n})\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"HTMLBucketDeployment\"), &BucketDeploymentProps{\n\tSources: []*iSource{\n\t\ts3deploy.Source_*Asset(jsii.String(\"./website\"), &AssetOptions{\n\t\t\tExclude: []*string{\n\t\t\t\tjsii.String(\"*\"),\n\t\t\t\tjsii.String(\"!index.html\"),\n\t\t\t},\n\t\t}),\n\t},\n\tDestinationBucket: DestinationBucket,\n\tCacheControl: []*cacheControl{\n\t\ts3deploy.*cacheControl_*FromString(jsii.String(\"max-age=0,no-cache,no-store,must-revalidate\")),\n\t},\n\tPrune: jsii.Boolean(false),\n})","version":"1"},"$":{"source":"declare const destinationBucket: s3.Bucket;\nnew s3deploy.BucketDeployment(this, 'BucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['index.html'] })],\n  destinationBucket,\n  cacheControl: [s3deploy.CacheControl.fromString('max-age=31536000,public,immutable')],\n  prune: false,\n});\n\nnew s3deploy.BucketDeployment(this, 'HTMLBucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['*', '!index.html'] })],\n  destinationBucket,\n  cacheControl: [s3deploy.CacheControl.fromString('max-age=0,no-cache,no-store,must-revalidate')],\n  prune: false,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.CacheControl"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-assets.AssetOptions","@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.CacheControl","@aws-cdk/aws-s3-deployment.CacheControl#fromString","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destinationBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew s3deploy.BucketDeployment(this, 'BucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['index.html'] })],\n  destinationBucket,\n  cacheControl: [s3deploy.CacheControl.fromString('max-age=31536000,public,immutable')],\n  prune: false,\n});\n\nnew s3deploy.BucketDeployment(this, 'HTMLBucketDeployment', {\n  sources: [s3deploy.Source.asset('./website', { exclude: ['*', '!index.html'] })],\n  destinationBucket,\n  cacheControl: [s3deploy.CacheControl.fromString('max-age=0,no-cache,no-store,must-revalidate')],\n  prune: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":9,"75":29,"91":2,"104":2,"130":1,"153":1,"169":1,"192":6,"193":4,"194":10,"196":4,"197":2,"225":1,"226":2,"242":1,"243":1,"281":8,"282":2,"290":1},"fqnsFingerprint":"5d48021c41baf8d75b37fde59a00e8a53a19b9fbb1e624ce716e3b53cd84c207"},"886a9dc70be7e02a31803a4b542b32227ea1d22da9723991f6b939d560b590f4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_s3_deployment as s3_deployment\n\n# role: iam.Role\n\ndeployment_source_context = s3_deployment.DeploymentSourceContext(\n    handler_role=role\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.S3.Deployment;\n\nRole role;\n\nvar deploymentSourceContext = new DeploymentSourceContext {\n    HandlerRole = role\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.s3.deployment.*;\n\nRole role;\n\nDeploymentSourceContext deploymentSourceContext = DeploymentSourceContext.builder()\n        .handlerRole(role)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport s3_deployment \"github.com/aws-samples/dummy/awscdkawss3deployment\"\n\nvar role role\n\ndeploymentSourceContext := &DeploymentSourceContext{\n\tHandlerRole: role,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as s3_deployment from '@aws-cdk/aws-s3-deployment';\n\ndeclare const role: iam.Role;\nconst deploymentSourceContext: s3_deployment.DeploymentSourceContext = {\n  handlerRole: role,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.DeploymentSourceContext"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-iam.IRole","@aws-cdk/aws-s3-deployment.DeploymentSourceContext"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as s3_deployment from '@aws-cdk/aws-s3-deployment';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deploymentSourceContext: s3_deployment.DeploymentSourceContext = {\n  handlerRole: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":10,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":1,"290":1},"fqnsFingerprint":"212b14f54aca6c417a0e31f8b4e343f8aee291e1581b3f6ca18b6854082b19a5"},"8f32f458cafd6c2c9d4ae6548dd3e994dee39d4726a6c67a53bbd29ed1b0ef27":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3_deployment as s3_deployment\nimport aws_cdk.core as cdk\n\nexpires = s3_deployment.Expires.after(cdk.Duration.minutes(30))","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3.Deployment;\nusing Amazon.CDK;\nvar expires = Expires.After(Duration.Minutes(30));","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.deployment.*;\nimport software.amazon.awscdk.core.*;\n\nExpires expires = Expires.after(Duration.minutes(30));","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport s3_deployment \"github.com/aws-samples/dummy/awscdkawss3deployment\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nexpires := s3_deployment.Expires_After(cdk.Duration_Minutes(jsii.Number(30)))","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3_deployment from '@aws-cdk/aws-s3-deployment';\nimport * as cdk from '@aws-cdk/core';\nconst expires = s3_deployment.Expires.after(cdk.Duration.minutes(30));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.Expires"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.Expires","@aws-cdk/aws-s3-deployment.Expires#after","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3_deployment from '@aws-cdk/aws-s3-deployment';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst expires = s3_deployment.Expires.after(cdk.Duration.minutes(30));\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":2,"75":9,"194":4,"196":2,"225":1,"242":1,"243":1,"254":2,"255":2,"256":2,"290":1},"fqnsFingerprint":"81fa706b08ba3bb685f55356b66e5123131e4e67f0681c7d1fc3d84ab66c3d3d"},"092e229a00fc58d7a98a5fefaadc6b88d692c566e7c90cb3e10bcdbff5039243":{"translations":{"python":{"source":"website_bucket = s3.Bucket(self, \"WebsiteBucket\",\n    website_index_document=\"index.html\",\n    public_read_access=True\n)\n\ns3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(\"./website-dist\")],\n    destination_bucket=website_bucket,\n    destination_key_prefix=\"web/static\",  # optional prefix in destination bucket\n    metadata=s3deploy.UserDefinedObjectMetadata(A=\"1\", b=\"2\"),  # user-defined metadata\n\n    # system-defined metadata\n    content_type=\"text/html\",\n    content_language=\"en\",\n    storage_class=s3deploy.StorageClass.INTELLIGENT_TIERING,\n    server_side_encryption=s3deploy.ServerSideEncryption.AES_256,\n    cache_control=[\n        s3deploy.CacheControl.set_public(),\n        s3deploy.CacheControl.max_age(Duration.hours(1))\n    ],\n    access_control=s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL\n)","version":"2"},"csharp":{"source":"var websiteBucket = new Bucket(this, \"WebsiteBucket\", new BucketProps {\n    WebsiteIndexDocument = \"index.html\",\n    PublicReadAccess = true\n});\n\nnew BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website-dist\") },\n    DestinationBucket = websiteBucket,\n    DestinationKeyPrefix = \"web/static\",  // optional prefix in destination bucket\n    Metadata = new UserDefinedObjectMetadata { A = \"1\", B = \"2\" },  // user-defined metadata\n\n    // system-defined metadata\n    ContentType = \"text/html\",\n    ContentLanguage = \"en\",\n    StorageClass = StorageClass.INTELLIGENT_TIERING,\n    ServerSideEncryption = ServerSideEncryption.AES_256,\n    CacheControl = new [] { CacheControl.SetPublic(), CacheControl.MaxAge(Duration.Hours(1)) },\n    AccessControl = BucketAccessControl.BUCKET_OWNER_FULL_CONTROL\n});","version":"1"},"java":{"source":"Bucket websiteBucket = Bucket.Builder.create(this, \"WebsiteBucket\")\n        .websiteIndexDocument(\"index.html\")\n        .publicReadAccess(true)\n        .build();\n\nBucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(\"./website-dist\")))\n        .destinationBucket(websiteBucket)\n        .destinationKeyPrefix(\"web/static\") // optional prefix in destination bucket\n        .metadata(UserDefinedObjectMetadata.builder().A(\"1\").b(\"2\").build()) // user-defined metadata\n\n        // system-defined metadata\n        .contentType(\"text/html\")\n        .contentLanguage(\"en\")\n        .storageClass(StorageClass.INTELLIGENT_TIERING)\n        .serverSideEncryption(ServerSideEncryption.AES_256)\n        .cacheControl(List.of(CacheControl.setPublic(), CacheControl.maxAge(Duration.hours(1))))\n        .accessControl(BucketAccessControl.BUCKET_OWNER_FULL_CONTROL)\n        .build();","version":"1"},"go":{"source":"websiteBucket := s3.NewBucket(this, jsii.String(\"WebsiteBucket\"), &BucketProps{\n\tWebsiteIndexDocument: jsii.String(\"index.html\"),\n\tPublicReadAccess: jsii.Boolean(true),\n})\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website-dist\")),\n\t},\n\tDestinationBucket: websiteBucket,\n\tDestinationKeyPrefix: jsii.String(\"web/static\"),\n\t // optional prefix in destination bucket\n\tMetadata: &UserDefinedObjectMetadata{\n\t\tA: jsii.String(\"1\"),\n\t\tB: jsii.String(\"2\"),\n\t},\n\t // user-defined metadata\n\n\t// system-defined metadata\n\tContentType: jsii.String(\"text/html\"),\n\tContentLanguage: jsii.String(\"en\"),\n\tStorageClass: s3deploy.StorageClass_INTELLIGENT_TIERING,\n\tServerSideEncryption: s3deploy.ServerSideEncryption_AES_256,\n\tCacheControl: []cacheControl{\n\t\ts3deploy.*cacheControl_SetPublic(),\n\t\ts3deploy.*cacheControl_MaxAge(awscdkcore.Duration_Hours(jsii.Number(1))),\n\t},\n\tAccessControl: s3.BucketAccessControl_BUCKET_OWNER_FULL_CONTROL,\n})","version":"1"},"$":{"source":"const websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: s3deploy.StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: s3deploy.ServerSideEncryption.AES_256,\n  cacheControl: [\n    s3deploy.CacheControl.setPublic(),\n    s3deploy.CacheControl.maxAge(Duration.hours(1)),\n  ],\n  accessControl: s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.ServerSideEncryption"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.CacheControl","@aws-cdk/aws-s3-deployment.CacheControl#maxAge","@aws-cdk/aws-s3-deployment.CacheControl#setPublic","@aws-cdk/aws-s3-deployment.ServerSideEncryption","@aws-cdk/aws-s3-deployment.ServerSideEncryption#AES_256","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3-deployment.StorageClass","@aws-cdk/aws-s3-deployment.StorageClass#INTELLIGENT_TIERING","@aws-cdk/aws-s3-deployment.UserDefinedObjectMetadata","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.BucketAccessControl","@aws-cdk/aws-s3.BucketAccessControl#BUCKET_OWNER_FULL_CONTROL","@aws-cdk/aws-s3.BucketProps","@aws-cdk/aws-s3.IBucket","@aws-cdk/core.Duration","@aws-cdk/core.Duration#hours","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: s3deploy.StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: s3deploy.ServerSideEncryption.AES_256,\n  cacheControl: [\n    s3deploy.CacheControl.setPublic(),\n    s3deploy.CacheControl.maxAge(Duration.hours(1)),\n  ],\n  accessControl: s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"8":1,"10":9,"75":40,"104":2,"106":1,"192":2,"193":3,"194":15,"196":4,"197":2,"225":1,"226":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"5d235be89927b40b9b646b3624fd753b99e3d7bb90a784b80424ddd6a05b9f10"},"777d634f626304c7697982c4a6d5131ef8215a1d9bb199da82d74da805d002d3":{"translations":{"python":{"source":"# website_bucket: s3.Bucket\n\n\ndeployment = s3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(path.join(__dirname, \"my-website\"))],\n    destination_bucket=website_bucket\n)\n\nConstructThatReadsFromTheBucket(self, \"Consumer\", {\n    # Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n    \"bucket\": deployment.deployed_bucket\n})","version":"2"},"csharp":{"source":"Bucket websiteBucket;\n\n\nvar deployment = new BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(Join(__dirname, \"my-website\")) },\n    DestinationBucket = websiteBucket\n});\n\nnew ConstructThatReadsFromTheBucket(this, \"Consumer\", new Dictionary<string, IBucket> {\n    // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n    { \"bucket\", deployment.DeployedBucket }\n});","version":"1"},"java":{"source":"Bucket websiteBucket;\n\n\nBucketDeployment deployment = BucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(join(__dirname, \"my-website\"))))\n        .destinationBucket(websiteBucket)\n        .build();\n\nnew ConstructThatReadsFromTheBucket(this, \"Consumer\", Map.of(\n        // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n        \"bucket\", deployment.getDeployedBucket()));","version":"1"},"go":{"source":"var websiteBucket bucket\n\n\ndeployment := s3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(path.join(__dirname, jsii.String(\"my-website\"))),\n\t},\n\tDestinationBucket: websiteBucket,\n})\n\nNewConstructThatReadsFromTheBucket(this, jsii.String(\"Consumer\"), map[string]iBucket{\n\t// Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n\t\"bucket\": deployment.deployedBucket,\n})","version":"1"},"$":{"source":"declare const websiteBucket: s3.Bucket;\n\nconst deployment = new s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket: websiteBucket,\n});\n\nnew ConstructThatReadsFromTheBucket(this, 'Consumer', {\n  // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n  bucket: deployment.deployedBucket,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.Source"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const websiteBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst deployment = new s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n  destinationBucket: websiteBucket,\n});\n\nnew ConstructThatReadsFromTheBucket(this, 'Consumer', {\n  // Use 'deployment.deployedBucket' instead of 'websiteBucket' here\n  bucket: deployment.deployedBucket,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"10":3,"75":19,"104":2,"130":1,"153":1,"169":1,"192":1,"193":2,"194":5,"196":2,"197":2,"225":2,"226":1,"242":2,"243":2,"281":3,"290":1},"fqnsFingerprint":"0e751bb9f22d17ea47c3dd4846c776e5cb57696ecb6950aa735395ffa8f249ee"},"44d98c4950766b545ff390a08b586685f75c0275322b5008f31ed252c6b98b8c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.aws_s3_deployment as s3_deployment\n\n# bucket: s3.Bucket\n# markers: Any\n\nsource_config = s3_deployment.SourceConfig(\n    bucket=bucket,\n    zip_object_key=\"zipObjectKey\",\n\n    # the properties below are optional\n    markers={\n        \"markers_key\": markers\n    }\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK.AWS.S3.Deployment;\n\nBucket bucket;\nvar markers;\n\nvar sourceConfig = new SourceConfig {\n    Bucket = bucket,\n    ZipObjectKey = \"zipObjectKey\",\n\n    // the properties below are optional\n    Markers = new Dictionary<string, object> {\n        { \"markersKey\", markers }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.services.s3.deployment.*;\n\nBucket bucket;\nObject markers;\n\nSourceConfig sourceConfig = SourceConfig.builder()\n        .bucket(bucket)\n        .zipObjectKey(\"zipObjectKey\")\n\n        // the properties below are optional\n        .markers(Map.of(\n                \"markersKey\", markers))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nimport s3_deployment \"github.com/aws-samples/dummy/awscdkawss3deployment\"\n\nvar bucket bucket\nvar markers interface{}\n\nsourceConfig := &SourceConfig{\n\tBucket: bucket,\n\tZipObjectKey: jsii.String(\"zipObjectKey\"),\n\n\t// the properties below are optional\n\tMarkers: map[string]interface{}{\n\t\t\"markersKey\": markers,\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as s3_deployment from '@aws-cdk/aws-s3-deployment';\n\ndeclare const bucket: s3.Bucket;\ndeclare const markers: any;\nconst sourceConfig: s3_deployment.SourceConfig = {\n  bucket: bucket,\n  zipObjectKey: 'zipObjectKey',\n\n  // the properties below are optional\n  markers: {\n    markersKey: markers,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.SourceConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.SourceConfig","@aws-cdk/aws-s3.IBucket"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as s3_deployment from '@aws-cdk/aws-s3-deployment';\n\ndeclare const bucket: s3.Bucket;\ndeclare const markers: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sourceConfig: s3_deployment.SourceConfig = {\n  bucket: bucket,\n  zipObjectKey: 'zipObjectKey',\n\n  // the properties below are optional\n  markers: {\n    markersKey: markers,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":15,"125":1,"130":2,"153":2,"169":2,"193":2,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":4,"290":1},"fqnsFingerprint":"ea375ebbc2b1f0aefbbe175406b5e348b147bf4271f8dd1523a5b61cb2f63dc0"},"78ca29567a906e55ff5e509593478f4e8906d3ab48a11576e700ae5103f893c4":{"translations":{"python":{"source":"website_bucket = s3.Bucket(self, \"WebsiteBucket\",\n    website_index_document=\"index.html\",\n    public_read_access=True\n)\n\ns3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(\"./website-dist\")],\n    destination_bucket=website_bucket,\n    destination_key_prefix=\"web/static\",  # optional prefix in destination bucket\n    metadata=s3deploy.UserDefinedObjectMetadata(A=\"1\", b=\"2\"),  # user-defined metadata\n\n    # system-defined metadata\n    content_type=\"text/html\",\n    content_language=\"en\",\n    storage_class=s3deploy.StorageClass.INTELLIGENT_TIERING,\n    server_side_encryption=s3deploy.ServerSideEncryption.AES_256,\n    cache_control=[\n        s3deploy.CacheControl.set_public(),\n        s3deploy.CacheControl.max_age(Duration.hours(1))\n    ],\n    access_control=s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL\n)","version":"2"},"csharp":{"source":"var websiteBucket = new Bucket(this, \"WebsiteBucket\", new BucketProps {\n    WebsiteIndexDocument = \"index.html\",\n    PublicReadAccess = true\n});\n\nnew BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website-dist\") },\n    DestinationBucket = websiteBucket,\n    DestinationKeyPrefix = \"web/static\",  // optional prefix in destination bucket\n    Metadata = new UserDefinedObjectMetadata { A = \"1\", B = \"2\" },  // user-defined metadata\n\n    // system-defined metadata\n    ContentType = \"text/html\",\n    ContentLanguage = \"en\",\n    StorageClass = StorageClass.INTELLIGENT_TIERING,\n    ServerSideEncryption = ServerSideEncryption.AES_256,\n    CacheControl = new [] { CacheControl.SetPublic(), CacheControl.MaxAge(Duration.Hours(1)) },\n    AccessControl = BucketAccessControl.BUCKET_OWNER_FULL_CONTROL\n});","version":"1"},"java":{"source":"Bucket websiteBucket = Bucket.Builder.create(this, \"WebsiteBucket\")\n        .websiteIndexDocument(\"index.html\")\n        .publicReadAccess(true)\n        .build();\n\nBucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(\"./website-dist\")))\n        .destinationBucket(websiteBucket)\n        .destinationKeyPrefix(\"web/static\") // optional prefix in destination bucket\n        .metadata(UserDefinedObjectMetadata.builder().A(\"1\").b(\"2\").build()) // user-defined metadata\n\n        // system-defined metadata\n        .contentType(\"text/html\")\n        .contentLanguage(\"en\")\n        .storageClass(StorageClass.INTELLIGENT_TIERING)\n        .serverSideEncryption(ServerSideEncryption.AES_256)\n        .cacheControl(List.of(CacheControl.setPublic(), CacheControl.maxAge(Duration.hours(1))))\n        .accessControl(BucketAccessControl.BUCKET_OWNER_FULL_CONTROL)\n        .build();","version":"1"},"go":{"source":"websiteBucket := s3.NewBucket(this, jsii.String(\"WebsiteBucket\"), &BucketProps{\n\tWebsiteIndexDocument: jsii.String(\"index.html\"),\n\tPublicReadAccess: jsii.Boolean(true),\n})\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website-dist\")),\n\t},\n\tDestinationBucket: websiteBucket,\n\tDestinationKeyPrefix: jsii.String(\"web/static\"),\n\t // optional prefix in destination bucket\n\tMetadata: &UserDefinedObjectMetadata{\n\t\tA: jsii.String(\"1\"),\n\t\tB: jsii.String(\"2\"),\n\t},\n\t // user-defined metadata\n\n\t// system-defined metadata\n\tContentType: jsii.String(\"text/html\"),\n\tContentLanguage: jsii.String(\"en\"),\n\tStorageClass: s3deploy.StorageClass_INTELLIGENT_TIERING,\n\tServerSideEncryption: s3deploy.ServerSideEncryption_AES_256,\n\tCacheControl: []cacheControl{\n\t\ts3deploy.*cacheControl_SetPublic(),\n\t\ts3deploy.*cacheControl_MaxAge(awscdkcore.Duration_Hours(jsii.Number(1))),\n\t},\n\tAccessControl: s3.BucketAccessControl_BUCKET_OWNER_FULL_CONTROL,\n})","version":"1"},"$":{"source":"const websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: s3deploy.StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: s3deploy.ServerSideEncryption.AES_256,\n  cacheControl: [\n    s3deploy.CacheControl.setPublic(),\n    s3deploy.CacheControl.maxAge(Duration.hours(1)),\n  ],\n  accessControl: s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.StorageClass"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.CacheControl","@aws-cdk/aws-s3-deployment.CacheControl#maxAge","@aws-cdk/aws-s3-deployment.CacheControl#setPublic","@aws-cdk/aws-s3-deployment.ServerSideEncryption","@aws-cdk/aws-s3-deployment.ServerSideEncryption#AES_256","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3-deployment.StorageClass","@aws-cdk/aws-s3-deployment.StorageClass#INTELLIGENT_TIERING","@aws-cdk/aws-s3-deployment.UserDefinedObjectMetadata","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.BucketAccessControl","@aws-cdk/aws-s3.BucketAccessControl#BUCKET_OWNER_FULL_CONTROL","@aws-cdk/aws-s3.BucketProps","@aws-cdk/aws-s3.IBucket","@aws-cdk/core.Duration","@aws-cdk/core.Duration#hours","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: s3deploy.StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: s3deploy.ServerSideEncryption.AES_256,\n  cacheControl: [\n    s3deploy.CacheControl.setPublic(),\n    s3deploy.CacheControl.maxAge(Duration.hours(1)),\n  ],\n  accessControl: s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"8":1,"10":9,"75":40,"104":2,"106":1,"192":2,"193":3,"194":15,"196":4,"197":2,"225":1,"226":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"5d235be89927b40b9b646b3624fd753b99e3d7bb90a784b80424ddd6a05b9f10"},"203fa2b4173df936e01feab061c6f225a15099b4c6b78b388e40982b96876057":{"translations":{"python":{"source":"website_bucket = s3.Bucket(self, \"WebsiteBucket\",\n    website_index_document=\"index.html\",\n    public_read_access=True\n)\n\ns3deploy.BucketDeployment(self, \"DeployWebsite\",\n    sources=[s3deploy.Source.asset(\"./website-dist\")],\n    destination_bucket=website_bucket,\n    destination_key_prefix=\"web/static\",  # optional prefix in destination bucket\n    metadata=s3deploy.UserDefinedObjectMetadata(A=\"1\", b=\"2\"),  # user-defined metadata\n\n    # system-defined metadata\n    content_type=\"text/html\",\n    content_language=\"en\",\n    storage_class=s3deploy.StorageClass.INTELLIGENT_TIERING,\n    server_side_encryption=s3deploy.ServerSideEncryption.AES_256,\n    cache_control=[\n        s3deploy.CacheControl.set_public(),\n        s3deploy.CacheControl.max_age(Duration.hours(1))\n    ],\n    access_control=s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL\n)","version":"2"},"csharp":{"source":"var websiteBucket = new Bucket(this, \"WebsiteBucket\", new BucketProps {\n    WebsiteIndexDocument = \"index.html\",\n    PublicReadAccess = true\n});\n\nnew BucketDeployment(this, \"DeployWebsite\", new BucketDeploymentProps {\n    Sources = new [] { Source.Asset(\"./website-dist\") },\n    DestinationBucket = websiteBucket,\n    DestinationKeyPrefix = \"web/static\",  // optional prefix in destination bucket\n    Metadata = new UserDefinedObjectMetadata { A = \"1\", B = \"2\" },  // user-defined metadata\n\n    // system-defined metadata\n    ContentType = \"text/html\",\n    ContentLanguage = \"en\",\n    StorageClass = StorageClass.INTELLIGENT_TIERING,\n    ServerSideEncryption = ServerSideEncryption.AES_256,\n    CacheControl = new [] { CacheControl.SetPublic(), CacheControl.MaxAge(Duration.Hours(1)) },\n    AccessControl = BucketAccessControl.BUCKET_OWNER_FULL_CONTROL\n});","version":"1"},"java":{"source":"Bucket websiteBucket = Bucket.Builder.create(this, \"WebsiteBucket\")\n        .websiteIndexDocument(\"index.html\")\n        .publicReadAccess(true)\n        .build();\n\nBucketDeployment.Builder.create(this, \"DeployWebsite\")\n        .sources(List.of(Source.asset(\"./website-dist\")))\n        .destinationBucket(websiteBucket)\n        .destinationKeyPrefix(\"web/static\") // optional prefix in destination bucket\n        .metadata(UserDefinedObjectMetadata.builder().A(\"1\").b(\"2\").build()) // user-defined metadata\n\n        // system-defined metadata\n        .contentType(\"text/html\")\n        .contentLanguage(\"en\")\n        .storageClass(StorageClass.INTELLIGENT_TIERING)\n        .serverSideEncryption(ServerSideEncryption.AES_256)\n        .cacheControl(List.of(CacheControl.setPublic(), CacheControl.maxAge(Duration.hours(1))))\n        .accessControl(BucketAccessControl.BUCKET_OWNER_FULL_CONTROL)\n        .build();","version":"1"},"go":{"source":"websiteBucket := s3.NewBucket(this, jsii.String(\"WebsiteBucket\"), &BucketProps{\n\tWebsiteIndexDocument: jsii.String(\"index.html\"),\n\tPublicReadAccess: jsii.Boolean(true),\n})\n\ns3deploy.NewBucketDeployment(this, jsii.String(\"DeployWebsite\"), &BucketDeploymentProps{\n\tSources: []iSource{\n\t\ts3deploy.Source_Asset(jsii.String(\"./website-dist\")),\n\t},\n\tDestinationBucket: websiteBucket,\n\tDestinationKeyPrefix: jsii.String(\"web/static\"),\n\t // optional prefix in destination bucket\n\tMetadata: &UserDefinedObjectMetadata{\n\t\tA: jsii.String(\"1\"),\n\t\tB: jsii.String(\"2\"),\n\t},\n\t // user-defined metadata\n\n\t// system-defined metadata\n\tContentType: jsii.String(\"text/html\"),\n\tContentLanguage: jsii.String(\"en\"),\n\tStorageClass: s3deploy.StorageClass_INTELLIGENT_TIERING,\n\tServerSideEncryption: s3deploy.ServerSideEncryption_AES_256,\n\tCacheControl: []cacheControl{\n\t\ts3deploy.*cacheControl_SetPublic(),\n\t\ts3deploy.*cacheControl_MaxAge(awscdkcore.Duration_Hours(jsii.Number(1))),\n\t},\n\tAccessControl: s3.BucketAccessControl_BUCKET_OWNER_FULL_CONTROL,\n})","version":"1"},"$":{"source":"const websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: s3deploy.StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: s3deploy.ServerSideEncryption.AES_256,\n  cacheControl: [\n    s3deploy.CacheControl.setPublic(),\n    s3deploy.CacheControl.maxAge(Duration.hours(1)),\n  ],\n  accessControl: s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-s3-deployment.UserDefinedObjectMetadata"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-s3-deployment.BucketDeployment","@aws-cdk/aws-s3-deployment.BucketDeploymentProps","@aws-cdk/aws-s3-deployment.CacheControl","@aws-cdk/aws-s3-deployment.CacheControl#maxAge","@aws-cdk/aws-s3-deployment.CacheControl#setPublic","@aws-cdk/aws-s3-deployment.ServerSideEncryption","@aws-cdk/aws-s3-deployment.ServerSideEncryption#AES_256","@aws-cdk/aws-s3-deployment.Source","@aws-cdk/aws-s3-deployment.Source#asset","@aws-cdk/aws-s3-deployment.StorageClass","@aws-cdk/aws-s3-deployment.StorageClass#INTELLIGENT_TIERING","@aws-cdk/aws-s3-deployment.UserDefinedObjectMetadata","@aws-cdk/aws-s3.Bucket","@aws-cdk/aws-s3.BucketAccessControl","@aws-cdk/aws-s3.BucketAccessControl#BUCKET_OWNER_FULL_CONTROL","@aws-cdk/aws-s3.BucketProps","@aws-cdk/aws-s3.IBucket","@aws-cdk/core.Duration","@aws-cdk/core.Duration#hours","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as s3deploy from '@aws-cdk/aws-s3-deployment';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from'@aws-cdk/aws-ec2';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst websiteBucket = new s3.Bucket(this, 'WebsiteBucket', {\n  websiteIndexDocument: 'index.html',\n  publicReadAccess: true,\n});\n\nnew s3deploy.BucketDeployment(this, 'DeployWebsite', {\n  sources: [s3deploy.Source.asset('./website-dist')],\n  destinationBucket: websiteBucket,\n  destinationKeyPrefix: 'web/static', // optional prefix in destination bucket\n  metadata: { A: \"1\", b: \"2\" }, // user-defined metadata\n\n  // system-defined metadata\n  contentType: \"text/html\",\n  contentLanguage: \"en\",\n  storageClass: s3deploy.StorageClass.INTELLIGENT_TIERING,\n  serverSideEncryption: s3deploy.ServerSideEncryption.AES_256,\n  cacheControl: [\n    s3deploy.CacheControl.setPublic(),\n    s3deploy.CacheControl.maxAge(Duration.hours(1)),\n  ],\n  accessControl: s3.BucketAccessControl.BUCKET_OWNER_FULL_CONTROL,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\nclass ConstructThatReadsFromTheBucket {\n  constructor(...args: any[]) {\n  }\n}","syntaxKindCounter":{"8":1,"10":9,"75":40,"104":2,"106":1,"192":2,"193":3,"194":15,"196":4,"197":2,"225":1,"226":1,"242":1,"243":1,"281":14},"fqnsFingerprint":"5d235be89927b40b9b646b3624fd753b99e3d7bb90a784b80424ddd6a05b9f10"}}}