{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-certificatemanager": "1.204.0",
    "@aws-cdk/aws-cloudwatch": "1.204.0",
    "@aws-cdk/aws-ec2": "1.204.0",
    "@aws-cdk/aws-iam": "1.204.0",
    "@aws-cdk/aws-kms": "1.204.0",
    "@aws-cdk/aws-lambda": "1.204.0",
    "@aws-cdk/aws-s3": "1.204.0",
    "@aws-cdk/aws-ssm": "1.204.0",
    "@aws-cdk/core": "1.204.0",
    "@aws-cdk/cx-api": "1.204.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::CloudFront",
  "docs": {
    "deprecated": "AWS CDK v1 has reached End-of-Support on 2023-06-01.\nThis package is no longer being updated, and users should migrate to AWS CDK v2.\n\nFor more information on how to migrate, see https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html",
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.84.0 (build 5404dcf)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "cloudfront"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-cloudfront",
  "readme": {
    "markdown": "# Amazon CloudFront Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![End-of-Support](https://img.shields.io/badge/End--of--Support-critical.svg?style=for-the-badge)\n\n> AWS CDK v1 has reached End-of-Support on 2023-06-01.\n> This package is no longer being updated, and users should migrate to AWS CDK v2.\n>\n> For more information on how to migrate, see the [_Migrating to AWS CDK v2_ guide][doc].\n>\n> [doc]: https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html\n\n---\n\n<!--END STABILITY BANNER-->\n\nAmazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, such as .html, .css, .js, and image files, to\nyour users. CloudFront delivers your content through a worldwide network of data centers called edge locations. When a user requests content that\nyou're serving with CloudFront, the user is routed to the edge location that provides the lowest latency, so that content is delivered with the best\npossible performance.\n\n## Distribution API\n\nThe `Distribution` API is currently being built to replace the existing `CloudFrontWebDistribution` API. The `Distribution` API is optimized for the\nmost common use cases of CloudFront distributions (e.g., single origin and behavior, few customizations) while still providing the ability for more\nadvanced use cases. The API focuses on simplicity for the common use cases, and convenience methods for creating the behaviors and origins necessary\nfor more complex use cases.\n\n### Creating a distribution\n\nCloudFront distributions deliver your content from one or more origins; an origin is the location where you store the original version of your\ncontent. Origins can be created from S3 buckets or a custom origin (HTTP server). Constructs to define origins are in the `@aws-cdk/aws-cloudfront-origins` module.\n\nEach distribution has a default behavior which applies to all requests to that distribution, and routes requests to a primary origin.\nAdditional behaviors may be specified for an origin with a given URL path pattern. Behaviors allow routing with multiple origins,\ncontrolling which HTTP methods to support, whether to require users to use HTTPS, and what query strings or cookies to forward to your origin,\namong other settings.\n\n#### From an S3 Bucket\n\nAn S3 bucket can be added as an origin. If the bucket is configured as a website endpoint, the distribution can use S3 redirects and S3 custom error\ndocuments.\n\n```ts\n// Creates a distribution from an S3 bucket.\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n});\n```\n\nThe above will treat the bucket differently based on if `IBucket.isWebsite` is set or not. If the bucket is configured as a website, the bucket is\ntreated as an HTTP origin, and the built-in S3 redirects and error pages can be used. Otherwise, the bucket is handled as a bucket origin and\nCloudFront's redirect and error handling will be used. In the latter case, the Origin will create an origin access identity and grant it access to the\nunderlying bucket. This can be used in conjunction with a bucket that is not public to require that your users access your content using CloudFront\nURLs and not S3 URLs directly.\n\n#### ELBv2 Load Balancer\n\nAn Elastic Load Balancing (ELB) v2 load balancer may be used as an origin. In order for a load balancer to serve as an origin, it must be publicly\naccessible (`internetFacing` is true). Both Application and Network load balancers are supported.\n\n```ts\n// Creates a distribution from an ELBv2 load balancer\ndeclare const vpc: ec2.Vpc;\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});\n```\n\n#### From an HTTP endpoint\n\nOrigins can also be created from any other HTTP endpoint, given the domain name, and optionally, other origin properties.\n\n```ts\n// Creates a distribution from an HTTP endpoint\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n});\n```\n\n### Domain Names and Certificates\n\nWhen you create a distribution, CloudFront assigns a domain name for the distribution, for example: `d111111abcdef8.cloudfront.net`; this value can\nbe retrieved from `distribution.distributionDomainName`. CloudFront distributions use a default certificate (`*.cloudfront.net`) to support HTTPS by\ndefault. If you want to use your own domain name, such as `www.example.com`, you must associate a certificate with your distribution that contains\nyour domain name, and provide one (or more) domain names from the certificate for the distribution.\n\nThe certificate must be present in the AWS Certificate Manager (ACM) service in the US East (N. Virginia) region; the certificate\nmay either be created by ACM, or created elsewhere and imported into ACM. When a certificate is used, the distribution will support HTTPS connections\nfrom SNI only and a minimum protocol version of TLSv1.2_2021 if the `@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021` feature flag is set, and TLSv1.2_2019 otherwise.\n\n```ts\n// To use your own domain name in a Distribution, you must associate a certificate\nimport * as acm from '@aws-cdk/aws-certificatemanager';\nimport * as route53 from '@aws-cdk/aws-route53';\n\ndeclare const hostedZone: route53.HostedZone;\nconst myCertificate = new acm.DnsValidatedCertificate(this, 'mySiteCert', {\n  domainName: 'www.example.com',\n  hostedZone,\n});\n\ndeclare const myBucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n  domainNames: ['www.example.com'],\n  certificate: myCertificate,\n});\n```\n\nHowever, you can customize the minimum protocol version for the certificate while creating the distribution using `minimumProtocolVersion` property.\n\n```ts\n// Create a Distribution with a custom domain name and a minimum protocol version.\ndeclare const myBucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n  domainNames: ['www.example.com'],\n  minimumProtocolVersion: cloudfront.SecurityPolicyProtocol.TLS_V1_2016,\n  sslSupportMethod: cloudfront.SSLMethod.SNI,\n});\n```\n\n### Multiple Behaviors & Origins\n\nEach distribution has a default behavior which applies to all requests to that distribution; additional behaviors may be specified for a\ngiven URL path pattern. Behaviors allow routing with multiple origins, controlling which HTTP methods to support, whether to require users to\nuse HTTPS, and what query strings or cookies to forward to your origin, among others.\n\nThe properties of the default behavior can be adjusted as part of the distribution creation. The following example shows configuring the HTTP\nmethods and viewer protocol policy of the cache.\n\n```ts\n// Create a Distribution with configured HTTP methods and viewer protocol policy of the cache.\ndeclare const myBucket: s3.Bucket;\nconst myWebDistribution = new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    allowedMethods: cloudfront.AllowedMethods.ALLOW_ALL,\n    viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n  },\n});\n```\n\nAdditional behaviors can be specified at creation, or added after the initial creation. Each additional behavior is associated with an origin,\nand enable customization for a specific set of resources based on a URL path pattern. For example, we can add a behavior to `myWebDistribution` to\noverride the default viewer protocol policy for all of the images.\n\n```ts\n// Add a behavior to a Distribution after initial creation.\ndeclare const myBucket: s3.Bucket;\ndeclare const myWebDistribution: cloudfront.Distribution;\nmyWebDistribution.addBehavior('/images/*.jpg', new origins.S3Origin(myBucket), {\n  viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n});\n```\n\nThese behaviors can also be specified at distribution creation time.\n\n```ts\n// Create a Distribution with additional behaviors at creation time.\ndeclare const myBucket: s3.Bucket;\nconst bucketOrigin = new origins.S3Origin(myBucket);\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    allowedMethods: cloudfront.AllowedMethods.ALLOW_ALL,\n    viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n  },\n  additionalBehaviors: {\n    '/images/*.jpg': {\n      origin: bucketOrigin,\n      viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n    },\n  },\n});\n```\n\n### Customizing Cache Keys and TTLs with Cache Policies\n\nYou can use a cache policy to improve your cache hit ratio by controlling the values (URL query strings, HTTP headers, and cookies)\nthat are included in the cache key, and/or adjusting how long items remain in the cache via the time-to-live (TTL) settings.\nCloudFront provides some predefined cache policies, known as managed policies, for common use cases. You can use these managed policies,\nor you can create your own cache policy that’s specific to your needs.\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html for more details.\n\n```ts\n// Using an existing cache policy for a Distribution\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: cloudfront.CachePolicy.CACHING_OPTIMIZED,\n  },\n});\n```\n\n```ts\n// Creating a custom cache policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myCachePolicy = new cloudfront.CachePolicy(this, 'myCachePolicy', {\n  cachePolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  defaultTtl: Duration.days(2),\n  minTtl: Duration.minutes(1),\n  maxTtl: Duration.days(10),\n  cookieBehavior: cloudfront.CacheCookieBehavior.all(),\n  headerBehavior: cloudfront.CacheHeaderBehavior.allowList('X-CustomHeader'),\n  queryStringBehavior: cloudfront.CacheQueryStringBehavior.denyList('username'),\n  enableAcceptEncodingGzip: true,\n  enableAcceptEncodingBrotli: true,\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: myCachePolicy,\n  },\n});\n```\n\n### Customizing Origin Requests with Origin Request Policies\n\nWhen CloudFront makes a request to an origin, the URL path, request body (if present), and a few standard headers are included.\nOther information from the viewer request, such as URL query strings, HTTP headers, and cookies, is not included in the origin request by default.\nYou can use an origin request policy to control the information that’s included in an origin request.\nCloudFront provides some predefined origin request policies, known as managed policies, for common use cases. You can use these managed policies,\nor you can create your own origin request policy that’s specific to your needs.\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html for more details.\n\n```ts\n// Using an existing origin request policy for a Distribution\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    originRequestPolicy: cloudfront.OriginRequestPolicy.CORS_S3_ORIGIN,\n  },\n});\n```\n\n```ts\n// Creating a custom origin request policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myOriginRequestPolicy = new cloudfront.OriginRequestPolicy(this, 'OriginRequestPolicy', {\n  originRequestPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  cookieBehavior: cloudfront.OriginRequestCookieBehavior.none(),\n  headerBehavior: cloudfront.OriginRequestHeaderBehavior.all('CloudFront-Is-Android-Viewer'),\n  queryStringBehavior: cloudfront.OriginRequestQueryStringBehavior.allowList('username'),\n});\n\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    originRequestPolicy: myOriginRequestPolicy,\n  },\n});\n```\n\n### Customizing Response Headers with Response Headers Policies\n\nYou can configure CloudFront to add one or more HTTP headers to the responses that it sends to viewers (web browsers or other clients), without making any changes to the origin or writing any code.\nTo specify the headers that CloudFront adds to HTTP responses, you use a response headers policy. CloudFront adds the headers regardless of whether it serves the object from the cache or has to retrieve the object from the origin. If the origin response includes one or more of the headers that’s in a response headers policy, the policy can specify whether CloudFront uses the header it received from the origin or overwrites it with the one in the policy.\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/adding-response-headers.html\n\n```ts\n// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});\n```\n\n### Validating signed URLs or signed cookies with Trusted Key Groups\n\nCloudFront Distribution supports validating signed URLs or signed cookies using key groups.\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed\ncookies for all requests that match the cache behavior.\n\n```ts\n// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\ndeclare const publicKey: string;\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(this, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});\n```\n\n### Lambda@Edge\n\nLambda@Edge is an extension of AWS Lambda, a compute service that lets you execute\nfunctions that customize the content that CloudFront delivers. You can author Node.js\nor Python functions in the US East (N. Virginia) region, and then execute them in AWS\nlocations globally that are closer to the viewer, without provisioning or managing servers.\nLambda@Edge functions are associated with a specific behavior and event type. Lambda@Edge\ncan be used to rewrite URLs, alter responses based on headers or cookies, or authorize\nrequests based on headers or authorization tokens.\n\nThe following shows a Lambda@Edge function added to the default behavior and triggered\non every request:\n\n```ts\n// A Lambda@Edge function added to default behavior of a Distribution\n// and triggered on every request\nconst myFunc = new cloudfront.experimental.EdgeFunction(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n\ndeclare const myBucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    edgeLambdas: [\n      {\n        functionVersion: myFunc.currentVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      }\n    ],\n  },\n});\n```\n\n> **Note:** Lambda@Edge functions must be created in the `us-east-1` region, regardless of the region of the CloudFront distribution and stack.\n> To make it easier to request functions for Lambda@Edge, the `EdgeFunction` construct can be used.\n> The `EdgeFunction` construct will automatically request a function in `us-east-1`, regardless of the region of the current stack.\n> `EdgeFunction` has the same interface as `Function` and can be created and used interchangeably.\n> Please note that using `EdgeFunction` requires that the `us-east-1` region has been bootstrapped.\n> See https://docs.aws.amazon.com/cdk/latest/guide/bootstrapping.html for more about bootstrapping regions.\n\nIf the stack is in `us-east-1`, a \"normal\" `lambda.Function` can be used instead of an `EdgeFunction`.\n\n```ts\n// Using a lambda Function instead of an EdgeFunction for stacks in `us-east-`.\nconst myFunc = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n```\n\nIf the stack is not in `us-east-1`, and you need references from different applications on the same account,\nyou can also set a specific stack ID for each Lambda@Edge.\n\n```ts\n// Setting stackIds for EdgeFunctions that can be referenced from different applications\n// on the same account.\nconst myFunc1 = new cloudfront.experimental.EdgeFunction(this, 'MyFunction1', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler1')),\n  stackId: 'edge-lambda-stack-id-1',\n});\n\nconst myFunc2 = new cloudfront.experimental.EdgeFunction(this, 'MyFunction2', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler2')),\n  stackId: 'edge-lambda-stack-id-2',\n});\n```\n\nLambda@Edge functions can also be associated with additional behaviors,\neither at or after Distribution creation time.\n\n```ts\n// Associating a Lambda@Edge function with additional behaviors.\n\ndeclare const myFunc: cloudfront.experimental.EdgeFunction;\n// assigning at Distribution creation\ndeclare const myBucket: s3.Bucket;\nconst myOrigin = new origins.S3Origin(myBucket);\nconst myDistribution = new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: myOrigin },\n  additionalBehaviors: {\n    'images/*': {\n      origin: myOrigin,\n      edgeLambdas: [\n        {\n          functionVersion: myFunc.currentVersion,\n          eventType: cloudfront.LambdaEdgeEventType.ORIGIN_REQUEST,\n          includeBody: true, // Optional - defaults to false\n        },\n      ],\n    },\n  },\n});\n\n// assigning after creation\nmyDistribution.addBehavior('images/*', myOrigin, {\n  edgeLambdas: [\n    {\n      functionVersion: myFunc.currentVersion,\n      eventType: cloudfront.LambdaEdgeEventType.VIEWER_RESPONSE,\n    },\n  ],\n});\n```\n\nAdding an existing Lambda@Edge function created in a different stack to a CloudFront distribution.\n\n```ts\n// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});\n```\n\n### CloudFront Function\n\nYou can also deploy CloudFront functions and add them to a CloudFront distribution.\n\n```ts\n// Add a cloudfront Function to a Distribution\nconst cfFunction = new cloudfront.Function(this, 'Function', {\n  code: cloudfront.FunctionCode.fromInline('function handler(event) { return event.request }'),\n});\n\ndeclare const s3Bucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    functionAssociations: [{\n      function: cfFunction,\n      eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n    }],\n  },\n});\n```\n\nIt will auto-generate the name of the function and deploy it to the `live` stage.\n\nAdditionally, you can load the function's code from a file using the `FunctionCode.fromFile()` method.\n\n### Logging\n\nYou can configure CloudFront to create log files that contain detailed information about every user request that CloudFront receives.\nThe logs can go to either an existing bucket, or a bucket will be created for you.\n\n```ts\n// Configure logging for Distributions\n\n// Simplest form - creates a new bucket and logs to it.\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n  enableLogging: true,\n});\n\n// You can optionally log to a specific bucket, configure whether cookies are logged, and give the log files a prefix.\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n  enableLogging: true, // Optional, this is implied if logBucket is specified\n  logBucket: new s3.Bucket(this, 'LogBucket'),\n  logFilePrefix: 'distribution-access-logs/',\n  logIncludesCookies: true,\n});\n```\n\n### Importing Distributions\n\nExisting distributions can be imported as well; note that like most imported constructs, an imported distribution cannot be modified.\nHowever, it can be used as a reference for other higher-level constructs.\n\n```ts\n// Using a reference to an imported Distribution\nconst distribution = cloudfront.Distribution.fromDistributionAttributes(this, 'ImportedDist', {\n  domainName: 'd111111abcdef8.cloudfront.net',\n  distributionId: '012345ABCDEF',\n});\n```\n\n## Migrating from the original CloudFrontWebDistribution to the newer Distribution construct\n\nIt's possible to migrate a distribution from the original to the modern API.\nThe changes necessary are the following:\n\n### The Distribution\n\nReplace `new CloudFrontWebDistribution` with `new Distribution`. Some\nconfiguration properties have been changed:\n\n| Old API                        | New API                                                                                        |\n|--------------------------------|------------------------------------------------------------------------------------------------|\n| `originConfigs`                | `defaultBehavior`; use `additionalBehaviors` if necessary                                      |\n| `viewerCertificate`            | `certificate`; use `domainNames` for aliases                                                   |\n| `errorConfigurations`          | `errorResponses`                                                                               |\n| `loggingConfig`                | `enableLogging`; configure with `logBucket` `logFilePrefix` and `logIncludesCookies`           |\n| `viewerProtocolPolicy`         | removed; set on each behavior instead. default changed from `REDIRECT_TO_HTTPS` to `ALLOW_ALL` |\n\nAfter switching constructs, you need to maintain the same logical ID for the underlying [CfnDistribution](https://docs.aws.amazon.com/cdk/api/v1/docs/@aws-cdk_aws-cloudfront.CfnDistribution.html) if you wish to avoid the deletion and recreation of your distribution.\nTo do this, use [escape hatches](https://docs.aws.amazon.com/cdk/v2/guide/cfn_layer.html) to override the logical ID created by the new Distribution construct with the logical ID created by the old construct.\n\nExample:\n\n```ts\ndeclare const sourceBucket: s3.Bucket;\n\nconst myDistribution = new cloudfront.Distribution(this, 'MyCfWebDistribution', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(sourceBucket),\n  },\n});\nconst cfnDistribution = myDistribution.node.defaultChild as cloudfront.CfnDistribution;\ncfnDistribution.overrideLogicalId('MyDistributionCFDistribution3H55TI9Q');\n```\n\n### Behaviors\n\nThe modern API makes use of the [CloudFront Origins](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cloudfront_origins-readme.html) module to easily configure your origin. Replace your origin configuration with the relevant CloudFront Origins class. For example, here's a behavior with an S3 origin:\n\n```ts\ndeclare const sourceBucket: s3.Bucket;\ndeclare const oai: cloudfront.OriginAccessIdentity;\n\nnew cloudfront.CloudFrontWebDistribution(this, 'MyCfWebDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n        originAccessIdentity: oai,\n      },\n      behaviors : [ {isDefaultBehavior: true}],\n    },\n  ],\n});\n```\n\nBecomes:\n\n```ts\ndeclare const sourceBucket: s3.Bucket;\n\nconst distribution = new cloudfront.Distribution(this, 'MyCfWebDistribution', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(sourceBucket) // This class automatically creates an Origin Access Identity\n  },\n});\n```\n\nIn the original API all behaviors are defined in the `originConfigs` property. The new API is optimized for a single origin and behavior, so the default behavior and additional behaviors will be defined separately.\n\n```ts\ndeclare const sourceBucket: s3.Bucket;\ndeclare const oai: cloudfront.OriginAccessIdentity;\n\nnew cloudfront.CloudFrontWebDistribution(this, 'MyCfWebDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n        originAccessIdentity: oai,\n      },\n      behaviors: [ {isDefaultBehavior: true}],\n    },\n    {\n      customOriginSource: {\n        domainName: 'MYALIAS',\n      },\n      behaviors: [{ pathPattern: '/somewhere' }]\n    }\n  ],\n});\n```\n\nBecomes:\n\n```ts\ndeclare const sourceBucket: s3.Bucket;\n\nconst distribution = new cloudfront.Distribution(this, 'MyCfWebDistribution', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(sourceBucket) // This class automatically creates an Origin Access Identity\n  },\n  additionalBehaviors: {\n    '/somewhere': {\n      origin: new origins.HttpOrigin('MYALIAS'),\n    }\n  }\n});\n```\n\n### Certificates\n\nIf you are using an ACM certificate, you can pass the certificate directly to the `certificate` prop.\nAny aliases used before in the `ViewerCertificate` class should be passed in to the `domainNames` prop in the modern API.\n\n```ts\nimport * as acm from '@aws-cdk/aws-certificatemanager';\ndeclare const certificate: acm.Certificate;\ndeclare const sourceBucket: s3.Bucket;\n\nconst viewerCertificate = cloudfront.ViewerCertificate.fromAcmCertificate(certificate, {\n  aliases: ['MYALIAS'],\n});\n\nnew cloudfront.CloudFrontWebDistribution(this, 'MyCfWebDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors : [ {isDefaultBehavior: true} ],\n    },\n  ],\n  viewerCertificate: viewerCertificate,\n});\n```\n\nBecomes:\n\n```ts\nimport * as acm from '@aws-cdk/aws-certificatemanager';\ndeclare const certificate: acm.Certificate;\ndeclare const sourceBucket: s3.Bucket;\n\nconst distribution = new cloudfront.Distribution(this, 'MyCfWebDistribution', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(sourceBucket),\n  },\n  domainNames: ['MYALIAS'],\n  certificate: certificate,\n});\n```\n\nIAM certificates aren't directly supported by the new API, but can be easily configured through [escape hatches](https://docs.aws.amazon.com/cdk/v2/guide/cfn_layer.html)\n\n```ts\ndeclare const sourceBucket: s3.Bucket;\nconst viewerCertificate = cloudfront.ViewerCertificate.fromIamCertificate('MYIAMROLEIDENTIFIER', {\n  aliases: ['MYALIAS'],\n});\n\nnew cloudfront.CloudFrontWebDistribution(this, 'MyCfWebDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors : [ {isDefaultBehavior: true} ],\n    },\n  ],\n  viewerCertificate: viewerCertificate,\n});\n```\n\nBecomes:\n\n```ts\ndeclare const sourceBucket: s3.Bucket;\nconst distribution = new cloudfront.Distribution(this, 'MyCfWebDistribution', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(sourceBucket),\n  },\n  domainNames: ['MYALIAS'],\n});\n\nconst cfnDistribution = distribution.node.defaultChild as cloudfront.CfnDistribution;\n\ncfnDistribution.addPropertyOverride('ViewerCertificate.IamCertificateId', 'MYIAMROLEIDENTIFIER');\ncfnDistribution.addPropertyOverride('ViewerCertificate.SslSupportMethod', 'sni-only');\n```\n\n### Other changes\n\nA number of default settings have changed on the new API when creating a new distribution, behavior, and origin.\nAfter making the major changes needed for the migration, run `cdk diff` to see what settings have changed.\nIf no changes are desired during migration, you will at the least be able to use [escape hatches](https://docs.aws.amazon.com/cdk/v2/guide/cfn_layer.html) to override what the CDK synthesizes, if you can't change the properties directly.\n\n## CloudFrontWebDistribution API\n\n> The `CloudFrontWebDistribution` construct is the original construct written for working with CloudFront distributions.\n> Users are encouraged to use the newer `Distribution` instead, as it has a simpler interface and receives new features faster.\n\nExample usage:\n\n```ts\n// Using a CloudFrontWebDistribution construct.\n\ndeclare const sourceBucket: s3.Bucket;\nconst distribution = new cloudfront.CloudFrontWebDistribution(this, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors : [ {isDefaultBehavior: true}],\n    },\n  ],\n});\n```\n\n### Viewer certificate\n\nBy default, CloudFront Web Distributions will answer HTTPS requests with CloudFront's default certificate,\nonly containing the distribution `domainName` (e.g. d111111abcdef8.cloudfront.net).\nYou can customize the viewer certificate property to provide a custom certificate and/or list of domain name aliases to fit your needs.\n\nSee [Using Alternate Domain Names and HTTPS](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html) in the CloudFront User Guide.\n\n#### Default certificate\n\nYou can customize the default certificate aliases. This is intended to be used in combination with CNAME records in your DNS zone.\n\nExample:\n\n```ts lit=test/example.default-cert-alias.lit.ts\n    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromCloudFrontDefaultCertificate(\n        'www.example.com',\n      ),\n    });\n```\n\n#### ACM certificate\n\nYou can change the default certificate by one stored AWS Certificate Manager, or ACM.\nThose certificate can either be generated by AWS, or purchased by another CA imported into ACM.\n\nFor more information, see\n[the aws-certificatemanager module documentation](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-certificatemanager-readme.html)\nor [Importing Certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html)\nin the AWS Certificate Manager User Guide.\n\nExample:\n\n```ts lit=test/example.acm-cert-alias.lit.ts\n    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const certificate = new certificatemanager.Certificate(this, 'Certificate', {\n      domainName: 'example.com',\n      subjectAlternativeNames: ['*.example.com'],\n    });\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromAcmCertificate(\n        certificate,\n        {\n          aliases: ['example.com', 'www.example.com'],\n          securityPolicy: cloudfront.SecurityPolicyProtocol.TLS_V1, // default\n          sslMethod: cloudfront.SSLMethod.SNI, // default\n        },\n      ),\n    });\n```\n\n#### IAM certificate\n\nYou can also import a certificate into the IAM certificate store.\n\nSee [Importing an SSL/TLS Certificate](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-and-https-procedures.html#cnames-and-https-uploading-certificates) in the CloudFront User Guide.\n\nExample:\n\n```ts lit=test/example.iam-cert-alias.lit.ts\n    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromIamCertificate(\n        'certificateId',\n        {\n          aliases: ['example.com'],\n          securityPolicy: cloudfront.SecurityPolicyProtocol.SSL_V3, // default\n          sslMethod: cloudfront.SSLMethod.SNI, // default\n        },\n      ),\n    });\n```\n\n### Trusted Key Groups\n\nCloudFront Web Distributions supports validating signed URLs or signed cookies using key groups.\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior.\n\nExample:\n\n```ts\n// Using trusted key groups for Cloudfront Web Distributions.\ndeclare const sourceBucket: s3.Bucket;\ndeclare const publicKey: string;\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n          trustedKeyGroups: [\n            keyGroup,\n          ],\n        },\n      ],\n    },\n  ],\n});\n```\n\n### Restrictions\n\nCloudFront supports adding restrictions to your distribution.\n\nSee [Restricting the Geographic Distribution of Your Content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/georestrictions.html) in the CloudFront User Guide.\n\nExample:\n\n```ts\n// Adding restrictions to a Cloudfront Web Distribution.\ndeclare const sourceBucket: s3.Bucket;\nnew cloudfront.CloudFrontWebDistribution(this, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors : [ {isDefaultBehavior: true}],\n    },\n  ],\n  geoRestriction: cloudfront.GeoRestriction.allowlist('US', 'GB'),\n});\n```\n\n### Connection behaviors between CloudFront and your origin\n\nCloudFront provides you even more control over the connection behaviors between CloudFront and your origin.\nYou can now configure the number of connection attempts CloudFront will make to your origin and the origin connection timeout for each attempt.\n\nSee [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts)\n\nSee [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout)\n\nExample usage:\n\n```ts\n// Configuring connection behaviors between Cloudfront and your origin\nconst distribution = new cloudfront.CloudFrontWebDistribution(this, 'MyDistribution', {\n  originConfigs: [\n    {\n      connectionAttempts: 3,\n      connectionTimeout: Duration.seconds(10),\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n});\n```\n\n#### Origin Fallback\n\nIn case the origin source is not available and answers with one of the\nspecified status codes the failover origin source will be used.\n\n```ts\n// Configuring origin fallback options for the CloudFrontWebDistribution\nnew cloudfront.CloudFrontWebDistribution(this, 'ADistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: s3.Bucket.fromBucketName(this, 'aBucket', 'myoriginbucket'),\n        originPath: '/',\n        originHeaders: {\n          'myHeader': '42',\n        },\n        originShieldRegion: 'us-west-2',\n      },\n      failoverS3OriginSource: {\n        s3BucketSource: s3.Bucket.fromBucketName(this, 'aBucketFallback', 'myoriginbucketfallback'),\n        originPath: '/somewhere',\n        originHeaders: {\n          'myHeader2': '21',\n        },\n        originShieldRegion: 'us-east-1',\n      },\n      failoverCriteriaStatusCodes: [cloudfront.FailoverStatusCode.INTERNAL_SERVER_ERROR],\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n});\n```\n\n## KeyGroup & PublicKey API\n\nYou can create a key group to use with CloudFront signed URLs and signed cookies\nYou can add public keys to use with CloudFront features such as signed URLs, signed cookies, and field-level encryption.\n\nThe following example command uses OpenSSL to generate an RSA key pair with a length of 2048 bits and save to the file named `private_key.pem`.\n\n```bash\nopenssl genrsa -out private_key.pem 2048\n```\n\nThe resulting file contains both the public and the private key. The following example command extracts the public key from the file named `private_key.pem` and stores it in `public_key.pem`.\n\n```bash\nopenssl rsa -pubout -in private_key.pem -out public_key.pem\n```\n\nNote: Don't forget to copy/paste the contents of `public_key.pem` file including `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----` lines into `encodedKey` parameter when creating a `PublicKey`.\n\nExample:\n\n```ts\n// Create a key group to use with CloudFront signed URLs and signed cookies.\nnew cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    new cloudfront.PublicKey(this, 'MyPublicKey', {\n      encodedKey: '...', // contents of public_key.pem file\n      // comment: 'Key is expiring on ...',\n    }),\n  ],\n  // comment: 'Key group containing public keys ...',\n});\n```\n\nSee:\n\n* https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\n* https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-cloudfront",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "submodules": {
    "@aws-cdk/aws-cloudfront.experimental": {
      "locationInModule": {
        "filename": "lib/index.ts",
        "line": 13
      },
      "symbolId": "lib/experimental/index:"
    }
  },
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CloudFront",
      "packageId": "Amazon.CDK.AWS.CloudFront"
    },
    "java": {
      "maven": {
        "artifactId": "cloudfront",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.cloudfront"
    },
    "js": {
      "npm": "@aws-cdk/aws-cloudfront"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-cloudfront",
      "module": "aws_cdk.aws_cloudfront"
    }
  },
  "types": {
    "@aws-cdk/aws-cloudfront.AddBehaviorOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for adding a new behavior to a Distribution.",
        "example": "// Add a behavior to a Distribution after initial creation.\ndeclare const myBucket: s3.Bucket;\ndeclare const myWebDistribution: cloudfront.Distribution;\nmyWebDistribution.addBehavior('/images/*.jpg', new origins.S3Origin(myBucket), {\n  viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.AddBehaviorOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 686
      },
      "name": "AddBehaviorOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "AllowedMethods.ALLOW_GET_HEAD",
            "stability": "stable",
            "summary": "HTTP methods to allow for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 692
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CachedMethods.CACHE_GET_HEAD",
            "stability": "stable",
            "summary": "HTTP methods to cache for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 699
          },
          "name": "cachedMethods",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CachedMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CachePolicy.CACHING_OPTIMIZED",
            "remarks": "The cache policy determines what values are included in the cache key,\nand the time-to-live (TTL) values for the cache.",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html.",
            "stability": "stable",
            "summary": "The cache policy for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 708
          },
          "name": "cachePolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "See https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html#compressed-content-cloudfront-file-types\nfor file types CloudFront will compress.",
            "stability": "stable",
            "summary": "Whether you want CloudFront to automatically compress certain files for this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 717
          },
          "name": "compress",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no Lambda functions will be invoked",
            "see": "https://aws.amazon.com/lambda/edge",
            "stability": "stable",
            "summary": "The Lambda@Edge functions to invoke before serving the contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 761
          },
          "name": "edgeLambdas",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.EdgeLambda"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no functions will be invoked",
            "stability": "stable",
            "summary": "The CloudFront functions to invoke before serving the contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 753
          },
          "name": "functionAssociations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.FunctionAssociation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "remarks": "The origin request policy determines which values (e.g., headers, cookies)\nare included in requests that CloudFront sends to the origin.",
            "stability": "stable",
            "summary": "The origin request policy for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 725
          },
          "name": "originRequestPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "remarks": "The response headers policy determines which headers are included in responses",
            "stability": "stable",
            "summary": "The response headers policy for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 732
          },
          "name": "responseHeadersPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Set this to true to indicate you want to distribute media files in the Microsoft Smooth Streaming format using this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 739
          },
          "name": "smoothStreaming",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no KeyGroups are associated with cache behavior",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html",
            "stability": "stable",
            "summary": "A list of Key Groups that CloudFront can use to validate signed URLs or signed cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 769
          },
          "name": "trustedKeyGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.IKeyGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ViewerProtocolPolicy.ALLOW_ALL",
            "stability": "stable",
            "summary": "The protocol that viewers can use to access the files controlled by this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 746
          },
          "name": "viewerProtocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy"
          }
        }
      ],
      "symbolId": "lib/distribution:AddBehaviorOptions"
    },
    "@aws-cdk/aws-cloudfront.AliasConfiguration": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "deprecated": "see {@link CloudFrontWebDistributionProps#viewerCertificate} with {@link ViewerCertificate#acmCertificate}",
        "remarks": "CloudFront can use a custom domain that you provide instead of a\n\"cloudfront.net\" domain. To use this feature you must provide the list of\nadditional domains, and the ACM Certificate that CloudFront should use for\nthese additional domains.",
        "stability": "deprecated",
        "summary": "Configuration for custom domain names.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst aliasConfiguration: cloudfront.AliasConfiguration = {\n  acmCertRef: 'acmCertRef',\n  names: ['names'],\n\n  // the properties below are optional\n  securityPolicy: cloudfront.SecurityPolicyProtocol.SSL_V3,\n  sslMethod: cloudfront.SSLMethod.SNI,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.AliasConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 58
      },
      "name": "AliasConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "ARN of an AWS Certificate Manager (ACM) certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 62
          },
          "name": "acmCertRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Both main domain name and Subject Alternative Names.",
            "stability": "deprecated",
            "summary": "Domain names on the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 69
          },
          "name": "names",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SSLv3 if sslMethod VIP, TLSv1 if sslMethod SNI",
            "remarks": "CloudFront serves your objects only to browsers or devices that support at\nleast the SSL version that you specify.",
            "stability": "deprecated",
            "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 89
          },
          "name": "securityPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SSLMethod.SNI",
            "remarks": "See the notes on SSLMethod if you wish to use other SSL termination types.",
            "see": "https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html",
            "stability": "deprecated",
            "summary": "How CloudFront should serve HTTPS requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 79
          },
          "name": "sslMethod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SSLMethod"
          }
        }
      ],
      "symbolId": "lib/web-distribution:AliasConfiguration"
    },
    "@aws-cdk/aws-cloudfront.AllowedMethods": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "The HTTP methods that the Behavior will accept requests on.",
        "example": "// Create a Distribution with configured HTTP methods and viewer protocol policy of the cache.\ndeclare const myBucket: s3.Bucket;\nconst myWebDistribution = new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    allowedMethods: cloudfront.AllowedMethods.ALLOW_ALL,\n    viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 571
      },
      "name": "AllowedMethods",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "All supported HTTP methods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 577
          },
          "name": "ALLOW_ALL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "HEAD and GET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 573
          },
          "name": "ALLOW_GET_HEAD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "HEAD, GET, and OPTIONS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 575
          },
          "name": "ALLOW_GET_HEAD_OPTIONS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP methods supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 580
          },
          "name": "methods",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/distribution:AllowedMethods"
    },
    "@aws-cdk/aws-cloudfront.Behavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A CloudFront behavior wrapper.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const function_: cloudfront.Function;\ndeclare const keyGroup: cloudfront.KeyGroup;\ndeclare const version: lambda.Version;\nconst behavior: cloudfront.Behavior = {\n  allowedMethods: cloudfront.CloudFrontAllowedMethods.GET_HEAD,\n  cachedMethods: cloudfront.CloudFrontAllowedCachedMethods.GET_HEAD,\n  compress: false,\n  defaultTtl: cdk.Duration.minutes(30),\n  forwardedValues: {\n    queryString: false,\n\n    // the properties below are optional\n    cookies: {\n      forward: 'forward',\n\n      // the properties below are optional\n      whitelistedNames: ['whitelistedNames'],\n    },\n    headers: ['headers'],\n    queryStringCacheKeys: ['queryStringCacheKeys'],\n  },\n  functionAssociations: [{\n    eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n    function: function_,\n  }],\n  isDefaultBehavior: false,\n  lambdaFunctionAssociations: [{\n    eventType: cloudfront.LambdaEdgeEventType.ORIGIN_REQUEST,\n    lambdaFunction: version,\n\n    // the properties below are optional\n    includeBody: false,\n  }],\n  maxTtl: cdk.Duration.minutes(30),\n  minTtl: cdk.Duration.minutes(30),\n  pathPattern: 'pathPattern',\n  trustedKeyGroups: [keyGroup],\n  trustedSigners: ['trustedSigners'],\n  viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.HTTPS_ONLY,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.Behavior",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 355
      },
      "name": "Behavior",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "GET_HEAD",
            "stability": "stable",
            "summary": "The method this CloudFront distribution responds do."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 405
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CloudFrontAllowedMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GET_HEAD",
            "stability": "stable",
            "summary": "Which methods are cached by CloudFront by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 419
          },
          "name": "cachedMethods",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CloudFrontAllowedCachedMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "If CloudFront should automatically compress some content types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 362
          },
          "name": "compress",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "86400 (1 day)",
            "remarks": "This value applies only when your custom origin does not add HTTP headers,\nsuch as Cache-Control max-age, Cache-Control s-maxage, and Expires to objects.",
            "stability": "stable",
            "summary": "The default amount of time CloudFront will cache an object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 398
          },
          "name": "defaultTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none (no cookies - no headers)",
            "stability": "stable",
            "summary": "The values CloudFront will forward to the origin when making a request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 427
          },
          "name": "forwardedValues",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no functions will be invoked",
            "stability": "stable",
            "summary": "The CloudFront functions to invoke before serving the contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 455
          },
          "name": "functionAssociations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.FunctionAssociation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You must specify exactly one default distribution per CloudFront distribution.\nThe default behavior is allowed to omit the \"path\" property.",
            "stability": "stable",
            "summary": "If this behavior is the default behavior for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 370
          },
          "name": "isDefaultBehavior",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No lambda function associated",
            "stability": "stable",
            "summary": "Declares associated lambda@edge functions for this distribution behaviour."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 448
          },
          "name": "lambdaFunctionAssociations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.LambdaFunctionAssociation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(31536000) (one year)",
            "stability": "stable",
            "summary": "The max amount of time you want objects to stay in the cache before CloudFront queries your origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 441
          },
          "name": "maxTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The minimum amount of time that you want objects to stay in the cache before CloudFront queries your origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 433
          },
          "name": "minTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Required for all non-default behaviors. (The default behavior implicitly has \"*\" as the path pattern. )",
            "stability": "stable",
            "summary": "The path this behavior responds to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 412
          },
          "name": "pathPattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no KeyGroups are associated with cache behavior",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html",
            "stability": "stable",
            "summary": "A list of Key Groups that CloudFront can use to validate signed URLs or signed cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 387
          },
          "name": "trustedKeyGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.IKeyGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "- We recommend using trustedKeyGroups instead of trustedSigners.",
            "remarks": "The signers are the account IDs that are allowed to sign cookies/presigned URLs for this distribution.\n\nIf you pass a non empty value, all requests for this behavior must be signed (no public access will be allowed)",
            "stability": "deprecated",
            "summary": "Trusted signers is how CloudFront allows you to serve private content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 379
          },
          "name": "trustedSigners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the distribution wide viewer protocol policy will be used",
            "stability": "stable",
            "summary": "The viewer policy for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 462
          },
          "name": "viewerProtocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy"
          }
        }
      ],
      "symbolId": "lib/web-distribution:Behavior"
    },
    "@aws-cdk/aws-cloudfront.BehaviorOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating a new behavior.",
        "example": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.BehaviorOptions",
      "interfaces": [
        "@aws-cdk/aws-cloudfront.AddBehaviorOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 775
      },
      "name": "BehaviorOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The origin that you want CloudFront to route requests to when they match this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 779
          },
          "name": "origin",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOrigin"
          }
        }
      ],
      "symbolId": "lib/distribution:BehaviorOptions"
    },
    "@aws-cdk/aws-cloudfront.CacheCookieBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin.",
        "example": "// Creating a custom cache policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myCachePolicy = new cloudfront.CachePolicy(this, 'myCachePolicy', {\n  cachePolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  defaultTtl: Duration.days(2),\n  minTtl: Duration.minutes(1),\n  maxTtl: Duration.days(10),\n  cookieBehavior: cloudfront.CacheCookieBehavior.all(),\n  headerBehavior: cloudfront.CacheHeaderBehavior.allowList('X-CustomHeader'),\n  queryStringBehavior: cloudfront.CacheQueryStringBehavior.denyList('username'),\n  enableAcceptEncodingGzip: true,\n  enableAcceptEncodingBrotli: true,\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: myCachePolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 188
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 198
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only the provided `cookies` are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 203
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "cookies",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All cookies except the provided `cookies` are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 214
          },
          "name": "denyList",
          "parameters": [
            {
              "name": "cookies",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 193
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "CacheCookieBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of cookies: allow all, none, an allow list, or a deny list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 222
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The cookies to allow or deny, if the behavior is an allow or deny list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 224
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cache-policy:CacheCookieBehavior"
    },
    "@aws-cdk/aws-cloudfront.CacheHeaderBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin.",
        "example": "// Creating a custom cache policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myCachePolicy = new cloudfront.CachePolicy(this, 'myCachePolicy', {\n  cachePolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  defaultTtl: Duration.days(2),\n  minTtl: Duration.minutes(1),\n  maxTtl: Duration.days(10),\n  cookieBehavior: cloudfront.CacheCookieBehavior.all(),\n  headerBehavior: cloudfront.CacheHeaderBehavior.allowList('X-CustomHeader'),\n  queryStringBehavior: cloudfront.CacheQueryStringBehavior.denyList('username'),\n  enableAcceptEncodingGzip: true,\n  enableAcceptEncodingBrotli: true,\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: myCachePolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.CacheHeaderBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 235
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Listed headers are included in the cache key and are automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 239
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "headers",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheHeaderBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 237
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheHeaderBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "CacheHeaderBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "If no headers will be passed, or an allow list of headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 247
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The headers for the allow/deny list, if applicable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 249
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cache-policy:CacheHeaderBehavior"
    },
    "@aws-cdk/aws-cloudfront.CachePolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "link": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html",
          "resource": "AWS::CloudFront::CachePolicy",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A Cache Policy configuration.",
        "example": "// Using an existing cache policy for a Distribution\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: cloudfront.CachePolicy.CACHING_OPTIMIZED,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CachePolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cache-policy.ts",
          "line": 127
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CachePolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.ICachePolicy"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 90
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Cache Policy from its id."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 112
          },
          "name": "fromCachePolicyId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "cachePolicyId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
            }
          },
          "static": true
        }
      ],
      "name": "CachePolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy is designed for use with an origin that is an AWS Amplify web app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 94
          },
          "name": "AMPLIFY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "This policy is useful for dynamic content and for requests that are not cacheable.",
            "stability": "stable",
            "summary": "Disables caching."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 107
          },
          "name": "CACHING_DISABLED",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Query strings and cookies are not included in the cache key, and only the normalized 'Accept-Encoding' header is included.",
            "stability": "stable",
            "summary": "Optimize cache efficiency by minimizing the values that CloudFront includes in the cache key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 99
          },
          "name": "CACHING_OPTIMIZED",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Query strings and cookies are not included in the cache key, and only the normalized 'Accept-Encoding' header is included.\nDisables cache compression.",
            "stability": "stable",
            "summary": "Optimize cache efficiency by minimizing the values that CloudFront includes in the cache key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 105
          },
          "name": "CACHING_OPTIMIZED_FOR_UNCOMPRESSED_OBJECTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Designed for use with an origin that is an AWS Elemental MediaPackage endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 109
          },
          "name": "ELEMENTAL_MEDIA_PACKAGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 125
          },
          "name": "cachePolicyId",
          "overrides": "@aws-cdk/aws-cloudfront.ICachePolicy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cache-policy:CachePolicy"
    },
    "@aws-cdk/aws-cloudfront.CachePolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Cache Policy.",
        "example": "// Creating a custom cache policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myCachePolicy = new cloudfront.CachePolicy(this, 'myCachePolicy', {\n  cachePolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  defaultTtl: Duration.days(2),\n  minTtl: Duration.minutes(1),\n  maxTtl: Duration.days(10),\n  cookieBehavior: cloudfront.CacheCookieBehavior.all(),\n  headerBehavior: cloudfront.CacheHeaderBehavior.allowList('X-CustomHeader'),\n  queryStringBehavior: cloudfront.CacheQueryStringBehavior.denyList('username'),\n  enableAcceptEncodingGzip: true,\n  enableAcceptEncodingBrotli: true,\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: myCachePolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.CachePolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 19
      },
      "name": "CachePolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "remarks": "The name must only include '-', '_', or alphanumeric characters.",
            "stability": "stable",
            "summary": "A unique name to identify the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 25
          },
          "name": "cachePolicyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 31
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CacheCookieBehavior.none()",
            "stability": "stable",
            "summary": "Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 57
          },
          "name": "cookieBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The greater of 1 day and ``minTtl``",
            "remarks": "Only used when the origin does not send Cache-Control or Expires headers with the object.",
            "stability": "stable",
            "summary": "The default amount of time for objects to stay in the CloudFront cache."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 38
          },
          "name": "defaultTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to normalize and include the `Accept-Encoding` header in the cache key when the `Accept-Encoding` header is 'br'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 81
          },
          "name": "enableAcceptEncodingBrotli",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to normalize and include the `Accept-Encoding` header in the cache key when the `Accept-Encoding` header is 'gzip'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 75
          },
          "name": "enableAcceptEncodingGzip",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CacheHeaderBehavior.none()",
            "stability": "stable",
            "summary": "Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 63
          },
          "name": "headerBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CacheHeaderBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The greater of 1 year and ``defaultTtl``",
            "remarks": "CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object.",
            "stability": "stable",
            "summary": "The maximum amount of time for objects to stay in the CloudFront cache."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 51
          },
          "name": "maxTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(0)",
            "stability": "stable",
            "summary": "The minimum amount of time for objects to stay in the CloudFront cache."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 44
          },
          "name": "minTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CacheQueryStringBehavior.none()",
            "stability": "stable",
            "summary": "Determines whether any query strings are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 69
          },
          "name": "queryStringBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
          }
        }
      ],
      "symbolId": "lib/cache-policy:CachePolicyProps"
    },
    "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin.",
        "example": "// Creating a custom cache policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myCachePolicy = new cloudfront.CachePolicy(this, 'myCachePolicy', {\n  cachePolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  defaultTtl: Duration.days(2),\n  minTtl: Duration.minutes(1),\n  maxTtl: Duration.days(10),\n  cookieBehavior: cloudfront.CacheCookieBehavior.all(),\n  headerBehavior: cloudfront.CacheHeaderBehavior.allowList('X-CustomHeader'),\n  queryStringBehavior: cloudfront.CacheQueryStringBehavior.denyList('username'),\n  enableAcceptEncodingGzip: true,\n  enableAcceptEncodingBrotli: true,\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: myCachePolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 261
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 271
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only the provided `queryStrings` are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 276
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "queryStrings",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All query strings except the provided `queryStrings` are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 287
          },
          "name": "denyList",
          "parameters": [
            {
              "name": "queryStrings",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 266
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "CacheQueryStringBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of query strings -- allow all, none, only an allow list, or a deny list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 295
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The query strings to allow or deny, if the behavior is an allow or deny list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 297
          },
          "name": "queryStrings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cache-policy:CacheQueryStringBehavior"
    },
    "@aws-cdk/aws-cloudfront.CachedMethods": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "The HTTP methods that the Behavior will cache requests on.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cachedMethods = cloudfront.CachedMethods.CACHE_GET_HEAD;",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.CachedMethods",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 588
      },
      "name": "CachedMethods",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "HEAD and GET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 590
          },
          "name": "CACHE_GET_HEAD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CachedMethods"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "HEAD, GET, and OPTIONS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 592
          },
          "name": "CACHE_GET_HEAD_OPTIONS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CachedMethods"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP methods supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 595
          },
          "name": "methods",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/distribution:CachedMethods"
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::CachePolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A cache policy.\n\nWhen it's attached to a cache behavior, the cache policy determines the following:\n\n- The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.\n- The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.\n\nThe headers, cookies, and query strings that are included in the cache key are also included in requests that CloudFront sends to the origin. CloudFront sends a request when it can't find a valid object in its cache that matches the request's cache key. If you want to send values to the origin but *not* include them in the cache key, use `OriginRequestPolicy` .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::CachePolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnCachePolicy = new cloudfront.CfnCachePolicy(this, 'MyCfnCachePolicy', {\n  cachePolicyConfig: {\n    defaultTtl: 123,\n    maxTtl: 123,\n    minTtl: 123,\n    name: 'name',\n    parametersInCacheKeyAndForwardedToOrigin: {\n      cookiesConfig: {\n        cookieBehavior: 'cookieBehavior',\n\n        // the properties below are optional\n        cookies: ['cookies'],\n      },\n      enableAcceptEncodingGzip: false,\n      headersConfig: {\n        headerBehavior: 'headerBehavior',\n\n        // the properties below are optional\n        headers: ['headers'],\n      },\n      queryStringsConfig: {\n        queryStringBehavior: 'queryStringBehavior',\n\n        // the properties below are optional\n        queryStrings: ['queryStrings'],\n      },\n\n      // the properties below are optional\n      enableAcceptEncodingBrotli: false,\n    },\n\n    // the properties below are optional\n    comment: 'comment',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::CachePolicy`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 143
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 92
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 158
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 169
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCachePolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 96
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "remarks": "For example: `2766f7b2-75c5-41c6-8f06-bf4303a2f2f5` .",
            "stability": "external",
            "summary": "The unique identifier for the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 121
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LastModifiedTime"
            },
            "stability": "external",
            "summary": "The date and time when the cache policy was last modified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 127
          },
          "name": "attrLastModifiedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 163
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html#cfn-cloudfront-cachepolicy-cachepolicyconfig"
            },
            "stability": "external",
            "summary": "The cache policy configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 134
          },
          "name": "cachePolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CachePolicyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCachePolicy"
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.CachePolicyConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This configuration determines the following:\n\n- The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.\n- The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.\n\nThe headers, cookies, and query strings that are included in the cache key are also included in requests that CloudFront sends to the origin. CloudFront sends a request when it can't find a valid object in its cache that matches the request's cache key. If you want to send values to the origin but *not* include them in the cache key, use `OriginRequestPolicy` .",
        "stability": "external",
        "summary": "A cache policy configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cachePolicyConfigProperty: cloudfront.CfnCachePolicy.CachePolicyConfigProperty = {\n  defaultTtl: 123,\n  maxTtl: 123,\n  minTtl: 123,\n  name: 'name',\n  parametersInCacheKeyAndForwardedToOrigin: {\n    cookiesConfig: {\n      cookieBehavior: 'cookieBehavior',\n\n      // the properties below are optional\n      cookies: ['cookies'],\n    },\n    enableAcceptEncodingGzip: false,\n    headersConfig: {\n      headerBehavior: 'headerBehavior',\n\n      // the properties below are optional\n      headers: ['headers'],\n    },\n    queryStringsConfig: {\n      queryStringBehavior: 'queryStringBehavior',\n\n      // the properties below are optional\n      queryStrings: ['queryStrings'],\n    },\n\n    // the properties below are optional\n    enableAcceptEncodingBrotli: false,\n  },\n\n  // the properties below are optional\n  comment: 'comment',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CachePolicyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 190
      },
      "name": "CachePolicyConfigProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-defaultttl"
            },
            "remarks": "CloudFront uses this value as the object's time to live (TTL) only when the origin does *not* send `Cache-Control` or `Expires` headers with the object. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .\n\nThe default value for this field is 86400 seconds (one day). If the value of `MinTTL` is more than 86400 seconds, then the default value for this field is the same as the value of `MinTTL` .",
            "stability": "external",
            "summary": "The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 204
          },
          "name": "defaultTtl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-maxttl"
            },
            "remarks": "CloudFront uses this value only when the origin sends `Cache-Control` or `Expires` headers with the object. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .\n\nThe default value for this field is 31536000 seconds (one year). If the value of `MinTTL` or `DefaultTTL` is more than 31536000 seconds, then the default value for this field is the same as the value of `DefaultTTL` .",
            "stability": "external",
            "summary": "The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 212
          },
          "name": "maxTtl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-minttl"
            },
            "remarks": "For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 218
          },
          "name": "minTtl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-name"
            },
            "stability": "external",
            "summary": "A unique name to identify the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 224
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-parametersincachekeyandforwardedtoorigin"
            },
            "remarks": "The values included in the cache key are also included in requests that CloudFront sends to the origin.",
            "stability": "external",
            "summary": "The HTTP headers, cookies, and URL query strings to include in the cache key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 230
          },
          "name": "parametersInCacheKeyAndForwardedToOrigin",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-comment"
            },
            "remarks": "The comment cannot be longer than 128 characters.",
            "stability": "external",
            "summary": "A comment to describe the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 196
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCachePolicy.CachePolicyConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.CookiesConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cookiesconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and in requests that CloudFront sends to the origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cookiesConfigProperty: cloudfront.CfnCachePolicy.CookiesConfigProperty = {\n  cookieBehavior: 'cookieBehavior',\n\n  // the properties below are optional\n  cookies: ['cookies'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CookiesConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 311
      },
      "name": "CookiesConfigProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cookiesconfig.html#cfn-cloudfront-cachepolicy-cookiesconfig-cookiebehavior"
            },
            "remarks": "Valid values are:\n\n- `none` – No cookies in viewer requests are included in the cache key or in requests that CloudFront sends to the origin. Even when this field is set to `none` , any cookies that are listed in an `OriginRequestPolicy` *are* included in origin requests.\n- `whitelist` – Only the cookies in viewer requests that are listed in the `CookieNames` type are included in the cache key and in requests that CloudFront sends to the origin.\n- `allExcept` – All cookies in viewer requests are included in the cache key and in requests that CloudFront sends to the origin, **except** for those that are listed in the `CookieNames` type, which are not included.\n- `all` – All cookies in viewer requests are included in the cache key and in requests that CloudFront sends to the origin.",
            "stability": "external",
            "summary": "Determines whether any cookies in viewer requests are included in the cache key and in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 322
          },
          "name": "cookieBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cookiesconfig.html#cfn-cloudfront-cachepolicy-cookiesconfig-cookies"
            },
            "stability": "external",
            "summary": "Contains a list of cookie names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 328
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCachePolicy.CookiesConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.HeadersConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-headersconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and in requests that CloudFront sends to the origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst headersConfigProperty: cloudfront.CfnCachePolicy.HeadersConfigProperty = {\n  headerBehavior: 'headerBehavior',\n\n  // the properties below are optional\n  headers: ['headers'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.HeadersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 393
      },
      "name": "HeadersConfigProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-headersconfig.html#cfn-cloudfront-cachepolicy-headersconfig-headerbehavior"
            },
            "remarks": "Valid values are:\n\n- `none` – No HTTP headers are included in the cache key or in requests that CloudFront sends to the origin. Even when this field is set to `none` , any headers that are listed in an `OriginRequestPolicy` *are* included in origin requests.\n- `whitelist` – Only the HTTP headers that are listed in the `Headers` type are included in the cache key and in requests that CloudFront sends to the origin.",
            "stability": "external",
            "summary": "Determines whether any HTTP headers are included in the cache key and in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 402
          },
          "name": "headerBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-headersconfig.html#cfn-cloudfront-cachepolicy-headersconfig-headers"
            },
            "stability": "external",
            "summary": "Contains a list of HTTP header names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 408
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCachePolicy.HeadersConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.\n\nThe headers, cookies, and query strings that are included in the cache key are also included in requests that CloudFront sends to the origin. CloudFront sends a request when it can't find an object in its cache that matches the request's cache key. If you want to send values to the origin but *not* include them in the cache key, use `OriginRequestPolicy` .",
        "stability": "external",
        "summary": "This object determines the values that CloudFront includes in the cache key.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst parametersInCacheKeyAndForwardedToOriginProperty: cloudfront.CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty = {\n  cookiesConfig: {\n    cookieBehavior: 'cookieBehavior',\n\n    // the properties below are optional\n    cookies: ['cookies'],\n  },\n  enableAcceptEncodingGzip: false,\n  headersConfig: {\n    headerBehavior: 'headerBehavior',\n\n    // the properties below are optional\n    headers: ['headers'],\n  },\n  queryStringsConfig: {\n    queryStringBehavior: 'queryStringBehavior',\n\n    // the properties below are optional\n    queryStrings: ['queryStrings'],\n  },\n\n  // the properties below are optional\n  enableAcceptEncodingBrotli: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 475
      },
      "name": "ParametersInCacheKeyAndForwardedToOriginProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-cookiesconfig"
            },
            "stability": "external",
            "summary": "An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 481
          },
          "name": "cookiesConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CookiesConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-enableacceptencodinggzip"
            },
            "remarks": "This field is related to the `EnableAcceptEncodingBrotli` field. If one or both of these fields is `true` *and* the viewer request includes the `Accept-Encoding` header, then CloudFront does the following:\n\n- Normalizes the value of the viewer's `Accept-Encoding` header\n- Includes the normalized header in the cache key\n- Includes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see [Compression support](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-policy-compressed-objects) in the *Amazon CloudFront Developer Guide* .\n\nIf you set this value to `true` , and this cache behavior also has an origin request policy attached, do not include the `Accept-Encoding` header in the origin request policy. CloudFront always includes the `Accept-Encoding` header in origin requests when the value of this field is `true` , so including this header in an origin request policy has no effect.\n\nIf both of these fields are `false` , then CloudFront treats the `Accept-Encoding` header the same as any other HTTP header in the viewer request. By default, it's not included in the cache key and it's not included in origin requests. In this case, you can manually add `Accept-Encoding` to the headers whitelist like any other HTTP header.",
            "stability": "external",
            "summary": "A flag that can affect whether the `Accept-Encoding` HTTP header is included in the cache key and included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 517
          },
          "name": "enableAcceptEncodingGzip",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-headersconfig"
            },
            "stability": "external",
            "summary": "An object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 523
          },
          "name": "headersConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.HeadersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-querystringsconfig"
            },
            "stability": "external",
            "summary": "An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 529
          },
          "name": "queryStringsConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.QueryStringsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-enableacceptencodingbrotli"
            },
            "remarks": "This field is related to the `EnableAcceptEncodingGzip` field. If one or both of these fields is `true` *and* the viewer request includes the `Accept-Encoding` header, then CloudFront does the following:\n\n- Normalizes the value of the viewer's `Accept-Encoding` header\n- Includes the normalized header in the cache key\n- Includes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see [Compression support](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-policy-compressed-objects) in the *Amazon CloudFront Developer Guide* .\n\nIf you set this value to `true` , and this cache behavior also has an origin request policy attached, do not include the `Accept-Encoding` header in the origin request policy. CloudFront always includes the `Accept-Encoding` header in origin requests when the value of this field is `true` , so including this header in an origin request policy has no effect.\n\nIf both of these fields are `false` , then CloudFront treats the `Accept-Encoding` header the same as any other HTTP header in the viewer request. By default, it's not included in the cache key and it's not included in origin requests. In this case, you can manually add `Accept-Encoding` to the headers whitelist like any other HTTP header.",
            "stability": "external",
            "summary": "A flag that can affect whether the `Accept-Encoding` HTTP header is included in the cache key and included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 499
          },
          "name": "enableAcceptEncodingBrotli",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.QueryStringsConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-querystringsconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and in requests that CloudFront sends to the origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst queryStringsConfigProperty: cloudfront.CfnCachePolicy.QueryStringsConfigProperty = {\n  queryStringBehavior: 'queryStringBehavior',\n\n  // the properties below are optional\n  queryStrings: ['queryStrings'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.QueryStringsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 606
      },
      "name": "QueryStringsConfigProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-querystringsconfig.html#cfn-cloudfront-cachepolicy-querystringsconfig-querystringbehavior"
            },
            "remarks": "Valid values are:\n\n- `none` – No query strings in viewer requests are included in the cache key or in requests that CloudFront sends to the origin. Even when this field is set to `none` , any query strings that are listed in an `OriginRequestPolicy` *are* included in origin requests.\n- `whitelist` – Only the query strings in viewer requests that are listed in the `QueryStringNames` type are included in the cache key and in requests that CloudFront sends to the origin.\n- `allExcept` – All query strings in viewer requests are included in the cache key and in requests that CloudFront sends to the origin, **except** those that are listed in the `QueryStringNames` type, which are not included.\n- `all` – All query strings in viewer requests are included in the cache key and in requests that CloudFront sends to the origin.",
            "stability": "external",
            "summary": "Determines whether any URL query strings in viewer requests are included in the cache key and in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 617
          },
          "name": "queryStringBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-querystringsconfig.html#cfn-cloudfront-cachepolicy-querystringsconfig-querystrings"
            },
            "stability": "external",
            "summary": "Contains a list of query string names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 623
          },
          "name": "queryStrings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCachePolicy.QueryStringsConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCachePolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnCachePolicyProps: cloudfront.CfnCachePolicyProps = {\n  cachePolicyConfig: {\n    defaultTtl: 123,\n    maxTtl: 123,\n    minTtl: 123,\n    name: 'name',\n    parametersInCacheKeyAndForwardedToOrigin: {\n      cookiesConfig: {\n        cookieBehavior: 'cookieBehavior',\n\n        // the properties below are optional\n        cookies: ['cookies'],\n      },\n      enableAcceptEncodingGzip: false,\n      headersConfig: {\n        headerBehavior: 'headerBehavior',\n\n        // the properties below are optional\n        headers: ['headers'],\n      },\n      queryStringsConfig: {\n        queryStringBehavior: 'queryStringBehavior',\n\n        // the properties below are optional\n        queryStrings: ['queryStrings'],\n      },\n\n      // the properties below are optional\n      enableAcceptEncodingBrotli: false,\n    },\n\n    // the properties below are optional\n    comment: 'comment',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 19
      },
      "name": "CfnCachePolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html#cfn-cloudfront-cachepolicy-cachepolicyconfig"
            },
            "stability": "external",
            "summary": "The cache policy configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 26
          },
          "name": "cachePolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CachePolicyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCachePolicyProps"
    },
    "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The request to create a new origin access identity (OAI). An origin access identity is a special CloudFront user that you can associate with Amazon S3 origins, so that you can secure all or just some of your Amazon S3 content. For more information, see [Restricting Access to Amazon S3 Content by Using an Origin Access Identity](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::CloudFrontOriginAccessIdentity`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnCloudFrontOriginAccessIdentity = new cloudfront.CfnCloudFrontOriginAccessIdentity(this, 'MyCfnCloudFrontOriginAccessIdentity', {\n  cloudFrontOriginAccessIdentityConfig: {\n    comment: 'comment',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::CloudFrontOriginAccessIdentity`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 804
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentityProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 753
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 819
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 830
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCloudFrontOriginAccessIdentity",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 757
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID for the origin access identity, for example, `E74FTE3AJFJ256A` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 782
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "S3CanonicalUserId"
            },
            "remarks": "For example: `b970b42360b81c8ddbd79d2f5df0069ba9033c8a79655752abe380cd6d63ba8bcf23384d568fcf89fc49700b5e11a0fd` .",
            "stability": "external",
            "summary": "The Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 788
          },
          "name": "attrS3CanonicalUserId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 824
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html#cfn-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig"
            },
            "stability": "external",
            "summary": "The current configuration information for the identity."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 795
          },
          "name": "cloudFrontOriginAccessIdentityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCloudFrontOriginAccessIdentity"
    },
    "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Send a `GET` request to the `/ *CloudFront API version* /CloudFront/identity ID/config` resource.",
        "stability": "external",
        "summary": "Origin access identity configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cloudFrontOriginAccessIdentityConfigProperty: cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty = {\n  comment: 'comment',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 844
      },
      "name": "CloudFrontOriginAccessIdentityConfigProperty",
      "namespace": "CfnCloudFrontOriginAccessIdentity",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig.html#cfn-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig-comment"
            },
            "remarks": "The comment cannot be longer than 128 characters.",
            "stability": "external",
            "summary": "A comment to describe the origin access identity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 850
          },
          "name": "comment",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentityProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCloudFrontOriginAccessIdentity`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnCloudFrontOriginAccessIdentityProps: cloudfront.CfnCloudFrontOriginAccessIdentityProps = {\n  cloudFrontOriginAccessIdentityConfig: {\n    comment: 'comment',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentityProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 687
      },
      "name": "CfnCloudFrontOriginAccessIdentityProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html#cfn-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig"
            },
            "stability": "external",
            "summary": "The current configuration information for the identity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 694
          },
          "name": "cloudFrontOriginAccessIdentityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnCloudFrontOriginAccessIdentityProps"
    },
    "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::ContinuousDeploymentPolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-continuousdeploymentpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a continuous deployment policy that routes a subset of production traffic from a primary distribution to a staging distribution.\n\nAfter you create and update a staging distribution, you can use a continuous deployment policy to incrementally move traffic to the staging distribution. This enables you to test changes to a distribution's configuration before moving all of your production traffic to the new configuration.\n\nFor more information, see [Using CloudFront continuous deployment to safely test CDN configuration changes](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/continuous-deployment.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::ContinuousDeploymentPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnContinuousDeploymentPolicy = new cloudfront.CfnContinuousDeploymentPolicy(this, 'MyCfnContinuousDeploymentPolicy', {\n  continuousDeploymentPolicyConfig: {\n    enabled: false,\n    stagingDistributionDnsNames: ['stagingDistributionDnsNames'],\n\n    // the properties below are optional\n    trafficConfig: {\n      type: 'type',\n\n      // the properties below are optional\n      singleHeaderConfig: {\n        header: 'header',\n        value: 'value',\n      },\n      singleWeightConfig: {\n        weight: 123,\n\n        // the properties below are optional\n        sessionStickinessConfig: {\n          idleTtl: 123,\n          maximumTtl: 123,\n        },\n      },\n    },\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::ContinuousDeploymentPolicy`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 1032
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 981
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1047
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1058
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnContinuousDeploymentPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 985
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The identifier of the cotinuous deployment policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1010
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LastModifiedTime"
            },
            "stability": "external",
            "summary": "The date and time when the continuous deployment policy was last modified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1016
          },
          "name": "attrLastModifiedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1052
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-continuousdeploymentpolicy.html#cfn-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig"
            },
            "stability": "external",
            "summary": "Contains the configuration for a continuous deployment policy."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1023
          },
          "name": "continuousDeploymentPolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.ContinuousDeploymentPolicyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnContinuousDeploymentPolicy"
    },
    "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.ContinuousDeploymentPolicyConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains the configuration for a continuous deployment policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst continuousDeploymentPolicyConfigProperty: cloudfront.CfnContinuousDeploymentPolicy.ContinuousDeploymentPolicyConfigProperty = {\n  enabled: false,\n  stagingDistributionDnsNames: ['stagingDistributionDnsNames'],\n\n  // the properties below are optional\n  trafficConfig: {\n    type: 'type',\n\n    // the properties below are optional\n    singleHeaderConfig: {\n      header: 'header',\n      value: 'value',\n    },\n    singleWeightConfig: {\n      weight: 123,\n\n      // the properties below are optional\n      sessionStickinessConfig: {\n        idleTtl: 123,\n        maximumTtl: 123,\n      },\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.ContinuousDeploymentPolicyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1072
      },
      "name": "ContinuousDeploymentPolicyConfigProperty",
      "namespace": "CfnContinuousDeploymentPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig.html#cfn-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig-enabled"
            },
            "remarks": "When this value is `true` , this policy is enabled and in effect. When this value is `false` , this policy is not enabled and has no effect.",
            "stability": "external",
            "summary": "A Boolean that indicates whether this continuous deployment policy is enabled (in effect)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1078
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig.html#cfn-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig-stagingdistributiondnsnames"
            },
            "remarks": "For example: `d111111abcdef8.cloudfront.net` .",
            "stability": "external",
            "summary": "The CloudFront domain name of the staging distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1084
          },
          "name": "stagingDistributionDnsNames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig.html#cfn-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig-trafficconfig"
            },
            "stability": "external",
            "summary": "Contains the parameters for routing production traffic from your primary to staging distributions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1090
          },
          "name": "trafficConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.TrafficConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnContinuousDeploymentPolicy.ContinuousDeploymentPolicyConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SessionStickinessConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-sessionstickinessconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This prevents the potentially inconsistent experience of sending some of a given user's requests to your staging distribution, while others are sent to your primary distribution. Define the session duration using TTL values.",
        "stability": "external",
        "summary": "Session stickiness provides the ability to define multiple requests from a single viewer as a single session.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst sessionStickinessConfigProperty: cloudfront.CfnContinuousDeploymentPolicy.SessionStickinessConfigProperty = {\n  idleTtl: 123,\n  maximumTtl: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SessionStickinessConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1159
      },
      "name": "SessionStickinessConfigProperty",
      "namespace": "CfnContinuousDeploymentPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-sessionstickinessconfig.html#cfn-cloudfront-continuousdeploymentpolicy-sessionstickinessconfig-idlettl"
            },
            "remarks": "Allowed values are 300–3600 seconds (5–60 minutes).",
            "stability": "external",
            "summary": "The amount of time after which you want sessions to cease if no requests are received."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1165
          },
          "name": "idleTtl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-sessionstickinessconfig.html#cfn-cloudfront-continuousdeploymentpolicy-sessionstickinessconfig-maximumttl"
            },
            "remarks": "Allowed values are 300–3600 seconds (5–60 minutes).",
            "stability": "external",
            "summary": "The maximum amount of time to consider requests from the viewer as being part of the same session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1171
          },
          "name": "maximumTtl",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnContinuousDeploymentPolicy.SessionStickinessConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SingleHeaderConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-singleheaderconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Determines which HTTP requests are sent to the staging distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst singleHeaderConfigProperty: cloudfront.CfnContinuousDeploymentPolicy.SingleHeaderConfigProperty = {\n  header: 'header',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SingleHeaderConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1237
      },
      "name": "SingleHeaderConfigProperty",
      "namespace": "CfnContinuousDeploymentPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-singleheaderconfig.html#cfn-cloudfront-continuousdeploymentpolicy-singleheaderconfig-header"
            },
            "remarks": "The header must contain the prefix `aws-cf-cd-` .",
            "stability": "external",
            "summary": "The request header name that you want CloudFront to send to your staging distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1243
          },
          "name": "header",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-singleheaderconfig.html#cfn-cloudfront-continuousdeploymentpolicy-singleheaderconfig-value"
            },
            "stability": "external",
            "summary": "The request header value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1249
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnContinuousDeploymentPolicy.SingleHeaderConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SingleWeightConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-singleweightconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "This configuration determines the percentage of HTTP requests that are sent to the staging distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst singleWeightConfigProperty: cloudfront.CfnContinuousDeploymentPolicy.SingleWeightConfigProperty = {\n  weight: 123,\n\n  // the properties below are optional\n  sessionStickinessConfig: {\n    idleTtl: 123,\n    maximumTtl: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SingleWeightConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1315
      },
      "name": "SingleWeightConfigProperty",
      "namespace": "CfnContinuousDeploymentPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-singleweightconfig.html#cfn-cloudfront-continuousdeploymentpolicy-singleweightconfig-weight"
            },
            "stability": "external",
            "summary": "The percentage of traffic to send to a staging distribution, expressed as a decimal number between 0 and .15."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1327
          },
          "name": "weight",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-singleweightconfig.html#cfn-cloudfront-continuousdeploymentpolicy-singleweightconfig-sessionstickinessconfig"
            },
            "remarks": "This prevents the potentially inconsistent experience of sending some of a given user's requests to your staging distribution, while others are sent to your primary distribution. Define the session duration using TTL values.",
            "stability": "external",
            "summary": "Session stickiness provides the ability to define multiple requests from a single viewer as a single session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1321
          },
          "name": "sessionStickinessConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SessionStickinessConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnContinuousDeploymentPolicy.SingleWeightConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.TrafficConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-trafficconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The traffic configuration of your continuous deployment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst trafficConfigProperty: cloudfront.CfnContinuousDeploymentPolicy.TrafficConfigProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  singleHeaderConfig: {\n    header: 'header',\n    value: 'value',\n  },\n  singleWeightConfig: {\n    weight: 123,\n\n    // the properties below are optional\n    sessionStickinessConfig: {\n      idleTtl: 123,\n      maximumTtl: 123,\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.TrafficConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1392
      },
      "name": "TrafficConfigProperty",
      "namespace": "CfnContinuousDeploymentPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-trafficconfig.html#cfn-cloudfront-continuousdeploymentpolicy-trafficconfig-type"
            },
            "stability": "external",
            "summary": "The type of traffic configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1410
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-trafficconfig.html#cfn-cloudfront-continuousdeploymentpolicy-trafficconfig-singleheaderconfig"
            },
            "stability": "external",
            "summary": "Determines which HTTP requests are sent to the staging distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1398
          },
          "name": "singleHeaderConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SingleHeaderConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-continuousdeploymentpolicy-trafficconfig.html#cfn-cloudfront-continuousdeploymentpolicy-trafficconfig-singleweightconfig"
            },
            "stability": "external",
            "summary": "Contains the percentage of traffic to send to the staging distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1404
          },
          "name": "singleWeightConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.SingleWeightConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnContinuousDeploymentPolicy.TrafficConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-continuousdeploymentpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnContinuousDeploymentPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnContinuousDeploymentPolicyProps: cloudfront.CfnContinuousDeploymentPolicyProps = {\n  continuousDeploymentPolicyConfig: {\n    enabled: false,\n    stagingDistributionDnsNames: ['stagingDistributionDnsNames'],\n\n    // the properties below are optional\n    trafficConfig: {\n      type: 'type',\n\n      // the properties below are optional\n      singleHeaderConfig: {\n        header: 'header',\n        value: 'value',\n      },\n      singleWeightConfig: {\n        weight: 123,\n\n        // the properties below are optional\n        sessionStickinessConfig: {\n          idleTtl: 123,\n          maximumTtl: 123,\n        },\n      },\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 911
      },
      "name": "CfnContinuousDeploymentPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-continuousdeploymentpolicy.html#cfn-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig"
            },
            "stability": "external",
            "summary": "Contains the configuration for a continuous deployment policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 918
          },
          "name": "continuousDeploymentPolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnContinuousDeploymentPolicy.ContinuousDeploymentPolicyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnContinuousDeploymentPolicyProps"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::Distribution",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
          "exampleMetadata": "infused"
        },
        "remarks": "A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::Distribution`.",
        "example": "declare const sourceBucket: s3.Bucket;\n\nconst myDistribution = new cloudfront.Distribution(this, 'MyCfWebDistribution', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(sourceBucket),\n  },\n});\nconst cfnDistribution = myDistribution.node.defaultChild as cloudfront.CfnDistribution;\ncfnDistribution.overrideLogicalId('MyDistributionCFDistribution3H55TI9Q');"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::Distribution`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 1611
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnDistributionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1553
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1627
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1639
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDistribution",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1557
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DomainName"
            },
            "stability": "external",
            "summary": "The domain name of the resource, such as `d111111abcdef8.cloudfront.net` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1582
          },
          "name": "attrDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The identifier for the distribution, for example `EDFDVBD632BHDS5` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1588
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1632
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-tags"
            },
            "stability": "external",
            "summary": "A complex type that contains zero or more `Tag` elements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1602
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-distributionconfig"
            },
            "stability": "external",
            "summary": "The distribution's configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1595
          },
          "name": "distributionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DistributionConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.CacheBehaviorProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see [Quotas](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html) in the *Amazon CloudFront Developer Guide* .\n\nIf you don't want to specify any cache behaviors, include only an empty `CacheBehaviors` element. Don't include an empty `CacheBehavior` element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty `CacheBehaviors` element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see [Cache Behavior Settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "A complex type that describes how CloudFront processes requests.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cacheBehaviorProperty: cloudfront.CfnDistribution.CacheBehaviorProperty = {\n  pathPattern: 'pathPattern',\n  targetOriginId: 'targetOriginId',\n  viewerProtocolPolicy: 'viewerProtocolPolicy',\n\n  // the properties below are optional\n  allowedMethods: ['allowedMethods'],\n  cachedMethods: ['cachedMethods'],\n  cachePolicyId: 'cachePolicyId',\n  compress: false,\n  defaultTtl: 123,\n  fieldLevelEncryptionId: 'fieldLevelEncryptionId',\n  forwardedValues: {\n    queryString: false,\n\n    // the properties below are optional\n    cookies: {\n      forward: 'forward',\n\n      // the properties below are optional\n      whitelistedNames: ['whitelistedNames'],\n    },\n    headers: ['headers'],\n    queryStringCacheKeys: ['queryStringCacheKeys'],\n  },\n  functionAssociations: [{\n    eventType: 'eventType',\n    functionArn: 'functionArn',\n  }],\n  lambdaFunctionAssociations: [{\n    eventType: 'eventType',\n    includeBody: false,\n    lambdaFunctionArn: 'lambdaFunctionArn',\n  }],\n  maxTtl: 123,\n  minTtl: 123,\n  originRequestPolicyId: 'originRequestPolicyId',\n  realtimeLogConfigArn: 'realtimeLogConfigArn',\n  responseHeadersPolicyId: 'responseHeadersPolicyId',\n  smoothStreaming: false,\n  trustedKeyGroups: ['trustedKeyGroups'],\n  trustedSigners: ['trustedSigners'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CacheBehaviorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1665
      },
      "name": "CacheBehaviorProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-pathpattern"
            },
            "remarks": "> You can optionally include a slash ( `/` ) at the beginning of the path pattern. For example, `/images/*.jpg` . CloudFront behavior is the same with or without the leading `/` .\n\nThe path pattern for the default cache behavior is `*` and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see [Path Pattern](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The pattern (for example, `images/*.jpg` ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1778
          },
          "name": "pathPattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-targetoriginid"
            },
            "stability": "external",
            "summary": "The value of `ID` for the origin that you want CloudFront to route requests to when they match this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1802
          },
          "name": "targetOriginId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-viewerprotocolpolicy"
            },
            "remarks": "You can specify the following options:\n\n- `allow-all` : Viewers can use HTTP or HTTPS.\n- `redirect-to-https` : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n- `https-only` : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide* .\n\n> The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects' cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see [Managing Cache Expiration](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The protocol that viewers can use to access the files in the origin specified by `TargetOriginId` when a request matches the path pattern in `PathPattern` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1834
          },
          "name": "viewerProtocolPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-allowedmethods"
            },
            "remarks": "There are three choices:\n\n- CloudFront forwards only `GET` and `HEAD` requests.\n- CloudFront forwards only `GET` , `HEAD` , and `OPTIONS` requests.\n- CloudFront forwards `GET, HEAD, OPTIONS, PUT, PATCH, POST` , and `DELETE` requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.",
            "stability": "external",
            "summary": "A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1677
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-cachedmethods"
            },
            "remarks": "There are two choices:\n\n- CloudFront caches responses to `GET` and `HEAD` requests.\n- CloudFront caches responses to `GET` , `HEAD` , and `OPTIONS` requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.",
            "stability": "external",
            "summary": "A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1696
          },
          "name": "cachedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-cachepolicyid"
            },
            "remarks": "For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nA `CacheBehavior` must include either a `CachePolicyId` or `ForwardedValues` . We recommend that you use a `CachePolicyId` .",
            "stability": "external",
            "summary": "The unique identifier of the cache policy that is attached to this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1685
          },
          "name": "cachePolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-compress"
            },
            "remarks": "If so, specify true; if not, specify false. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "Whether you want CloudFront to automatically compress certain files for this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1702
          },
          "name": "compress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-defaultttl"
            },
            "remarks": "We recommend that you use the `DefaultTTL` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as `Cache-Control max-age` , `Cache-Control s-maxage` , and `Expires` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1710
          },
          "name": "defaultTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-fieldlevelencryptionid"
            },
            "stability": "external",
            "summary": "The value of `ID` for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1716
          },
          "name": "fieldLevelEncryptionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-forwardedvalues"
            },
            "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nA `CacheBehavior` must include either a `CachePolicyId` or `ForwardedValues` . We recommend that you use a `CachePolicyId` .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1730
          },
          "name": "forwardedValues",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-functionassociations"
            },
            "remarks": "CloudFront functions must be published to the `LIVE` stage to associate them with a cache behavior.",
            "stability": "external",
            "summary": "A list of CloudFront functions that are associated with this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1736
          },
          "name": "functionAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.FunctionAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-lambdafunctionassociations"
            },
            "stability": "external",
            "summary": "A complex type that contains zero or more Lambda@Edge function associations for a cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1742
          },
          "name": "lambdaFunctionAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LambdaFunctionAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-maxttl"
            },
            "remarks": "We recommend that you use the `MaxTTL` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as `Cache-Control max-age` , `Cache-Control s-maxage` , and `Expires` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1750
          },
          "name": "maxTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-minttl"
            },
            "remarks": "We recommend that you use the `MinTTL` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .\n\nYou must specify `0` for `MinTTL` if you configure CloudFront to forward all headers to your origin (under `Headers` , if you specify `1` for `Quantity` and `*` for `Name` ).",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1760
          },
          "name": "minTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-originrequestpolicyid"
            },
            "remarks": "For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The unique identifier of the origin request policy that is attached to this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1766
          },
          "name": "originRequestPolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-realtimelogconfigarn"
            },
            "remarks": "For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1784
          },
          "name": "realtimeLogConfigArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-responseheaderspolicyid"
            },
            "stability": "external",
            "summary": "The identifier for a response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1790
          },
          "name": "responseHeadersPolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-smoothstreaming"
            },
            "remarks": "If so, specify `true` ; if not, specify `false` . If you specify `true` for `SmoothStreaming` , you can still distribute other content using this cache behavior if the content matches the value of `PathPattern` .",
            "stability": "external",
            "summary": "Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1796
          },
          "name": "smoothStreaming",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-trustedkeygroups"
            },
            "remarks": "When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "A list of key groups that CloudFront can use to validate signed URLs or signed cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1810
          },
          "name": "trustedKeyGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-trustedsigners"
            },
            "remarks": "A list of AWS account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer's AWS account . The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "> We recommend using `TrustedKeyGroups` instead of `TrustedSigners` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1820
          },
          "name": "trustedSigners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.CacheBehaviorProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.CookiesProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cookies.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide* .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "This field is deprecated.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cookiesProperty: cloudfront.CfnDistribution.CookiesProperty = {\n  forward: 'forward',\n\n  // the properties below are optional\n  whitelistedNames: ['whitelistedNames'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CookiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1961
      },
      "name": "CookiesProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cookies.html#cfn-cloudfront-distribution-cookies-forward"
            },
            "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide* .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the `WhitelistedNames` complex type.\n\nAmazon S3 doesn't process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the `Forward` element.",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1975
          },
          "name": "forward",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cookies.html#cfn-cloudfront-distribution-cookies-whitelistednames"
            },
            "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide* .\n\nRequired if you specify `whitelist` for the value of `Forward` . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify `all` or `none` for the value of `Forward` , omit `WhitelistedNames` . If you change the value of `Forward` from `whitelist` to `all` or `none` and you don't delete the `WhitelistedNames` element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see [CloudFront Limits](https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront) in the *AWS General Reference* .",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1991
          },
          "name": "whitelistedNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.CookiesProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.CustomErrorResponseProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "- Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n- How long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "A complex type that controls:.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst customErrorResponseProperty: cloudfront.CfnDistribution.CustomErrorResponseProperty = {\n  errorCode: 123,\n\n  // the properties below are optional\n  errorCachingMinTtl: 123,\n  responseCode: 123,\n  responsePagePath: 'responsePagePath',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomErrorResponseProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2061
      },
      "name": "CustomErrorResponseProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html#cfn-cloudfront-distribution-customerrorresponse-errorcode"
            },
            "stability": "external",
            "summary": "The HTTP status code for which you want to specify a custom error page and/or a caching duration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2075
          },
          "name": "errorCode",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html#cfn-cloudfront-distribution-customerrorresponse-errorcachingminttl"
            },
            "remarks": "When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in `ErrorCode` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2069
          },
          "name": "errorCachingMinTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html#cfn-cloudfront-distribution-customerrorresponse-responsecode"
            },
            "remarks": "There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\n- Some Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute `200` , the response typically won't be intercepted.\n- If you don't care about distinguishing among different client errors or server errors, you can specify `400` or `500` as the `ResponseCode` for all 4xx or 5xx errors.\n- You might want to return a `200` status code (OK) and static website so your customers don't know that your website is down.\n\nIf you specify a value for `ResponseCode` , you must also specify a value for `ResponsePagePath` .",
            "stability": "external",
            "summary": "The HTTP status code that you want CloudFront to return to the viewer along with the custom error page."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2087
          },
          "name": "responseCode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html#cfn-cloudfront-distribution-customerrorresponse-responsepagepath"
            },
            "remarks": "- The value of `PathPattern` matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named `/4xx-errors` . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, `/4xx-errors/*` .\n- The value of `TargetOriginId` specifies the value of the `ID` element for the origin that contains your custom error pages.\n\nIf you specify a value for `ResponsePagePath` , you must also specify a value for `ResponseCode` .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can't get the files that you want to return to viewers because the origin server is unavailable.",
            "stability": "external",
            "summary": "The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by `ErrorCode` , for example, `/4xx-errors/403-forbidden.html` . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2100
          },
          "name": "responsePagePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.CustomErrorResponseProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.",
        "stability": "external",
        "summary": "A custom origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst customOriginConfigProperty: cloudfront.CfnDistribution.CustomOriginConfigProperty = {\n  originProtocolPolicy: 'originProtocolPolicy',\n\n  // the properties below are optional\n  httpPort: 123,\n  httpsPort: 123,\n  originKeepaliveTimeout: 123,\n  originReadTimeout: 123,\n  originSslProtocols: ['originSslProtocols'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2171
      },
      "name": "CustomOriginConfigProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-originprotocolpolicy"
            },
            "remarks": "- `http-only` – CloudFront always uses HTTP to connect to the origin.\n- `match-viewer` – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n- `https-only` – CloudFront always uses HTTPS to connect to the origin.",
            "stability": "external",
            "summary": "Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2201
          },
          "name": "originProtocolPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-httpport"
            },
            "remarks": "Specify the HTTP port that the origin listens on.",
            "stability": "external",
            "summary": "The HTTP port that CloudFront uses to connect to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2177
          },
          "name": "httpPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-httpsport"
            },
            "remarks": "Specify the HTTPS port that the origin listens on.",
            "stability": "external",
            "summary": "The HTTPS port that CloudFront uses to connect to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2183
          },
          "name": "httpsPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-originkeepalivetimeout"
            },
            "remarks": "The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 5 seconds.\n\nFor more information, see [Origin Keep-alive Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginKeepaliveTimeout) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "Specifies how long, in seconds, CloudFront persists its connection to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2191
          },
          "name": "originKeepaliveTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-originreadtimeout"
            },
            "remarks": "This is also known as the *origin response timeout* . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 30 seconds.\n\nFor more information, see [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "Specifies how long, in seconds, CloudFront waits for a response from the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2209
          },
          "name": "originReadTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-originsslprotocols"
            },
            "remarks": "Valid values include `SSLv3` , `TLSv1` , `TLSv1.1` , and `TLSv1.2` .\n\nFor more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "Specifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2217
          },
          "name": "originSslProtocols",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.CustomOriginConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.DefaultCacheBehaviorProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must create exactly one default cache behavior.",
        "stability": "external",
        "summary": "A complex type that describes the default cache behavior if you don't specify a `CacheBehavior` element or if request URLs don't match any of the values of `PathPattern` in `CacheBehavior` elements.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst defaultCacheBehaviorProperty: cloudfront.CfnDistribution.DefaultCacheBehaviorProperty = {\n  targetOriginId: 'targetOriginId',\n  viewerProtocolPolicy: 'viewerProtocolPolicy',\n\n  // the properties below are optional\n  allowedMethods: ['allowedMethods'],\n  cachedMethods: ['cachedMethods'],\n  cachePolicyId: 'cachePolicyId',\n  compress: false,\n  defaultTtl: 123,\n  fieldLevelEncryptionId: 'fieldLevelEncryptionId',\n  forwardedValues: {\n    queryString: false,\n\n    // the properties below are optional\n    cookies: {\n      forward: 'forward',\n\n      // the properties below are optional\n      whitelistedNames: ['whitelistedNames'],\n    },\n    headers: ['headers'],\n    queryStringCacheKeys: ['queryStringCacheKeys'],\n  },\n  functionAssociations: [{\n    eventType: 'eventType',\n    functionArn: 'functionArn',\n  }],\n  lambdaFunctionAssociations: [{\n    eventType: 'eventType',\n    includeBody: false,\n    lambdaFunctionArn: 'lambdaFunctionArn',\n  }],\n  maxTtl: 123,\n  minTtl: 123,\n  originRequestPolicyId: 'originRequestPolicyId',\n  realtimeLogConfigArn: 'realtimeLogConfigArn',\n  responseHeadersPolicyId: 'responseHeadersPolicyId',\n  smoothStreaming: false,\n  trustedKeyGroups: ['trustedKeyGroups'],\n  trustedSigners: ['trustedSigners'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DefaultCacheBehaviorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2294
      },
      "name": "DefaultCacheBehaviorProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-targetoriginid"
            },
            "stability": "external",
            "summary": "The value of `ID` for the origin that you want CloudFront to route requests to when they use the default cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2419
          },
          "name": "targetOriginId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-viewerprotocolpolicy"
            },
            "remarks": "You can specify the following options:\n\n- `allow-all` : Viewers can use HTTP or HTTPS.\n- `redirect-to-https` : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n- `https-only` : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide* .\n\n> The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects' cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see [Managing Cache Expiration](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The protocol that viewers can use to access the files in the origin specified by `TargetOriginId` when a request matches the path pattern in `PathPattern` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2451
          },
          "name": "viewerProtocolPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-allowedmethods"
            },
            "remarks": "There are three choices:\n\n- CloudFront forwards only `GET` and `HEAD` requests.\n- CloudFront forwards only `GET` , `HEAD` , and `OPTIONS` requests.\n- CloudFront forwards `GET, HEAD, OPTIONS, PUT, PATCH, POST` , and `DELETE` requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.",
            "stability": "external",
            "summary": "A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2306
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-cachedmethods"
            },
            "remarks": "There are two choices:\n\n- CloudFront caches responses to `GET` and `HEAD` requests.\n- CloudFront caches responses to `GET` , `HEAD` , and `OPTIONS` requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.",
            "stability": "external",
            "summary": "A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2325
          },
          "name": "cachedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-cachepolicyid"
            },
            "remarks": "For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nA `DefaultCacheBehavior` must include either a `CachePolicyId` or `ForwardedValues` . We recommend that you use a `CachePolicyId` .",
            "stability": "external",
            "summary": "The unique identifier of the cache policy that is attached to the default cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2314
          },
          "name": "cachePolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-compress"
            },
            "remarks": "If so, specify `true` ; if not, specify `false` . For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "Whether you want CloudFront to automatically compress certain files for this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2331
          },
          "name": "compress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-defaultttl"
            },
            "remarks": "We recommend that you use the `DefaultTTL` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as `Cache-Control max-age` , `Cache-Control s-maxage` , and `Expires` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2339
          },
          "name": "defaultTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-fieldlevelencryptionid"
            },
            "stability": "external",
            "summary": "The value of `ID` for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2345
          },
          "name": "fieldLevelEncryptionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-forwardedvalues"
            },
            "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nA `DefaultCacheBehavior` must include either a `CachePolicyId` or `ForwardedValues` . We recommend that you use a `CachePolicyId` .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2359
          },
          "name": "forwardedValues",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-functionassociations"
            },
            "remarks": "CloudFront functions must be published to the `LIVE` stage to associate them with a cache behavior.",
            "stability": "external",
            "summary": "A list of CloudFront functions that are associated with this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2365
          },
          "name": "functionAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.FunctionAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-lambdafunctionassociations"
            },
            "stability": "external",
            "summary": "A complex type that contains zero or more Lambda@Edge function associations for a cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2371
          },
          "name": "lambdaFunctionAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LambdaFunctionAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-maxttl"
            },
            "remarks": "We recommend that you use the `MaxTTL` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as `Cache-Control max-age` , `Cache-Control s-maxage` , and `Expires` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2379
          },
          "name": "maxTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-minttl"
            },
            "remarks": "We recommend that you use the `MinTTL` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide* .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide* .\n\nYou must specify `0` for `MinTTL` if you configure CloudFront to forward all headers to your origin (under `Headers` , if you specify `1` for `Quantity` and `*` for `Name` ).",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2389
          },
          "name": "minTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-originrequestpolicyid"
            },
            "remarks": "For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The unique identifier of the origin request policy that is attached to the default cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2395
          },
          "name": "originRequestPolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-realtimelogconfigarn"
            },
            "remarks": "For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2401
          },
          "name": "realtimeLogConfigArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-responseheaderspolicyid"
            },
            "stability": "external",
            "summary": "The identifier for a response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2407
          },
          "name": "responseHeadersPolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-smoothstreaming"
            },
            "remarks": "If so, specify `true` ; if not, specify `false` . If you specify `true` for `SmoothStreaming` , you can still distribute other content using this cache behavior if the content matches the value of `PathPattern` .",
            "stability": "external",
            "summary": "Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2413
          },
          "name": "smoothStreaming",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-trustedkeygroups"
            },
            "remarks": "When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "A list of key groups that CloudFront can use to validate signed URLs or signed cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2427
          },
          "name": "trustedKeyGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-trustedsigners"
            },
            "remarks": "A list of AWS account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer's AWS account . The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "> We recommend using `TrustedKeyGroups` instead of `TrustedSigners` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2437
          },
          "name": "trustedSigners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.DefaultCacheBehaviorProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.DistributionConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A distribution configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst distributionConfigProperty: cloudfront.CfnDistribution.DistributionConfigProperty = {\n  defaultCacheBehavior: {\n    targetOriginId: 'targetOriginId',\n    viewerProtocolPolicy: 'viewerProtocolPolicy',\n\n    // the properties below are optional\n    allowedMethods: ['allowedMethods'],\n    cachedMethods: ['cachedMethods'],\n    cachePolicyId: 'cachePolicyId',\n    compress: false,\n    defaultTtl: 123,\n    fieldLevelEncryptionId: 'fieldLevelEncryptionId',\n    forwardedValues: {\n      queryString: false,\n\n      // the properties below are optional\n      cookies: {\n        forward: 'forward',\n\n        // the properties below are optional\n        whitelistedNames: ['whitelistedNames'],\n      },\n      headers: ['headers'],\n      queryStringCacheKeys: ['queryStringCacheKeys'],\n    },\n    functionAssociations: [{\n      eventType: 'eventType',\n      functionArn: 'functionArn',\n    }],\n    lambdaFunctionAssociations: [{\n      eventType: 'eventType',\n      includeBody: false,\n      lambdaFunctionArn: 'lambdaFunctionArn',\n    }],\n    maxTtl: 123,\n    minTtl: 123,\n    originRequestPolicyId: 'originRequestPolicyId',\n    realtimeLogConfigArn: 'realtimeLogConfigArn',\n    responseHeadersPolicyId: 'responseHeadersPolicyId',\n    smoothStreaming: false,\n    trustedKeyGroups: ['trustedKeyGroups'],\n    trustedSigners: ['trustedSigners'],\n  },\n  enabled: false,\n\n  // the properties below are optional\n  aliases: ['aliases'],\n  cacheBehaviors: [{\n    pathPattern: 'pathPattern',\n    targetOriginId: 'targetOriginId',\n    viewerProtocolPolicy: 'viewerProtocolPolicy',\n\n    // the properties below are optional\n    allowedMethods: ['allowedMethods'],\n    cachedMethods: ['cachedMethods'],\n    cachePolicyId: 'cachePolicyId',\n    compress: false,\n    defaultTtl: 123,\n    fieldLevelEncryptionId: 'fieldLevelEncryptionId',\n    forwardedValues: {\n      queryString: false,\n\n      // the properties below are optional\n      cookies: {\n        forward: 'forward',\n\n        // the properties below are optional\n        whitelistedNames: ['whitelistedNames'],\n      },\n      headers: ['headers'],\n      queryStringCacheKeys: ['queryStringCacheKeys'],\n    },\n    functionAssociations: [{\n      eventType: 'eventType',\n      functionArn: 'functionArn',\n    }],\n    lambdaFunctionAssociations: [{\n      eventType: 'eventType',\n      includeBody: false,\n      lambdaFunctionArn: 'lambdaFunctionArn',\n    }],\n    maxTtl: 123,\n    minTtl: 123,\n    originRequestPolicyId: 'originRequestPolicyId',\n    realtimeLogConfigArn: 'realtimeLogConfigArn',\n    responseHeadersPolicyId: 'responseHeadersPolicyId',\n    smoothStreaming: false,\n    trustedKeyGroups: ['trustedKeyGroups'],\n    trustedSigners: ['trustedSigners'],\n  }],\n  cnamEs: ['cnamEs'],\n  comment: 'comment',\n  continuousDeploymentPolicyId: 'continuousDeploymentPolicyId',\n  customErrorResponses: [{\n    errorCode: 123,\n\n    // the properties below are optional\n    errorCachingMinTtl: 123,\n    responseCode: 123,\n    responsePagePath: 'responsePagePath',\n  }],\n  customOrigin: {\n    dnsName: 'dnsName',\n    originProtocolPolicy: 'originProtocolPolicy',\n    originSslProtocols: ['originSslProtocols'],\n\n    // the properties below are optional\n    httpPort: 123,\n    httpsPort: 123,\n  },\n  defaultRootObject: 'defaultRootObject',\n  httpVersion: 'httpVersion',\n  ipv6Enabled: false,\n  logging: {\n    bucket: 'bucket',\n\n    // the properties below are optional\n    includeCookies: false,\n    prefix: 'prefix',\n  },\n  originGroups: {\n    quantity: 123,\n\n    // the properties below are optional\n    items: [{\n      failoverCriteria: {\n        statusCodes: {\n          items: [123],\n          quantity: 123,\n        },\n      },\n      id: 'id',\n      members: {\n        items: [{\n          originId: 'originId',\n        }],\n        quantity: 123,\n      },\n    }],\n  },\n  origins: [{\n    domainName: 'domainName',\n    id: 'id',\n\n    // the properties below are optional\n    connectionAttempts: 123,\n    connectionTimeout: 123,\n    customOriginConfig: {\n      originProtocolPolicy: 'originProtocolPolicy',\n\n      // the properties below are optional\n      httpPort: 123,\n      httpsPort: 123,\n      originKeepaliveTimeout: 123,\n      originReadTimeout: 123,\n      originSslProtocols: ['originSslProtocols'],\n    },\n    originAccessControlId: 'originAccessControlId',\n    originCustomHeaders: [{\n      headerName: 'headerName',\n      headerValue: 'headerValue',\n    }],\n    originPath: 'originPath',\n    originShield: {\n      enabled: false,\n      originShieldRegion: 'originShieldRegion',\n    },\n    s3OriginConfig: {\n      originAccessIdentity: 'originAccessIdentity',\n    },\n  }],\n  priceClass: 'priceClass',\n  restrictions: {\n    geoRestriction: {\n      restrictionType: 'restrictionType',\n\n      // the properties below are optional\n      locations: ['locations'],\n    },\n  },\n  s3Origin: {\n    dnsName: 'dnsName',\n\n    // the properties below are optional\n    originAccessIdentity: 'originAccessIdentity',\n  },\n  staging: false,\n  viewerCertificate: {\n    acmCertificateArn: 'acmCertificateArn',\n    cloudFrontDefaultCertificate: false,\n    iamCertificateId: 'iamCertificateId',\n    minimumProtocolVersion: 'minimumProtocolVersion',\n    sslSupportMethod: 'sslSupportMethod',\n  },\n  webAclId: 'webAclId',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DistributionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2568
      },
      "name": "DistributionConfigProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-defaultcachebehavior"
            },
            "remarks": "You must create exactly one default cache behavior.",
            "stability": "external",
            "summary": "A complex type that describes the default cache behavior if you don't specify a `CacheBehavior` element or if files don't match any of the values of `PathPattern` in `CacheBehavior` elements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2621
          },
          "name": "defaultCacheBehavior",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DefaultCacheBehaviorProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-enabled"
            },
            "stability": "external",
            "summary": "From this field, you can enable or disable the selected distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2643
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-aliases"
            },
            "stability": "external",
            "summary": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2574
          },
          "name": "aliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-cachebehaviors"
            },
            "stability": "external",
            "summary": "A complex type that contains zero or more `CacheBehavior` elements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2586
          },
          "name": "cacheBehaviors",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CacheBehaviorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-cnames"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.CNAMEs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2580
          },
          "name": "cnamEs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-comment"
            },
            "remarks": "The comment cannot be longer than 128 characters.",
            "stability": "external",
            "summary": "A comment to describe the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2592
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-continuousdeploymentpolicyid"
            },
            "remarks": "For more information, see `CreateContinuousDeploymentPolicy` .",
            "stability": "external",
            "summary": "The identifier of a continuous deployment policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2598
          },
          "name": "continuousDeploymentPolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-customerrorresponses"
            },
            "remarks": "- Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n- How long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "A complex type that controls the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2609
          },
          "name": "customErrorResponses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomErrorResponseProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-customorigin"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.CustomOrigin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2615
          },
          "name": "customOrigin",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyCustomOriginProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-defaultrootobject"
            },
            "remarks": "Specify only the object name, for example, `index.html` . Don't add a `/` before the object name.\n\nIf you don't want to specify a default root object when you create a distribution, include an empty `DefaultRootObject` element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty `DefaultRootObject` element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The object that you want CloudFront to request from your origin (for example, `index.html` ) when a viewer requests the root URL for your distribution ( `https://www.example.com` ) instead of an object in your distribution ( `https://www.example.com/product-description.html` ). Specifying a default root object avoids exposing the contents of your distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2637
          },
          "name": "defaultRootObject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-httpversion"
            },
            "remarks": "The default value for new distributions is `http1.1` .\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLSv1.2 or later, and must support Server Name Indication (SNI).\n\nFor viewers and CloudFront to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication (SNI). CloudFront supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration) at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html) .",
            "stability": "external",
            "summary": "(Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CloudFront ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2653
          },
          "name": "httpVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-ipv6enabled"
            },
            "remarks": "If you specify `false` , CloudFront responds to IPv6 DNS requests with the DNS response code `NOERROR` and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the `IpAddress` parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html) in the *Amazon CloudFront Developer Guide* .\n\nIf you're using an Amazon Route 53 AWS Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\n- You enable IPv6 for the distribution\n- You're using alternate domain names in the URLs for your objects\n\nFor more information, see [Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html) in the *Amazon Route 53 AWS Integration Developer Guide* .\n\nIf you created a CNAME resource record set, either with Amazon Route 53 AWS Integration or with another DNS service, you don't need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.",
            "stability": "external",
            "summary": "If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify `true` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2670
          },
          "name": "ipv6Enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-logging"
            },
            "remarks": "For more information about logging, see [Access Logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "A complex type that controls whether access logs are written for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2678
          },
          "name": "logging",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LoggingProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-origingroups"
            },
            "stability": "external",
            "summary": "A complex type that contains information about origin groups for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2684
          },
          "name": "originGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-origins"
            },
            "stability": "external",
            "summary": "A complex type that contains information about origins for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2690
          },
          "name": "origins",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-priceclass"
            },
            "remarks": "If you specify `PriceClass_All` , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than `PriceClass_All` , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see [Choosing the Price Class for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in the *Amazon CloudFront Developer Guide* . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/) .",
            "stability": "external",
            "summary": "The price class that corresponds with the maximum price that you want to pay for CloudFront service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2700
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions"
            },
            "stability": "external",
            "summary": "A complex type that identifies ways in which you want to restrict distribution of your content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2706
          },
          "name": "restrictions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.RestrictionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-s3origin"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.S3Origin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2712
          },
          "name": "s3Origin",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyS3OriginProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-staging"
            },
            "remarks": "When this value is `true` , this is a staging distribution. When this value is `false` , this is not a staging distribution.",
            "stability": "external",
            "summary": "A Boolean that indicates whether this is a staging distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2718
          },
          "name": "staging",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-viewercertificate"
            },
            "stability": "external",
            "summary": "A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2724
          },
          "name": "viewerCertificate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ViewerCertificateProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-webaclid"
            },
            "remarks": "To specify a web ACL created using the latest version of AWS WAF , use the ACL ARN, for example `arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a` . To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `473e64fd-f30b-4765-81a0-62ad96dd167a` .\n\nAWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about AWS WAF , see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html) .",
            "stability": "external",
            "summary": "A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2732
          },
          "name": "webAclId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.DistributionConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide* .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.",
        "stability": "external",
        "summary": "This field is deprecated.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst forwardedValuesProperty: cloudfront.CfnDistribution.ForwardedValuesProperty = {\n  queryString: false,\n\n  // the properties below are optional\n  cookies: {\n    forward: 'forward',\n\n    // the properties below are optional\n    whitelistedNames: ['whitelistedNames'],\n  },\n  headers: ['headers'],\n  queryStringCacheKeys: ['queryStringCacheKeys'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2861
      },
      "name": "ForwardedValuesProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html#cfn-cloudfront-distribution-forwardedvalues-querystring"
            },
            "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide* .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of `QueryString` and on the values that you specify for `QueryStringCacheKeys` , if any:\n\nIf you specify true for `QueryString` and you don't specify any values for `QueryStringCacheKeys` , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for `QueryString` and you specify one or more values for `QueryStringCacheKeys` , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for `QueryString` , CloudFront doesn't forward any query string parameters to the origin, and doesn't cache based on query string parameters.\n\nFor more information, see [Configuring CloudFront to Cache Based on Query String Parameters](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2907
          },
          "name": "queryString",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html#cfn-cloudfront-distribution-forwardedvalues-cookies"
            },
            "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide* .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2873
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CookiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html#cfn-cloudfront-distribution-forwardedvalues-headers"
            },
            "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide* .\n\nA complex type that specifies the `Headers` , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see [Caching Content Based on Request Headers](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2887
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html#cfn-cloudfront-distribution-forwardedvalues-querystringcachekeys"
            },
            "remarks": "We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide* .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide* .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.",
            "stability": "external",
            "summary": "This field is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2919
          },
          "name": "queryStringCacheKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.ForwardedValuesProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.FunctionAssociationProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-functionassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A CloudFront function that is associated with a cache behavior in a CloudFront distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst functionAssociationProperty: cloudfront.CfnDistribution.FunctionAssociationProperty = {\n  eventType: 'eventType',\n  functionArn: 'functionArn',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.FunctionAssociationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2990
      },
      "name": "FunctionAssociationProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-functionassociation.html#cfn-cloudfront-distribution-functionassociation-eventtype"
            },
            "remarks": "You cannot use origin-facing event types ( `origin-request` and `origin-response` ) with a CloudFront function.",
            "stability": "external",
            "summary": "The event type of the function, either `viewer-request` or `viewer-response` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2996
          },
          "name": "eventType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-functionassociation.html#cfn-cloudfront-distribution-functionassociation-functionarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3002
          },
          "name": "functionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.FunctionAssociationProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.GeoRestrictionProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-georestriction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "CloudFront determines the location of your users using `MaxMind` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.",
        "stability": "external",
        "summary": "A complex type that controls the countries in which your content is distributed.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst geoRestrictionProperty: cloudfront.CfnDistribution.GeoRestrictionProperty = {\n  restrictionType: 'restrictionType',\n\n  // the properties below are optional\n  locations: ['locations'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.GeoRestrictionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3066
      },
      "name": "GeoRestrictionProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-georestriction.html#cfn-cloudfront-distribution-georestriction-restrictiontype"
            },
            "remarks": "- `none` : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n- `blacklist` : The `Location` elements specify the countries in which you don't want CloudFront to distribute your content.\n- `whitelist` : The `Location` elements specify the countries in which you want CloudFront to distribute your content.",
            "stability": "external",
            "summary": "The method that you want to use to restrict distribution of your content by country:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3086
          },
          "name": "restrictionType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-georestriction.html#cfn-cloudfront-distribution-georestriction-locations"
            },
            "remarks": "The `Location` element is a two-letter, uppercase country code for a country that you want to include in your `blacklist` or `whitelist` . Include one `Location` element for each country.\n\nCloudFront and `MaxMind` both use `ISO 3166` country codes. For the current list of countries and the corresponding codes, see `ISO 3166-1-alpha-2` code on the *International Organization for Standardization* website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.",
            "stability": "external",
            "summary": "A complex type that contains a `Location` element for each country in which you want CloudFront either to distribute your content ( `whitelist` ) or not distribute your content ( `blacklist` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3076
          },
          "name": "locations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.GeoRestrictionProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.LambdaFunctionAssociationProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex type that contains a Lambda@Edge function association.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst lambdaFunctionAssociationProperty: cloudfront.CfnDistribution.LambdaFunctionAssociationProperty = {\n  eventType: 'eventType',\n  includeBody: false,\n  lambdaFunctionArn: 'lambdaFunctionArn',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LambdaFunctionAssociationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3151
      },
      "name": "LambdaFunctionAssociationProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html#cfn-cloudfront-distribution-lambdafunctionassociation-eventtype"
            },
            "remarks": "- `viewer-request` : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n- `origin-request` : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn't execute.\n- `origin-response` : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn't execute.\n- `viewer-response` : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache.\n\nIf the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn't execute.",
            "stability": "external",
            "summary": "Specifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3164
          },
          "name": "eventType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html#cfn-cloudfront-distribution-lambdafunctionassociation-includebody"
            },
            "remarks": "For more information, see [Accessing the Request Body by Choosing the Include Body Option](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html) in the Amazon CloudFront Developer Guide.",
            "stability": "external",
            "summary": "A flag that allows a Lambda@Edge function to have read access to the body content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3170
          },
          "name": "includeBody",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html#cfn-cloudfront-distribution-lambdafunctionassociation-lambdafunctionarn"
            },
            "remarks": "You must specify the ARN of a function version; you can't specify an alias or $LATEST.",
            "stability": "external",
            "summary": "The ARN of the Lambda@Edge function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3176
          },
          "name": "lambdaFunctionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.LambdaFunctionAssociationProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyCustomOriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst legacyCustomOriginProperty: cloudfront.CfnDistribution.LegacyCustomOriginProperty = {\n  dnsName: 'dnsName',\n  originProtocolPolicy: 'originProtocolPolicy',\n  originSslProtocols: ['originSslProtocols'],\n\n  // the properties below are optional\n  httpPort: 123,\n  httpsPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyCustomOriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3243
      },
      "name": "LegacyCustomOriginProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-dnsname"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.DNSName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3249
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-originprotocolpolicy"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.OriginProtocolPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3267
          },
          "name": "originProtocolPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-originsslprotocols"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.OriginSSLProtocols`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3273
          },
          "name": "originSslProtocols",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-httpport"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.HTTPPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3255
          },
          "name": "httpPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-httpsport"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.HTTPSPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3261
          },
          "name": "httpsPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.LegacyCustomOriginProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyS3OriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacys3origin.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst legacyS3OriginProperty: cloudfront.CfnDistribution.LegacyS3OriginProperty = {\n  dnsName: 'dnsName',\n\n  // the properties below are optional\n  originAccessIdentity: 'originAccessIdentity',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyS3OriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3349
      },
      "name": "LegacyS3OriginProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacys3origin.html#cfn-cloudfront-distribution-legacys3origin-dnsname"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyS3OriginProperty.DNSName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3355
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacys3origin.html#cfn-cloudfront-distribution-legacys3origin-originaccessidentity"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyS3OriginProperty.OriginAccessIdentity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3361
          },
          "name": "originAccessIdentity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.LegacyS3OriginProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.LoggingProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-logging.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex type that controls whether access logs are written for the distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst loggingProperty: cloudfront.CfnDistribution.LoggingProperty = {\n  bucket: 'bucket',\n\n  // the properties below are optional\n  includeCookies: false,\n  prefix: 'prefix',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LoggingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3426
      },
      "name": "LoggingProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-logging.html#cfn-cloudfront-distribution-logging-bucket"
            },
            "stability": "external",
            "summary": "The Amazon S3 bucket to store the access logs in, for example, `myawslogbucket.s3.amazonaws.com` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3432
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-logging.html#cfn-cloudfront-distribution-logging-includecookies"
            },
            "remarks": "If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify `false` for `IncludeCookies` .",
            "stability": "external",
            "summary": "Specifies whether you want CloudFront to include cookies in access logs, specify `true` for `IncludeCookies` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3438
          },
          "name": "includeCookies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-logging.html#cfn-cloudfront-distribution-logging-prefix"
            },
            "remarks": "If you want to enable logging, but you don't want to specify a prefix, you still must include an empty `Prefix` element in the `Logging` element.",
            "stability": "external",
            "summary": "An optional string that you want CloudFront to prefix to the access log `filenames` for this distribution, for example, `myprefix/` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3444
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.LoggingProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginCustomHeaderProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origincustomheader.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex type that contains `HeaderName` and `HeaderValue` elements, if any, for this distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originCustomHeaderProperty: cloudfront.CfnDistribution.OriginCustomHeaderProperty = {\n  headerName: 'headerName',\n  headerValue: 'headerValue',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginCustomHeaderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3693
      },
      "name": "OriginCustomHeaderProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origincustomheader.html#cfn-cloudfront-distribution-origincustomheader-headername"
            },
            "remarks": "For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The name of a header that you want CloudFront to send to your origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3699
          },
          "name": "headerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origincustomheader.html#cfn-cloudfront-distribution-origincustomheader-headervalue"
            },
            "stability": "external",
            "summary": "The value for the header that you specified in the `HeaderName` field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3705
          },
          "name": "headerValue",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.OriginCustomHeaderProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupFailoverCriteriaProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupfailovercriteria.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originGroupFailoverCriteriaProperty: cloudfront.CfnDistribution.OriginGroupFailoverCriteriaProperty = {\n  statusCodes: {\n    items: [123],\n    quantity: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupFailoverCriteriaProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3859
      },
      "name": "OriginGroupFailoverCriteriaProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupfailovercriteria.html#cfn-cloudfront-distribution-origingroupfailovercriteria-statuscodes"
            },
            "stability": "external",
            "summary": "The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3865
          },
          "name": "statusCodes",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.StatusCodesProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.OriginGroupFailoverCriteriaProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMemberProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmember.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An origin in an origin group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originGroupMemberProperty: cloudfront.CfnDistribution.OriginGroupMemberProperty = {\n  originId: 'originId',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMemberProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3927
      },
      "name": "OriginGroupMemberProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmember.html#cfn-cloudfront-distribution-origingroupmember-originid"
            },
            "stability": "external",
            "summary": "The ID for an origin in an origin group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3933
          },
          "name": "originId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.OriginGroupMemberProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMembersProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmembers.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex data type for the origins included in an origin group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originGroupMembersProperty: cloudfront.CfnDistribution.OriginGroupMembersProperty = {\n  items: [{\n    originId: 'originId',\n  }],\n  quantity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMembersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3995
      },
      "name": "OriginGroupMembersProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmembers.html#cfn-cloudfront-distribution-origingroupmembers-items"
            },
            "stability": "external",
            "summary": "Items (origins) in an origin group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4001
          },
          "name": "items",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMemberProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmembers.html#cfn-cloudfront-distribution-origingroupmembers-quantity"
            },
            "stability": "external",
            "summary": "The number of origins in an origin group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4007
          },
          "name": "quantity",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.OriginGroupMembersProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you've chosen.",
        "stability": "external",
        "summary": "An origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originGroupProperty: cloudfront.CfnDistribution.OriginGroupProperty = {\n  failoverCriteria: {\n    statusCodes: {\n      items: [123],\n      quantity: 123,\n    },\n  },\n  id: 'id',\n  members: {\n    items: [{\n      originId: 'originId',\n    }],\n    quantity: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3771
      },
      "name": "OriginGroupProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroup.html#cfn-cloudfront-distribution-origingroup-failovercriteria"
            },
            "stability": "external",
            "summary": "A complex type that contains information about the failover criteria for an origin group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3777
          },
          "name": "failoverCriteria",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupFailoverCriteriaProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroup.html#cfn-cloudfront-distribution-origingroup-id"
            },
            "stability": "external",
            "summary": "The origin group's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3783
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroup.html#cfn-cloudfront-distribution-origingroup-members"
            },
            "stability": "external",
            "summary": "A complex type that contains information about the origins in an origin group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3789
          },
          "name": "members",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMembersProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.OriginGroupProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupsProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroups.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex data type for the origin groups specified for a distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originGroupsProperty: cloudfront.CfnDistribution.OriginGroupsProperty = {\n  quantity: 123,\n\n  // the properties below are optional\n  items: [{\n    failoverCriteria: {\n      statusCodes: {\n        items: [123],\n        quantity: 123,\n      },\n    },\n    id: 'id',\n    members: {\n      items: [{\n        originId: 'originId',\n      }],\n      quantity: 123,\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4073
      },
      "name": "OriginGroupsProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroups.html#cfn-cloudfront-distribution-origingroups-quantity"
            },
            "stability": "external",
            "summary": "The number of origin groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4085
          },
          "name": "quantity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroups.html#cfn-cloudfront-distribution-origingroups-items"
            },
            "stability": "external",
            "summary": "The items (origin groups) in a distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4079
          },
          "name": "items",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.OriginGroupsProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "An origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\n- Use `S3OriginConfig` to specify an Amazon S3 bucket that is not configured with static website hosting.\n- Use `CustomOriginConfig` to specify all other kinds of origins, including:\n\n- An Amazon S3 bucket that is configured with static website hosting\n- An Elastic Load Balancing load balancer\n- An AWS Elemental MediaPackage endpoint\n- An AWS Elemental MediaStore container\n- Any other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see [General Quotas on Web Distributions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions) in the *Amazon CloudFront Developer Guide* (quotas were formerly referred to as limits).",
        "stability": "external",
        "summary": "An origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originProperty: cloudfront.CfnDistribution.OriginProperty = {\n  domainName: 'domainName',\n  id: 'id',\n\n  // the properties below are optional\n  connectionAttempts: 123,\n  connectionTimeout: 123,\n  customOriginConfig: {\n    originProtocolPolicy: 'originProtocolPolicy',\n\n    // the properties below are optional\n    httpPort: 123,\n    httpsPort: 123,\n    originKeepaliveTimeout: 123,\n    originReadTimeout: 123,\n    originSslProtocols: ['originSslProtocols'],\n  },\n  originAccessControlId: 'originAccessControlId',\n  originCustomHeaders: [{\n    headerName: 'headerName',\n    headerValue: 'headerValue',\n  }],\n  originPath: 'originPath',\n  originShield: {\n    enabled: false,\n    originShieldRegion: 'originShieldRegion',\n  },\n  s3OriginConfig: {\n    originAccessIdentity: 'originAccessIdentity',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3525
      },
      "name": "OriginProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-domainname"
            },
            "remarks": "For more information, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The domain name for the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3557
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-id"
            },
            "remarks": "Use this value to specify the `TargetOriginId` in a `CacheBehavior` or `DefaultCacheBehavior` .",
            "stability": "external",
            "summary": "A unique identifier for the origin. This value must be unique within the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3565
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-connectionattempts"
            },
            "remarks": "The minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout) .\n\nFor more information, see [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The number of times that CloudFront attempts to connect to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3535
          },
          "name": "connectionAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-connectiontimeout"
            },
            "remarks": "The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don't specify otherwise) is 10 seconds.\n\nFor more information, see [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The number of seconds that CloudFront waits when trying to establish a connection to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3543
          },
          "name": "connectionTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-customoriginconfig"
            },
            "remarks": "If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the `S3OriginConfig` type instead.",
            "stability": "external",
            "summary": "Use this type to specify an origin that is not an Amazon S3 bucket, with one exception."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3549
          },
          "name": "customOriginConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-originaccesscontrolid"
            },
            "remarks": "For more information, see [Restricting access to an Amazon S3 origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The unique identifier of an origin access control for this origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3573
          },
          "name": "originAccessControlId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-origincustomheaders"
            },
            "remarks": "For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3581
          },
          "name": "originCustomHeaders",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginCustomHeaderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-originpath"
            },
            "remarks": "For more information, see [Origin Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3589
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-originshield"
            },
            "remarks": "For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3597
          },
          "name": "originShield",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginShieldProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-s3originconfig"
            },
            "remarks": "To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the `CustomOriginConfig` type instead.",
            "stability": "external",
            "summary": "Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3603
          },
          "name": "s3OriginConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.S3OriginConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.OriginProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginShieldProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-originshield.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "CloudFront Origin Shield.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originShieldProperty: cloudfront.CfnDistribution.OriginShieldProperty = {\n  enabled: false,\n  originShieldRegion: 'originShieldRegion',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginShieldProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4152
      },
      "name": "OriginShieldProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-originshield.html#cfn-cloudfront-distribution-originshield-enabled"
            },
            "remarks": "When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.",
            "stability": "external",
            "summary": "A flag that specifies whether Origin Shield is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4160
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-originshield.html#cfn-cloudfront-distribution-originshield-originshieldregion"
            },
            "remarks": "Specify the AWS Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as `us-east-2` .\n\nWhen you enable CloudFront Origin Shield, you must specify the AWS Region for Origin Shield. For the list of AWS Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the AWS Region for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The AWS Region for Origin Shield."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4170
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.OriginShieldProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.RestrictionsProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-restrictions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex type that identifies ways in which you want to restrict distribution of your content.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst restrictionsProperty: cloudfront.CfnDistribution.RestrictionsProperty = {\n  geoRestriction: {\n    restrictionType: 'restrictionType',\n\n    // the properties below are optional\n    locations: ['locations'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.RestrictionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4234
      },
      "name": "RestrictionsProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-restrictions.html#cfn-cloudfront-distribution-restrictions-georestriction"
            },
            "remarks": "CloudFront determines the location of your users using `MaxMind` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.",
            "stability": "external",
            "summary": "A complex type that controls the countries in which your content is distributed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4240
          },
          "name": "geoRestriction",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.GeoRestrictionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.RestrictionsProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.S3OriginConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-s3originconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the `CustomOriginConfig` element instead.",
        "stability": "external",
        "summary": "A complex type that contains information about the Amazon S3 origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst s3OriginConfigProperty: cloudfront.CfnDistribution.S3OriginConfigProperty = {\n  originAccessIdentity: 'originAccessIdentity',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.S3OriginConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4302
      },
      "name": "S3OriginConfigProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-s3originconfig.html#cfn-cloudfront-distribution-s3originconfig-originaccessidentity"
            },
            "remarks": "Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ *ID-of-origin-access-identity*\n\nwhere `*ID-of-origin-access-identity*` is the value that CloudFront returned in the `ID` element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty `OriginAccessIdentity` element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty `OriginAccessIdentity` element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see [Serving Private Content through CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The CloudFront origin access identity to associate with the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4320
          },
          "name": "originAccessIdentity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.S3OriginConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.StatusCodesProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-statuscodes.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst statusCodesProperty: cloudfront.CfnDistribution.StatusCodesProperty = {\n  items: [123],\n  quantity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.StatusCodesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4381
      },
      "name": "StatusCodesProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-statuscodes.html#cfn-cloudfront-distribution-statuscodes-items"
            },
            "stability": "external",
            "summary": "The items (status codes) for an origin group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4387
          },
          "name": "items",
          "type": {
            "union": {
              "types": [
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "number"
                    },
                    "kind": "array"
                  }
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-statuscodes.html#cfn-cloudfront-distribution-statuscodes-quantity"
            },
            "stability": "external",
            "summary": "The number of status codes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4393
          },
          "name": "quantity",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.StatusCodesProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.ViewerCertificateProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "If the distribution doesn't use `Aliases` (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as `d111111abcdef8.cloudfront.net` —set `CloudFrontDefaultCertificate` to `true` and leave all other fields empty.\n\nIf the distribution uses `Aliases` (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:\n\n- Which viewers the distribution accepts HTTPS connections from: only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended), or all viewers including those that don't support SNI.\n\n- To accept HTTPS connections from only viewers that support SNI, set `SSLSupportMethod` to `sni-only` . This is recommended. Most browsers and clients support SNI. (In CloudFormation, the field name is `SslSupportMethod` . Note the different capitalization.)\n- To accept HTTPS connections from all viewers, including those that don't support SNI, set `SSLSupportMethod` to `vip` . This is not recommended, and results in additional monthly charges from CloudFront. (In CloudFormation, the field name is `SslSupportMethod` . Note the different capitalization.)\n- The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for `MinimumProtocolVersion` . For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) in the *Amazon CloudFront Developer Guide* .\n- The location of the SSL/TLS certificate, [AWS Certificate Manager (ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html) (recommended) or [AWS Identity and Access Management (IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html) . You specify the location by setting a value in one of the following fields (not both):\n\n- `ACMCertificateArn` (In CloudFormation, this field name is `AcmCertificateArn` . Note the different capitalization.)\n- `IAMCertificateId` (In CloudFormation, this field name is `IamCertificateId` . Note the different capitalization.)\n\nAll distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use `ViewerProtocolPolicy` in the `CacheBehavior` or `DefaultCacheBehavior` . To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use `CustomOriginConfig` .\n\nFor more information, see [Using HTTPS with CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html) and [Using Alternate Domain Names and HTTPS](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst viewerCertificateProperty: cloudfront.CfnDistribution.ViewerCertificateProperty = {\n  acmCertificateArn: 'acmCertificateArn',\n  cloudFrontDefaultCertificate: false,\n  iamCertificateId: 'iamCertificateId',\n  minimumProtocolVersion: 'minimumProtocolVersion',\n  sslSupportMethod: 'sslSupportMethod',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ViewerCertificateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4477
      },
      "name": "ViewerCertificateProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-acmcertificatearn"
            },
            "remarks": "If the distribution uses `Aliases` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [AWS Certificate Manager (ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region ( `us-east-1` ).\n\nIf you specify an ACM certificate ARN, you must also specify values for `MinimumProtocolVersion` and `SSLSupportMethod` . (In CloudFormation, the field name is `SslSupportMethod` . Note the different capitalization.)",
            "stability": "external",
            "summary": "> In CloudFormation, this field name is `AcmCertificateArn` . Note the different capitalization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4487
          },
          "name": "acmCertificateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-cloudfrontdefaultcertificate"
            },
            "remarks": "If the distribution uses `Aliases` (alternate domain names or CNAMEs), set this field to `false` and specify values for the following fields:\n\n- `ACMCertificateArn` or `IAMCertificateId` (specify a value for one, not both)\n\nIn CloudFormation, these field names are `AcmCertificateArn` and `IamCertificateId` . Note the different capitalization.\n- `MinimumProtocolVersion`\n- `SSLSupportMethod` (In CloudFormation, this field name is `SslSupportMethod` . Note the different capitalization.)",
            "stability": "external",
            "summary": "If the distribution uses the CloudFront domain name such as `d111111abcdef8.cloudfront.net` , set this field to `true` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4501
          },
          "name": "cloudFrontDefaultCertificate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-iamcertificateid"
            },
            "remarks": "If the distribution uses `Aliases` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [AWS Identity and Access Management (IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for `MinimumProtocolVersion` and `SSLSupportMethod` . (In CloudFormation, the field name is `SslSupportMethod` . Note the different capitalization.)",
            "stability": "external",
            "summary": "> In CloudFormation, this field name is `IamCertificateId` . Note the different capitalization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4511
          },
          "name": "iamCertificateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-minimumprotocolversion"
            },
            "remarks": "The security policy determines two settings:\n\n- The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n- The ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide* .\n\n> On the CloudFront console, this setting is called *Security Policy* .\n\nWhen you're using SNI only (you set `SSLSupportMethod` to `sni-only` ), you must specify `TLSv1` or higher. (In CloudFormation, the field name is `SslSupportMethod` . Note the different capitalization.)\n\nIf the distribution uses the CloudFront domain name such as `d111111abcdef8.cloudfront.net` (you set `CloudFrontDefaultCertificate` to `true` ), CloudFront automatically sets the security policy to `TLSv1` regardless of the value that you set here.",
            "stability": "external",
            "summary": "If the distribution uses `Aliases` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4528
          },
          "name": "minimumProtocolVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-sslsupportmethod"
            },
            "remarks": "If the distribution uses `Aliases` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\n- `sni-only` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) . This is recommended. Most browsers and clients support SNI.\n- `vip` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n- `static-ip` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [AWS Support Center](https://docs.aws.amazon.com/support/home) .\n\nIf the distribution uses the CloudFront domain name such as `d111111abcdef8.cloudfront.net` , don't set a value for this field.",
            "stability": "external",
            "summary": "> In CloudFormation, this field name is `SslSupportMethod` . Note the different capitalization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4542
          },
          "name": "sslSupportMethod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistribution.ViewerCertificateProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnDistributionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnDistribution`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnDistributionProps: cloudfront.CfnDistributionProps = {\n  distributionConfig: {\n    defaultCacheBehavior: {\n      targetOriginId: 'targetOriginId',\n      viewerProtocolPolicy: 'viewerProtocolPolicy',\n\n      // the properties below are optional\n      allowedMethods: ['allowedMethods'],\n      cachedMethods: ['cachedMethods'],\n      cachePolicyId: 'cachePolicyId',\n      compress: false,\n      defaultTtl: 123,\n      fieldLevelEncryptionId: 'fieldLevelEncryptionId',\n      forwardedValues: {\n        queryString: false,\n\n        // the properties below are optional\n        cookies: {\n          forward: 'forward',\n\n          // the properties below are optional\n          whitelistedNames: ['whitelistedNames'],\n        },\n        headers: ['headers'],\n        queryStringCacheKeys: ['queryStringCacheKeys'],\n      },\n      functionAssociations: [{\n        eventType: 'eventType',\n        functionArn: 'functionArn',\n      }],\n      lambdaFunctionAssociations: [{\n        eventType: 'eventType',\n        includeBody: false,\n        lambdaFunctionArn: 'lambdaFunctionArn',\n      }],\n      maxTtl: 123,\n      minTtl: 123,\n      originRequestPolicyId: 'originRequestPolicyId',\n      realtimeLogConfigArn: 'realtimeLogConfigArn',\n      responseHeadersPolicyId: 'responseHeadersPolicyId',\n      smoothStreaming: false,\n      trustedKeyGroups: ['trustedKeyGroups'],\n      trustedSigners: ['trustedSigners'],\n    },\n    enabled: false,\n\n    // the properties below are optional\n    aliases: ['aliases'],\n    cacheBehaviors: [{\n      pathPattern: 'pathPattern',\n      targetOriginId: 'targetOriginId',\n      viewerProtocolPolicy: 'viewerProtocolPolicy',\n\n      // the properties below are optional\n      allowedMethods: ['allowedMethods'],\n      cachedMethods: ['cachedMethods'],\n      cachePolicyId: 'cachePolicyId',\n      compress: false,\n      defaultTtl: 123,\n      fieldLevelEncryptionId: 'fieldLevelEncryptionId',\n      forwardedValues: {\n        queryString: false,\n\n        // the properties below are optional\n        cookies: {\n          forward: 'forward',\n\n          // the properties below are optional\n          whitelistedNames: ['whitelistedNames'],\n        },\n        headers: ['headers'],\n        queryStringCacheKeys: ['queryStringCacheKeys'],\n      },\n      functionAssociations: [{\n        eventType: 'eventType',\n        functionArn: 'functionArn',\n      }],\n      lambdaFunctionAssociations: [{\n        eventType: 'eventType',\n        includeBody: false,\n        lambdaFunctionArn: 'lambdaFunctionArn',\n      }],\n      maxTtl: 123,\n      minTtl: 123,\n      originRequestPolicyId: 'originRequestPolicyId',\n      realtimeLogConfigArn: 'realtimeLogConfigArn',\n      responseHeadersPolicyId: 'responseHeadersPolicyId',\n      smoothStreaming: false,\n      trustedKeyGroups: ['trustedKeyGroups'],\n      trustedSigners: ['trustedSigners'],\n    }],\n    cnamEs: ['cnamEs'],\n    comment: 'comment',\n    continuousDeploymentPolicyId: 'continuousDeploymentPolicyId',\n    customErrorResponses: [{\n      errorCode: 123,\n\n      // the properties below are optional\n      errorCachingMinTtl: 123,\n      responseCode: 123,\n      responsePagePath: 'responsePagePath',\n    }],\n    customOrigin: {\n      dnsName: 'dnsName',\n      originProtocolPolicy: 'originProtocolPolicy',\n      originSslProtocols: ['originSslProtocols'],\n\n      // the properties below are optional\n      httpPort: 123,\n      httpsPort: 123,\n    },\n    defaultRootObject: 'defaultRootObject',\n    httpVersion: 'httpVersion',\n    ipv6Enabled: false,\n    logging: {\n      bucket: 'bucket',\n\n      // the properties below are optional\n      includeCookies: false,\n      prefix: 'prefix',\n    },\n    originGroups: {\n      quantity: 123,\n\n      // the properties below are optional\n      items: [{\n        failoverCriteria: {\n          statusCodes: {\n            items: [123],\n            quantity: 123,\n          },\n        },\n        id: 'id',\n        members: {\n          items: [{\n            originId: 'originId',\n          }],\n          quantity: 123,\n        },\n      }],\n    },\n    origins: [{\n      domainName: 'domainName',\n      id: 'id',\n\n      // the properties below are optional\n      connectionAttempts: 123,\n      connectionTimeout: 123,\n      customOriginConfig: {\n        originProtocolPolicy: 'originProtocolPolicy',\n\n        // the properties below are optional\n        httpPort: 123,\n        httpsPort: 123,\n        originKeepaliveTimeout: 123,\n        originReadTimeout: 123,\n        originSslProtocols: ['originSslProtocols'],\n      },\n      originAccessControlId: 'originAccessControlId',\n      originCustomHeaders: [{\n        headerName: 'headerName',\n        headerValue: 'headerValue',\n      }],\n      originPath: 'originPath',\n      originShield: {\n        enabled: false,\n        originShieldRegion: 'originShieldRegion',\n      },\n      s3OriginConfig: {\n        originAccessIdentity: 'originAccessIdentity',\n      },\n    }],\n    priceClass: 'priceClass',\n    restrictions: {\n      geoRestriction: {\n        restrictionType: 'restrictionType',\n\n        // the properties below are optional\n        locations: ['locations'],\n      },\n    },\n    s3Origin: {\n      dnsName: 'dnsName',\n\n      // the properties below are optional\n      originAccessIdentity: 'originAccessIdentity',\n    },\n    staging: false,\n    viewerCertificate: {\n      acmCertificateArn: 'acmCertificateArn',\n      cloudFrontDefaultCertificate: false,\n      iamCertificateId: 'iamCertificateId',\n      minimumProtocolVersion: 'minimumProtocolVersion',\n      sslSupportMethod: 'sslSupportMethod',\n    },\n    webAclId: 'webAclId',\n  },\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1477
      },
      "name": "CfnDistributionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-distributionconfig"
            },
            "stability": "external",
            "summary": "The distribution's configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1484
          },
          "name": "distributionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DistributionConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-tags"
            },
            "stability": "external",
            "summary": "A complex type that contains zero or more `Tag` elements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1491
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnDistributionProps"
    },
    "@aws-cdk/aws-cloudfront.CfnFunction": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::Function",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a CloudFront function.\n\nTo create a function, you provide the function code and some configuration information about the function. The response contains an Amazon Resource Name (ARN) that uniquely identifies the function, and the function’s stage.\n\nBy default, when you create a function, it’s in the `DEVELOPMENT` stage. In this stage, you can [test the function](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/test-function.html) in the CloudFront console (or with `TestFunction` in the CloudFront API).\n\nWhen you’re ready to use your function with a CloudFront distribution, publish the function to the `LIVE` stage. You can do this in the CloudFront console, with `PublishFunction` in the CloudFront API, or by updating the `AWS::CloudFront::Function` resource with the `AutoPublish` property set to `true` . When the function is published to the `LIVE` stage, you can attach it to a distribution’s cache behavior, using the function’s ARN.\n\nTo automatically publish the function to the `LIVE` stage when it’s created, set the `AutoPublish` property to `true` .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::Function`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnFunction = new cloudfront.CfnFunction(this, 'MyCfnFunction', {\n  functionCode: 'functionCode',\n  functionConfig: {\n    comment: 'comment',\n    runtime: 'runtime',\n  },\n  name: 'name',\n\n  // the properties below are optional\n  autoPublish: false,\n  functionMetadata: {\n    functionArn: 'functionArn',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnFunction",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::Function`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 4821
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnFunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4730
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4843
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4858
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFunction",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4734
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FunctionARN"
            },
            "remarks": "`arn:aws:cloudfront::123456789012:function/ExampleFunction` .\n\nTo get the function ARN, use the following syntax:\n\n`!GetAtt *Function_Logical_ID* .FunctionMetadata.FunctionARN`",
            "stability": "external",
            "summary": "The ARN of the function. For example:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4765
          },
          "name": "attrFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FunctionMetadata.FunctionARN"
            },
            "remarks": "The ARN uniquely identifies the function.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4771
          },
          "name": "attrFunctionMetadataFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Stage"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4777
          },
          "name": "attrStage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4848
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functioncode"
            },
            "remarks": "For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The function code."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4784
          },
          "name": "functionCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionconfig"
            },
            "stability": "external",
            "summary": "Contains configuration information about a CloudFront function."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4791
          },
          "name": "functionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-name"
            },
            "stability": "external",
            "summary": "A name to identify the function."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4798
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-autopublish"
            },
            "remarks": "To automatically publish to the `LIVE` stage, set this property to `true` .",
            "stability": "external",
            "summary": "A flag that determines whether to automatically publish the function to the `LIVE` stage when it’s created."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4805
          },
          "name": "autoPublish",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionmetadata"
            },
            "stability": "external",
            "summary": "Contains metadata about a CloudFront function."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4812
          },
          "name": "functionMetadata",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionMetadataProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnFunction"
    },
    "@aws-cdk/aws-cloudfront.CfnFunction.FunctionConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains configuration information about a CloudFront function.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst functionConfigProperty: cloudfront.CfnFunction.FunctionConfigProperty = {\n  comment: 'comment',\n  runtime: 'runtime',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4872
      },
      "name": "FunctionConfigProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionconfig.html#cfn-cloudfront-function-functionconfig-comment"
            },
            "stability": "external",
            "summary": "A comment to describe the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4878
          },
          "name": "comment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionconfig.html#cfn-cloudfront-function-functionconfig-runtime"
            },
            "remarks": "The only valid value is `cloudfront-js-1.0` .",
            "stability": "external",
            "summary": "The function's runtime environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4884
          },
          "name": "runtime",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnFunction.FunctionConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnFunction.FunctionMetadataProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionmetadata.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains metadata about a CloudFront function.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst functionMetadataProperty: cloudfront.CfnFunction.FunctionMetadataProperty = {\n  functionArn: 'functionArn',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionMetadataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4950
      },
      "name": "FunctionMetadataProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionmetadata.html#cfn-cloudfront-function-functionmetadata-functionarn"
            },
            "remarks": "The ARN uniquely identifies the function.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4956
          },
          "name": "functionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnFunction.FunctionMetadataProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnFunctionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnFunction`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnFunctionProps: cloudfront.CfnFunctionProps = {\n  functionCode: 'functionCode',\n  functionConfig: {\n    comment: 'comment',\n    runtime: 'runtime',\n  },\n  name: 'name',\n\n  // the properties below are optional\n  autoPublish: false,\n  functionMetadata: {\n    functionArn: 'functionArn',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnFunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4614
      },
      "name": "CfnFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functioncode"
            },
            "remarks": "For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The function code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4621
          },
          "name": "functionCode",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionconfig"
            },
            "stability": "external",
            "summary": "Contains configuration information about a CloudFront function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4628
          },
          "name": "functionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-name"
            },
            "stability": "external",
            "summary": "A name to identify the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4635
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-autopublish"
            },
            "remarks": "To automatically publish to the `LIVE` stage, set this property to `true` .",
            "stability": "external",
            "summary": "A flag that determines whether to automatically publish the function to the `LIVE` stage when it’s created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4642
          },
          "name": "autoPublish",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionmetadata"
            },
            "stability": "external",
            "summary": "Contains metadata about a CloudFront function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4649
          },
          "name": "functionMetadata",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionMetadataProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnFunctionProps"
    },
    "@aws-cdk/aws-cloudfront.CfnKeyGroup": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::KeyGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A key group.\n\nA key group contains a list of public keys that you can use with [CloudFront signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::KeyGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnKeyGroup = new cloudfront.CfnKeyGroup(this, 'MyCfnKeyGroup', {\n  keyGroupConfig: {\n    items: ['items'],\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::KeyGroup`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 5135
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5084
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5150
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5161
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnKeyGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5088
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The identifier for the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5113
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LastModifiedTime"
            },
            "stability": "external",
            "summary": "The date and time when the key group was last modified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5119
          },
          "name": "attrLastModifiedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5155
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html#cfn-cloudfront-keygroup-keygroupconfig"
            },
            "stability": "external",
            "summary": "The key group configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5126
          },
          "name": "keyGroupConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroup.KeyGroupConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnKeyGroup"
    },
    "@aws-cdk/aws-cloudfront.CfnKeyGroup.KeyGroupConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-keygroup-keygroupconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A key group contains a list of public keys that you can use with [CloudFront signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) .",
        "stability": "external",
        "summary": "A key group configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst keyGroupConfigProperty: cloudfront.CfnKeyGroup.KeyGroupConfigProperty = {\n  items: ['items'],\n  name: 'name',\n\n  // the properties below are optional\n  comment: 'comment',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroup.KeyGroupConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5177
      },
      "name": "KeyGroupConfigProperty",
      "namespace": "CfnKeyGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-keygroup-keygroupconfig.html#cfn-cloudfront-keygroup-keygroupconfig-items"
            },
            "stability": "external",
            "summary": "A list of the identifiers of the public keys in the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5189
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-keygroup-keygroupconfig.html#cfn-cloudfront-keygroup-keygroupconfig-name"
            },
            "stability": "external",
            "summary": "A name to identify the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5195
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-keygroup-keygroupconfig.html#cfn-cloudfront-keygroup-keygroupconfig-comment"
            },
            "remarks": "The comment cannot be longer than 128 characters.",
            "stability": "external",
            "summary": "A comment to describe the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5183
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnKeyGroup.KeyGroupConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnKeyGroupProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnKeyGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnKeyGroupProps: cloudfront.CfnKeyGroupProps = {\n  keyGroupConfig: {\n    items: ['items'],\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5016
      },
      "name": "CfnKeyGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html#cfn-cloudfront-keygroup-keygroupconfig"
            },
            "stability": "external",
            "summary": "The key group configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5023
          },
          "name": "keyGroupConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroup.KeyGroupConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnKeyGroupProps"
    },
    "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::MonitoringSubscription",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::MonitoringSubscription`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnMonitoringSubscription = new cloudfront.CfnMonitoringSubscription(this, 'MyCfnMonitoringSubscription', {\n  distributionId: 'distributionId',\n  monitoringSubscription: {\n    realtimeMetricsSubscriptionConfig: {\n      realtimeMetricsSubscriptionStatus: 'realtimeMetricsSubscriptionStatus',\n    },\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::MonitoringSubscription`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 5386
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnMonitoringSubscriptionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5340
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5401
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5413
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnMonitoringSubscription",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5344
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5406
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-distributionid"
            },
            "stability": "external",
            "summary": "The ID of the distribution that you are enabling metrics for."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5370
          },
          "name": "distributionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-monitoringsubscription"
            },
            "stability": "external",
            "summary": "A subscription configuration for additional CloudWatch metrics."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5377
          },
          "name": "monitoringSubscription",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription.MonitoringSubscriptionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnMonitoringSubscription"
    },
    "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription.MonitoringSubscriptionProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-monitoringsubscription-monitoringsubscription.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.",
        "stability": "external",
        "summary": "A monitoring subscription.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst monitoringSubscriptionProperty: cloudfront.CfnMonitoringSubscription.MonitoringSubscriptionProperty = {\n  realtimeMetricsSubscriptionConfig: {\n    realtimeMetricsSubscriptionStatus: 'realtimeMetricsSubscriptionStatus',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription.MonitoringSubscriptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5427
      },
      "name": "MonitoringSubscriptionProperty",
      "namespace": "CfnMonitoringSubscription",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-monitoringsubscription-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-monitoringsubscription-realtimemetricssubscriptionconfig"
            },
            "stability": "external",
            "summary": "A subscription configuration for additional CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5433
          },
          "name": "realtimeMetricsSubscriptionConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription.RealtimeMetricsSubscriptionConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnMonitoringSubscription.MonitoringSubscriptionProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription.RealtimeMetricsSubscriptionConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-monitoringsubscription-realtimemetricssubscriptionconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A subscription configuration for additional CloudWatch metrics.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst realtimeMetricsSubscriptionConfigProperty: cloudfront.CfnMonitoringSubscription.RealtimeMetricsSubscriptionConfigProperty = {\n  realtimeMetricsSubscriptionStatus: 'realtimeMetricsSubscriptionStatus',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription.RealtimeMetricsSubscriptionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5494
      },
      "name": "RealtimeMetricsSubscriptionConfigProperty",
      "namespace": "CfnMonitoringSubscription",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-monitoringsubscription-realtimemetricssubscriptionconfig.html#cfn-cloudfront-monitoringsubscription-realtimemetricssubscriptionconfig-realtimemetricssubscriptionstatus"
            },
            "stability": "external",
            "summary": "A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5500
          },
          "name": "realtimeMetricsSubscriptionStatus",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnMonitoringSubscription.RealtimeMetricsSubscriptionConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnMonitoringSubscriptionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnMonitoringSubscription`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnMonitoringSubscriptionProps: cloudfront.CfnMonitoringSubscriptionProps = {\n  distributionId: 'distributionId',\n  monitoringSubscription: {\n    realtimeMetricsSubscriptionConfig: {\n      realtimeMetricsSubscriptionStatus: 'realtimeMetricsSubscriptionStatus',\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnMonitoringSubscriptionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5263
      },
      "name": "CfnMonitoringSubscriptionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-distributionid"
            },
            "stability": "external",
            "summary": "The ID of the distribution that you are enabling metrics for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5270
          },
          "name": "distributionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-monitoringsubscription"
            },
            "stability": "external",
            "summary": "A subscription configuration for additional CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5277
          },
          "name": "monitoringSubscription",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnMonitoringSubscription.MonitoringSubscriptionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnMonitoringSubscriptionProps"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginAccessControl": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::OriginAccessControl",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originaccesscontrol.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a new origin access control in CloudFront. After you create an origin access control, you can add it to an origin in a CloudFront distribution so that CloudFront sends authenticated (signed) requests to the origin.\n\nThis makes it possible to block public access to the origin, allowing viewers (users) to access the origin's content only through CloudFront.\n\nFor more information about using a CloudFront origin access control, see [Restricting access to an AWS origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::OriginAccessControl`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnOriginAccessControl = new cloudfront.CfnOriginAccessControl(this, 'MyCfnOriginAccessControl', {\n  originAccessControlConfig: {\n    name: 'name',\n    originAccessControlOriginType: 'originAccessControlOriginType',\n    signingBehavior: 'signingBehavior',\n    signingProtocol: 'signingProtocol',\n\n    // the properties below are optional\n    description: 'description',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginAccessControl",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::OriginAccessControl`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 5676
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnOriginAccessControlProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5631
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5690
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5701
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnOriginAccessControl",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5635
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The unique identifier of the origin access control."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5660
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5695
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originaccesscontrol.html#cfn-cloudfront-originaccesscontrol-originaccesscontrolconfig"
            },
            "stability": "external",
            "summary": "The origin access control."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5667
          },
          "name": "originAccessControlConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginAccessControl.OriginAccessControlConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginAccessControl"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginAccessControl.OriginAccessControlConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originaccesscontrol-originaccesscontrolconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "After you create an origin access control, you can add it to an origin in a CloudFront distribution so that CloudFront sends authenticated (signed) requests to the origin.\n\nThis makes it possible to block public access to the origin, allowing viewers (users) to access the origin's content only through CloudFront.\n\nFor more information about using a CloudFront origin access control, see [Restricting access to an AWS origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "Creates a new origin access control in CloudFront.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originAccessControlConfigProperty: cloudfront.CfnOriginAccessControl.OriginAccessControlConfigProperty = {\n  name: 'name',\n  originAccessControlOriginType: 'originAccessControlOriginType',\n  signingBehavior: 'signingBehavior',\n  signingProtocol: 'signingProtocol',\n\n  // the properties below are optional\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginAccessControl.OriginAccessControlConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5719
      },
      "name": "OriginAccessControlConfigProperty",
      "namespace": "CfnOriginAccessControl",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originaccesscontrol-originaccesscontrolconfig.html#cfn-cloudfront-originaccesscontrol-originaccesscontrolconfig-name"
            },
            "stability": "external",
            "summary": "A name to identify the origin access control."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5731
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originaccesscontrol-originaccesscontrolconfig.html#cfn-cloudfront-originaccesscontrol-originaccesscontrolconfig-originaccesscontrolorigintype"
            },
            "stability": "external",
            "summary": "The type of origin that this origin access control is for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5737
          },
          "name": "originAccessControlOriginType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originaccesscontrol-originaccesscontrolconfig.html#cfn-cloudfront-originaccesscontrol-originaccesscontrolconfig-signingbehavior"
            },
            "remarks": "Specify `always` for the most common use case. For more information, see [origin access control advanced settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#oac-advanced-settings) in the *Amazon CloudFront Developer Guide* .\n\nThis field can have one of the following values:\n\n- `always` – CloudFront signs all origin requests, overwriting the `Authorization` header from the viewer request if one exists.\n- `never` – CloudFront doesn't sign any origin requests. This value turns off origin access control for all origins in all distributions that use this origin access control.\n- `no-override` – If the viewer request doesn't contain the `Authorization` header, then CloudFront signs the origin request. If the viewer request contains the `Authorization` header, then CloudFront doesn't sign the origin request and instead passes along the `Authorization` header from the viewer request. *WARNING: To pass along the `Authorization` header from the viewer request, you *must* add the `Authorization` header to a [cache policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html) for all cache behaviors that use origins associated with this origin access control.*",
            "stability": "external",
            "summary": "Specifies which requests CloudFront signs (adds authentication information to)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5749
          },
          "name": "signingBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originaccesscontrol-originaccesscontrolconfig.html#cfn-cloudfront-originaccesscontrol-originaccesscontrolconfig-signingprotocol"
            },
            "remarks": "The only valid value is `sigv4` .",
            "stability": "external",
            "summary": "The signing protocol of the origin access control, which determines how CloudFront signs (authenticates) requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5755
          },
          "name": "signingProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originaccesscontrol-originaccesscontrolconfig.html#cfn-cloudfront-originaccesscontrol-originaccesscontrolconfig-description"
            },
            "stability": "external",
            "summary": "A description of the origin access control."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5725
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginAccessControl.OriginAccessControlConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginAccessControlProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originaccesscontrol.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnOriginAccessControl`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnOriginAccessControlProps: cloudfront.CfnOriginAccessControlProps = {\n  originAccessControlConfig: {\n    name: 'name',\n    originAccessControlOriginType: 'originAccessControlOriginType',\n    signingBehavior: 'signingBehavior',\n    signingProtocol: 'signingProtocol',\n\n    // the properties below are optional\n    description: 'description',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginAccessControlProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5561
      },
      "name": "CfnOriginAccessControlProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originaccesscontrol.html#cfn-cloudfront-originaccesscontrol-originaccesscontrolconfig"
            },
            "stability": "external",
            "summary": "The origin access control."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5568
          },
          "name": "originAccessControlConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginAccessControl.OriginAccessControlConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginAccessControlProps"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::OriginRequestPolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "An origin request policy.\n\nWhen it's attached to a cache behavior, the origin request policy determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:\n\n- The request body and the URL path (without the domain name) from the viewer request.\n- The headers that CloudFront automatically includes in every origin request, including `Host` , `User-Agent` , and `X-Amz-Cf-Id` .\n- All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.\n\nCloudFront sends a request when it can't find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use `CachePolicy` .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::OriginRequestPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnOriginRequestPolicy = new cloudfront.CfnOriginRequestPolicy(this, 'MyCfnOriginRequestPolicy', {\n  originRequestPolicyConfig: {\n    cookiesConfig: {\n      cookieBehavior: 'cookieBehavior',\n\n      // the properties below are optional\n      cookies: ['cookies'],\n    },\n    headersConfig: {\n      headerBehavior: 'headerBehavior',\n\n      // the properties below are optional\n      headers: ['headers'],\n    },\n    name: 'name',\n    queryStringsConfig: {\n      queryStringBehavior: 'queryStringBehavior',\n\n      // the properties below are optional\n      queryStrings: ['queryStrings'],\n    },\n\n    // the properties below are optional\n    comment: 'comment',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::OriginRequestPolicy`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 5956
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5905
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5971
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5982
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnOriginRequestPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5909
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "remarks": "For example: `befd7079-9bbc-4ebf-8ade-498a3694176c` .",
            "stability": "external",
            "summary": "The unique identifier for the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5934
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LastModifiedTime"
            },
            "stability": "external",
            "summary": "The date and time when the origin request policy was last modified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5940
          },
          "name": "attrLastModifiedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5976
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig"
            },
            "stability": "external",
            "summary": "The origin request policy configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5947
          },
          "name": "originRequestPolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginRequestPolicy"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.CookiesConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-cookiesconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in requests that CloudFront sends to the origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cookiesConfigProperty: cloudfront.CfnOriginRequestPolicy.CookiesConfigProperty = {\n  cookieBehavior: 'cookieBehavior',\n\n  // the properties below are optional\n  cookies: ['cookies'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.CookiesConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5996
      },
      "name": "CookiesConfigProperty",
      "namespace": "CfnOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-cookiesconfig.html#cfn-cloudfront-originrequestpolicy-cookiesconfig-cookiebehavior"
            },
            "remarks": "- `none` – No cookies in viewer requests are included in requests that CloudFront sends to the origin. Even when this field is set to `none` , any cookies that are listed in a `CachePolicy` *are* included in origin requests.\n- `whitelist` – Only the cookies in viewer requests that are listed in the `CookieNames` type are included in requests that CloudFront sends to the origin.\n- `all` – All cookies in viewer requests are included in requests that CloudFront sends to the origin.\n- `allExcept` – All cookies in viewer requests are included in requests that CloudFront sends to the origin, **except** for those listed in the `CookieNames` type, which are not included.",
            "stability": "external",
            "summary": "Determines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6007
          },
          "name": "cookieBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-cookiesconfig.html#cfn-cloudfront-originrequestpolicy-cookiesconfig-cookies"
            },
            "stability": "external",
            "summary": "Contains a list of cookie names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6013
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginRequestPolicy.CookiesConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.HeadersConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-headersconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An object that determines whether any HTTP headers (and if so, which headers) are included in requests that CloudFront sends to the origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst headersConfigProperty: cloudfront.CfnOriginRequestPolicy.HeadersConfigProperty = {\n  headerBehavior: 'headerBehavior',\n\n  // the properties below are optional\n  headers: ['headers'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.HeadersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6078
      },
      "name": "HeadersConfigProperty",
      "namespace": "CfnOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-headersconfig.html#cfn-cloudfront-originrequestpolicy-headersconfig-headerbehavior"
            },
            "remarks": "- `none` – No HTTP headers in viewer requests are included in requests that CloudFront sends to the origin. Even when this field is set to `none` , any headers that are listed in a `CachePolicy` *are* included in origin requests.\n- `whitelist` – Only the HTTP headers that are listed in the `Headers` type are included in requests that CloudFront sends to the origin.\n- `allViewer` – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.\n- `allViewerAndWhitelistCloudFront` – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the `Headers` type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.\n- `allExcept` – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin, **except** for those listed in the `Headers` type, which are not included.",
            "stability": "external",
            "summary": "Determines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6090
          },
          "name": "headerBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-headersconfig.html#cfn-cloudfront-originrequestpolicy-headersconfig-headers"
            },
            "stability": "external",
            "summary": "Contains a list of HTTP header names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6096
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginRequestPolicy.HeadersConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This configuration determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:\n\n- The request body and the URL path (without the domain name) from the viewer request.\n- The headers that CloudFront automatically includes in every origin request, including `Host` , `User-Agent` , and `X-Amz-Cf-Id` .\n- All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.\n\nCloudFront sends a request when it can't find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use `CachePolicy` .",
        "stability": "external",
        "summary": "An origin request policy configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originRequestPolicyConfigProperty: cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty = {\n  cookiesConfig: {\n    cookieBehavior: 'cookieBehavior',\n\n    // the properties below are optional\n    cookies: ['cookies'],\n  },\n  headersConfig: {\n    headerBehavior: 'headerBehavior',\n\n    // the properties below are optional\n    headers: ['headers'],\n  },\n  name: 'name',\n  queryStringsConfig: {\n    queryStringBehavior: 'queryStringBehavior',\n\n    // the properties below are optional\n    queryStrings: ['queryStrings'],\n  },\n\n  // the properties below are optional\n  comment: 'comment',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6169
      },
      "name": "OriginRequestPolicyConfigProperty",
      "namespace": "CfnOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-cookiesconfig"
            },
            "stability": "external",
            "summary": "The cookies from viewer requests to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6181
          },
          "name": "cookiesConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.CookiesConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-headersconfig"
            },
            "remarks": "These can include headers from viewer requests and additional headers added by CloudFront.",
            "stability": "external",
            "summary": "The HTTP headers to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6187
          },
          "name": "headersConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.HeadersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-name"
            },
            "stability": "external",
            "summary": "A unique name to identify the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6193
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-querystringsconfig"
            },
            "stability": "external",
            "summary": "The URL query strings from viewer requests to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6199
          },
          "name": "queryStringsConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.QueryStringsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-comment"
            },
            "remarks": "The comment cannot be longer than 128 characters.",
            "stability": "external",
            "summary": "A comment to describe the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6175
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.QueryStringsConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-querystringsconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in requests that CloudFront sends to the origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst queryStringsConfigProperty: cloudfront.CfnOriginRequestPolicy.QueryStringsConfigProperty = {\n  queryStringBehavior: 'queryStringBehavior',\n\n  // the properties below are optional\n  queryStrings: ['queryStrings'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.QueryStringsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6276
      },
      "name": "QueryStringsConfigProperty",
      "namespace": "CfnOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-querystringsconfig.html#cfn-cloudfront-originrequestpolicy-querystringsconfig-querystringbehavior"
            },
            "remarks": "Valid values are:\n\n- `none` – No query strings in viewer requests are included in requests that CloudFront sends to the origin. Even when this field is set to `none` , any query strings that are listed in a `CachePolicy` *are* included in origin requests.\n- `whitelist` – Only the query strings in viewer requests that are listed in the `QueryStringNames` type are included in requests that CloudFront sends to the origin.\n- `all` – All query strings in viewer requests are included in requests that CloudFront sends to the origin.\n- `allExcept` – All query strings in viewer requests are included in requests that CloudFront sends to the origin, **except** for those listed in the `QueryStringNames` type, which are not included.",
            "stability": "external",
            "summary": "Determines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6287
          },
          "name": "queryStringBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-querystringsconfig.html#cfn-cloudfront-originrequestpolicy-querystringsconfig-querystrings"
            },
            "stability": "external",
            "summary": "Contains a list of query string names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6293
          },
          "name": "queryStrings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginRequestPolicy.QueryStringsConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnOriginRequestPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnOriginRequestPolicyProps: cloudfront.CfnOriginRequestPolicyProps = {\n  originRequestPolicyConfig: {\n    cookiesConfig: {\n      cookieBehavior: 'cookieBehavior',\n\n      // the properties below are optional\n      cookies: ['cookies'],\n    },\n    headersConfig: {\n      headerBehavior: 'headerBehavior',\n\n      // the properties below are optional\n      headers: ['headers'],\n    },\n    name: 'name',\n    queryStringsConfig: {\n      queryStringBehavior: 'queryStringBehavior',\n\n      // the properties below are optional\n      queryStrings: ['queryStrings'],\n    },\n\n    // the properties below are optional\n    comment: 'comment',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5831
      },
      "name": "CfnOriginRequestPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig"
            },
            "stability": "external",
            "summary": "The origin request policy configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5838
          },
          "name": "originRequestPolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnOriginRequestPolicyProps"
    },
    "@aws-cdk/aws-cloudfront.CfnPublicKey": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::PublicKey",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) , or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::PublicKey`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnPublicKey = new cloudfront.CfnPublicKey(this, 'MyCfnPublicKey', {\n  publicKeyConfig: {\n    callerReference: 'callerReference',\n    encodedKey: 'encodedKey',\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKey",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::PublicKey`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 6474
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKeyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6423
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6489
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6500
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6427
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatedTime"
            },
            "stability": "external",
            "summary": "The date and time when the public key was uploaded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6452
          },
          "name": "attrCreatedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The identifier of the public key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6458
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6494
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html#cfn-cloudfront-publickey-publickeyconfig"
            },
            "stability": "external",
            "summary": "Configuration information about a public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) , or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html) ."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6465
          },
          "name": "publicKeyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKey.PublicKeyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnPublicKey"
    },
    "@aws-cdk/aws-cloudfront.CfnPublicKey.PublicKeyConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Configuration information about a public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) , or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html) .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst publicKeyConfigProperty: cloudfront.CfnPublicKey.PublicKeyConfigProperty = {\n  callerReference: 'callerReference',\n  encodedKey: 'encodedKey',\n  name: 'name',\n\n  // the properties below are optional\n  comment: 'comment',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKey.PublicKeyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6514
      },
      "name": "PublicKeyConfigProperty",
      "namespace": "CfnPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html#cfn-cloudfront-publickey-publickeyconfig-callerreference"
            },
            "stability": "external",
            "summary": "A string included in the request to help make sure that the request can't be replayed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6520
          },
          "name": "callerReference",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html#cfn-cloudfront-publickey-publickeyconfig-encodedkey"
            },
            "stability": "external",
            "summary": "The public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) , or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6532
          },
          "name": "encodedKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html#cfn-cloudfront-publickey-publickeyconfig-name"
            },
            "stability": "external",
            "summary": "A name to help identify the public key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6538
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html#cfn-cloudfront-publickey-publickeyconfig-comment"
            },
            "remarks": "The comment cannot be longer than 128 characters.",
            "stability": "external",
            "summary": "A comment to describe the public key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6526
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnPublicKey.PublicKeyConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnPublicKeyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnPublicKey`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnPublicKeyProps: cloudfront.CfnPublicKeyProps = {\n  publicKeyConfig: {\n    callerReference: 'callerReference',\n    encodedKey: 'encodedKey',\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKeyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6357
      },
      "name": "CfnPublicKeyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html#cfn-cloudfront-publickey-publickeyconfig"
            },
            "stability": "external",
            "summary": "Configuration information about a public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) , or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6364
          },
          "name": "publicKeyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKey.PublicKeyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnPublicKeyProps"
    },
    "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::RealtimeLogConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A real-time log configuration.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::RealtimeLogConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnRealtimeLogConfig = new cloudfront.CfnRealtimeLogConfig(this, 'MyCfnRealtimeLogConfig', {\n  endPoints: [{\n    kinesisStreamConfig: {\n      roleArn: 'roleArn',\n      streamArn: 'streamArn',\n    },\n    streamType: 'streamType',\n  }],\n  fields: ['fields'],\n  name: 'name',\n  samplingRate: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::RealtimeLogConfig`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 6779
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6711
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6799
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6813
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRealtimeLogConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6715
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "remarks": "For example: `arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the real-time log configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6740
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6804
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-endpoints"
            },
            "stability": "external",
            "summary": "Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6747
          },
          "name": "endPoints",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.EndPointProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-fields"
            },
            "remarks": "In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.\n\nFor more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "A list of fields that are included in each real-time log record."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6756
          },
          "name": "fields",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-name"
            },
            "stability": "external",
            "summary": "The unique name of this real-time log configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6763
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-samplingrate"
            },
            "remarks": "The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.",
            "stability": "external",
            "summary": "The sampling rate for this real-time log configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6770
          },
          "name": "samplingRate",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnRealtimeLogConfig"
    },
    "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.EndPointProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-endpoint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst endPointProperty: cloudfront.CfnRealtimeLogConfig.EndPointProperty = {\n  kinesisStreamConfig: {\n    roleArn: 'roleArn',\n    streamArn: 'streamArn',\n  },\n  streamType: 'streamType',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.EndPointProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6827
      },
      "name": "EndPointProperty",
      "namespace": "CfnRealtimeLogConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-endpoint.html#cfn-cloudfront-realtimelogconfig-endpoint-kinesisstreamconfig"
            },
            "stability": "external",
            "summary": "Contains information about the Amazon Kinesis data stream where you are sending real-time log data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6833
          },
          "name": "kinesisStreamConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.KinesisStreamConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-endpoint.html#cfn-cloudfront-realtimelogconfig-endpoint-streamtype"
            },
            "remarks": "The only valid value is `Kinesis` .",
            "stability": "external",
            "summary": "The type of data stream where you are sending real-time log data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6839
          },
          "name": "streamType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnRealtimeLogConfig.EndPointProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.KinesisStreamConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-kinesisstreamconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains information about the Amazon Kinesis data stream where you are sending real-time log data.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst kinesisStreamConfigProperty: cloudfront.CfnRealtimeLogConfig.KinesisStreamConfigProperty = {\n  roleArn: 'roleArn',\n  streamArn: 'streamArn',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.KinesisStreamConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6905
      },
      "name": "KinesisStreamConfigProperty",
      "namespace": "CfnRealtimeLogConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-kinesisstreamconfig.html#cfn-cloudfront-realtimelogconfig-kinesisstreamconfig-rolearn"
            },
            "remarks": "For more information the IAM role, see [Real-time log configuration IAM role](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6913
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-kinesisstreamconfig.html#cfn-cloudfront-realtimelogconfig-kinesisstreamconfig-streamarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6919
          },
          "name": "streamArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnRealtimeLogConfig.KinesisStreamConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfigProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnRealtimeLogConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnRealtimeLogConfigProps: cloudfront.CfnRealtimeLogConfigProps = {\n  endPoints: [{\n    kinesisStreamConfig: {\n      roleArn: 'roleArn',\n      streamArn: 'streamArn',\n    },\n    streamType: 'streamType',\n  }],\n  fields: ['fields'],\n  name: 'name',\n  samplingRate: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6610
      },
      "name": "CfnRealtimeLogConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-endpoints"
            },
            "stability": "external",
            "summary": "Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6617
          },
          "name": "endPoints",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.EndPointProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-fields"
            },
            "remarks": "In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.\n\nFor more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "A list of fields that are included in each real-time log record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6626
          },
          "name": "fields",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-name"
            },
            "stability": "external",
            "summary": "The unique name of this real-time log configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6633
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-samplingrate"
            },
            "remarks": "The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.",
            "stability": "external",
            "summary": "The sampling rate for this real-time log configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6640
          },
          "name": "samplingRate",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnRealtimeLogConfigProps"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::ResponseHeadersPolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A response headers policy.\n\nA response headers policy contains information about a set of HTTP response headers.\n\nAfter you create a response headers policy, you can use its ID to attach it to one or more cache behaviors in a CloudFront distribution. When it's attached to a cache behavior, the response headers policy affects the HTTP headers that CloudFront includes in HTTP responses to requests that match the cache behavior. CloudFront adds or removes response headers according to the configuration of the response headers policy.\n\nFor more information, see [Adding or removing HTTP headers in CloudFront responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/modifying-response-headers.html) in the *Amazon CloudFront Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::ResponseHeadersPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnResponseHeadersPolicy = new cloudfront.CfnResponseHeadersPolicy(this, 'MyCfnResponseHeadersPolicy', {\n  responseHeadersPolicyConfig: {\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n    corsConfig: {\n      accessControlAllowCredentials: false,\n      accessControlAllowHeaders: {\n        items: ['items'],\n      },\n      accessControlAllowMethods: {\n        items: ['items'],\n      },\n      accessControlAllowOrigins: {\n        items: ['items'],\n      },\n      originOverride: false,\n\n      // the properties below are optional\n      accessControlExposeHeaders: {\n        items: ['items'],\n      },\n      accessControlMaxAgeSec: 123,\n    },\n    customHeadersConfig: {\n      items: [{\n        header: 'header',\n        override: false,\n        value: 'value',\n      }],\n    },\n    removeHeadersConfig: {\n      items: [{\n        header: 'header',\n      }],\n    },\n    securityHeadersConfig: {\n      contentSecurityPolicy: {\n        contentSecurityPolicy: 'contentSecurityPolicy',\n        override: false,\n      },\n      contentTypeOptions: {\n        override: false,\n      },\n      frameOptions: {\n        frameOption: 'frameOption',\n        override: false,\n      },\n      referrerPolicy: {\n        override: false,\n        referrerPolicy: 'referrerPolicy',\n      },\n      strictTransportSecurity: {\n        accessControlMaxAgeSec: 123,\n        override: false,\n\n        // the properties below are optional\n        includeSubdomains: false,\n        preload: false,\n      },\n      xssProtection: {\n        override: false,\n        protection: false,\n\n        // the properties below are optional\n        modeBlock: false,\n        reportUri: 'reportUri',\n      },\n    },\n    serverTimingHeadersConfig: {\n      enabled: false,\n\n      // the properties below are optional\n      samplingRate: 123,\n    },\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::ResponseHeadersPolicy`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 7107
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7056
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7122
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7133
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7060
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "remarks": "For example: `57f99797-3b20-4e1b-a728-27972a74082a` .",
            "stability": "external",
            "summary": "The unique identifier for the response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7085
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LastModifiedTime"
            },
            "stability": "external",
            "summary": "The date and time when the response headers policy was last modified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7091
          },
          "name": "attrLastModifiedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7127
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig"
            },
            "stability": "external",
            "summary": "A response headers policy configuration."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7098
          },
          "name": "responseHeadersPolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ResponseHeadersPolicyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowHeadersProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-accesscontrolallowheaders.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `Access-Control-Allow-Headers` HTTP response header, see [Access-Control-Allow-Headers](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) in the MDN Web Docs.",
        "stability": "external",
        "summary": "A list of HTTP header names that CloudFront includes as values for the `Access-Control-Allow-Headers` HTTP response header.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst accessControlAllowHeadersProperty: cloudfront.CfnResponseHeadersPolicy.AccessControlAllowHeadersProperty = {\n  items: ['items'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowHeadersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7149
      },
      "name": "AccessControlAllowHeadersProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-accesscontrolallowheaders.html#cfn-cloudfront-responseheaderspolicy-accesscontrolallowheaders-items"
            },
            "remarks": "You can specify `*` to allow all headers.",
            "stability": "external",
            "summary": "The list of HTTP header names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7155
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.AccessControlAllowHeadersProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowMethodsProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-accesscontrolallowmethods.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `Access-Control-Allow-Methods` HTTP response header, see [Access-Control-Allow-Methods](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) in the MDN Web Docs.",
        "stability": "external",
        "summary": "A list of HTTP methods that CloudFront includes as values for the `Access-Control-Allow-Methods` HTTP response header.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst accessControlAllowMethodsProperty: cloudfront.CfnResponseHeadersPolicy.AccessControlAllowMethodsProperty = {\n  items: ['items'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowMethodsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7219
      },
      "name": "AccessControlAllowMethodsProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-accesscontrolallowmethods.html#cfn-cloudfront-responseheaderspolicy-accesscontrolallowmethods-items"
            },
            "remarks": "- `GET`\n- `DELETE`\n- `HEAD`\n- `OPTIONS`\n- `PATCH`\n- `POST`\n- `PUT`\n- `ALL`\n\n`ALL` is a special value that includes all of the listed HTTP methods.",
            "stability": "external",
            "summary": "The list of HTTP methods. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7236
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.AccessControlAllowMethodsProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowOriginsProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-accesscontrolalloworigins.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `Access-Control-Allow-Origin` HTTP response header, see [Access-Control-Allow-Origin](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) in the MDN Web Docs.",
        "stability": "external",
        "summary": "A list of origins (domain names) that CloudFront can use as the value for the `Access-Control-Allow-Origin` HTTP response header.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst accessControlAllowOriginsProperty: cloudfront.CfnResponseHeadersPolicy.AccessControlAllowOriginsProperty = {\n  items: ['items'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowOriginsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7300
      },
      "name": "AccessControlAllowOriginsProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-accesscontrolalloworigins.html#cfn-cloudfront-responseheaderspolicy-accesscontrolalloworigins-items"
            },
            "remarks": "You can specify `*` to allow all origins.",
            "stability": "external",
            "summary": "The list of origins (domain names)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7306
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.AccessControlAllowOriginsProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlExposeHeadersProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-accesscontrolexposeheaders.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `Access-Control-Expose-Headers` HTTP response header, see [Access-Control-Expose-Headers](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers) in the MDN Web Docs.",
        "stability": "external",
        "summary": "A list of HTTP headers that CloudFront includes as values for the `Access-Control-Expose-Headers` HTTP response header.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst accessControlExposeHeadersProperty: cloudfront.CfnResponseHeadersPolicy.AccessControlExposeHeadersProperty = {\n  items: ['items'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlExposeHeadersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7370
      },
      "name": "AccessControlExposeHeadersProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-accesscontrolexposeheaders.html#cfn-cloudfront-responseheaderspolicy-accesscontrolexposeheaders-items"
            },
            "remarks": "You can specify `*` to expose all headers.",
            "stability": "external",
            "summary": "The list of HTTP headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7376
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.AccessControlExposeHeadersProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ContentSecurityPolicyProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-contentsecuritypolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `Content-Security-Policy` HTTP response header, see [Content-Security-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) in the MDN Web Docs.",
        "stability": "external",
        "summary": "The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst contentSecurityPolicyProperty: cloudfront.CfnResponseHeadersPolicy.ContentSecurityPolicyProperty = {\n  contentSecurityPolicy: 'contentSecurityPolicy',\n  override: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ContentSecurityPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7440
      },
      "name": "ContentSecurityPolicyProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-contentsecuritypolicy.html#cfn-cloudfront-responseheaderspolicy-contentsecuritypolicy-contentsecuritypolicy"
            },
            "stability": "external",
            "summary": "The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7446
          },
          "name": "contentSecurityPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-contentsecuritypolicy.html#cfn-cloudfront-responseheaderspolicy-contentsecuritypolicy-override"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront overrides the `Content-Security-Policy` HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7452
          },
          "name": "override",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.ContentSecurityPolicyProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ContentTypeOptionsProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-contenttypeoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `X-Content-Type-Options` HTTP response header, see [X-Content-Type-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options) in the MDN Web Docs.",
        "stability": "external",
        "summary": "Determines whether CloudFront includes the `X-Content-Type-Options` HTTP response header with its value set to `nosniff` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst contentTypeOptionsProperty: cloudfront.CfnResponseHeadersPolicy.ContentTypeOptionsProperty = {\n  override: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ContentTypeOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7520
      },
      "name": "ContentTypeOptionsProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-contenttypeoptions.html#cfn-cloudfront-responseheaderspolicy-contenttypeoptions-override"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront overrides the `X-Content-Type-Options` HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7526
          },
          "name": "override",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.ContentTypeOptionsProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CorsConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-corsconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "CloudFront adds these headers to HTTP responses that it sends for CORS requests that match a cache behavior associated with this response headers policy.\n\nFor more information about CORS, see [Cross-Origin Resource Sharing (CORS)](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) in the MDN Web Docs.",
        "stability": "external",
        "summary": "A configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst corsConfigProperty: cloudfront.CfnResponseHeadersPolicy.CorsConfigProperty = {\n  accessControlAllowCredentials: false,\n  accessControlAllowHeaders: {\n    items: ['items'],\n  },\n  accessControlAllowMethods: {\n    items: ['items'],\n  },\n  accessControlAllowOrigins: {\n    items: ['items'],\n  },\n  originOverride: false,\n\n  // the properties below are optional\n  accessControlExposeHeaders: {\n    items: ['items'],\n  },\n  accessControlMaxAgeSec: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CorsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7590
      },
      "name": "CorsConfigProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-corsconfig.html#cfn-cloudfront-responseheaderspolicy-corsconfig-accesscontrolallowcredentials"
            },
            "remarks": "For more information about the `Access-Control-Allow-Credentials` HTTP response header, see [Access-Control-Allow-Credentials](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A Boolean that CloudFront uses as the value for the `Access-Control-Allow-Credentials` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7598
          },
          "name": "accessControlAllowCredentials",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-corsconfig.html#cfn-cloudfront-responseheaderspolicy-corsconfig-accesscontrolallowheaders"
            },
            "remarks": "For more information about the `Access-Control-Allow-Headers` HTTP response header, see [Access-Control-Allow-Headers](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A list of HTTP header names that CloudFront includes as values for the `Access-Control-Allow-Headers` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7606
          },
          "name": "accessControlAllowHeaders",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowHeadersProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-corsconfig.html#cfn-cloudfront-responseheaderspolicy-corsconfig-accesscontrolallowmethods"
            },
            "remarks": "For more information about the `Access-Control-Allow-Methods` HTTP response header, see [Access-Control-Allow-Methods](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A list of HTTP methods that CloudFront includes as values for the `Access-Control-Allow-Methods` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7614
          },
          "name": "accessControlAllowMethods",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowMethodsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-corsconfig.html#cfn-cloudfront-responseheaderspolicy-corsconfig-accesscontrolalloworigins"
            },
            "remarks": "For more information about the `Access-Control-Allow-Origin` HTTP response header, see [Access-Control-Allow-Origin](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A list of origins (domain names) that CloudFront can use as the value for the `Access-Control-Allow-Origin` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7622
          },
          "name": "accessControlAllowOrigins",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlAllowOriginsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-corsconfig.html#cfn-cloudfront-responseheaderspolicy-corsconfig-originoverride"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront overrides HTTP response headers received from the origin with the ones specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7644
          },
          "name": "originOverride",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-corsconfig.html#cfn-cloudfront-responseheaderspolicy-corsconfig-accesscontrolexposeheaders"
            },
            "remarks": "For more information about the `Access-Control-Expose-Headers` HTTP response header, see [Access-Control-Expose-Headers](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A list of HTTP headers that CloudFront includes as values for the `Access-Control-Expose-Headers` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7630
          },
          "name": "accessControlExposeHeaders",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.AccessControlExposeHeadersProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-corsconfig.html#cfn-cloudfront-responseheaderspolicy-corsconfig-accesscontrolmaxagesec"
            },
            "remarks": "For more information about the `Access-Control-Max-Age` HTTP response header, see [Access-Control-Max-Age](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A number that CloudFront uses as the value for the `Access-Control-Max-Age` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7638
          },
          "name": "accessControlMaxAgeSec",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.CorsConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CustomHeaderProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-customheader.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "CloudFront includes this header in HTTP responses that it sends for requests that match a cache behavior that's associated with this response headers policy.",
        "stability": "external",
        "summary": "An HTTP response header name and its value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst customHeaderProperty: cloudfront.CfnResponseHeadersPolicy.CustomHeaderProperty = {\n  header: 'header',\n  override: false,\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CustomHeaderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7728
      },
      "name": "CustomHeaderProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-customheader.html#cfn-cloudfront-responseheaderspolicy-customheader-header"
            },
            "stability": "external",
            "summary": "The HTTP response header name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7734
          },
          "name": "header",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-customheader.html#cfn-cloudfront-responseheaderspolicy-customheader-override"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront overrides a response header with the same name received from the origin with the header specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7740
          },
          "name": "override",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-customheader.html#cfn-cloudfront-responseheaderspolicy-customheader-value"
            },
            "stability": "external",
            "summary": "The value for the HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7746
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.CustomHeaderProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CustomHeadersConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-customheadersconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "CloudFront includes these headers in HTTP responses that it sends for requests that match a cache behavior that's associated with this response headers policy.",
        "stability": "external",
        "summary": "A list of HTTP response header names and their values.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst customHeadersConfigProperty: cloudfront.CfnResponseHeadersPolicy.CustomHeadersConfigProperty = {\n  items: [{\n    header: 'header',\n    override: false,\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CustomHeadersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7816
      },
      "name": "CustomHeadersConfigProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-customheadersconfig.html#cfn-cloudfront-responseheaderspolicy-customheadersconfig-items"
            },
            "stability": "external",
            "summary": "The list of HTTP response headers and their values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7822
          },
          "name": "items",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CustomHeaderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.CustomHeadersConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.FrameOptionsProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-frameoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `X-Frame-Options` HTTP response header, see [X-Frame-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) in the MDN Web Docs.",
        "stability": "external",
        "summary": "Determines whether CloudFront includes the `X-Frame-Options` HTTP response header and the header's value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst frameOptionsProperty: cloudfront.CfnResponseHeadersPolicy.FrameOptionsProperty = {\n  frameOption: 'frameOption',\n  override: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.FrameOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7886
      },
      "name": "FrameOptionsProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-frameoptions.html#cfn-cloudfront-responseheaderspolicy-frameoptions-frameoption"
            },
            "remarks": "For more information about these values, see [X-Frame-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) in the MDN Web Docs.",
            "stability": "external",
            "summary": "The value of the `X-Frame-Options` HTTP response header. Valid values are `DENY` and `SAMEORIGIN` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7894
          },
          "name": "frameOption",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-frameoptions.html#cfn-cloudfront-responseheaderspolicy-frameoptions-override"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront overrides the `X-Frame-Options` HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7900
          },
          "name": "override",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.FrameOptionsProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ReferrerPolicyProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-referrerpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `Referrer-Policy` HTTP response header, see [Referrer-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) in the MDN Web Docs.",
        "stability": "external",
        "summary": "Determines whether CloudFront includes the `Referrer-Policy` HTTP response header and the header's value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst referrerPolicyProperty: cloudfront.CfnResponseHeadersPolicy.ReferrerPolicyProperty = {\n  override: false,\n  referrerPolicy: 'referrerPolicy',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ReferrerPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 7968
      },
      "name": "ReferrerPolicyProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-referrerpolicy.html#cfn-cloudfront-responseheaderspolicy-referrerpolicy-override"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront overrides the `Referrer-Policy` HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7974
          },
          "name": "override",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-referrerpolicy.html#cfn-cloudfront-responseheaderspolicy-referrerpolicy-referrerpolicy"
            },
            "remarks": "- `no-referrer`\n- `no-referrer-when-downgrade`\n- `origin`\n- `origin-when-cross-origin`\n- `same-origin`\n- `strict-origin`\n- `strict-origin-when-cross-origin`\n- `unsafe-url`\n\nFor more information about these values, see [Referrer-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) in the MDN Web Docs.",
            "stability": "external",
            "summary": "The value of the `Referrer-Policy` HTTP response header. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 7991
          },
          "name": "referrerPolicy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.ReferrerPolicyProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.RemoveHeaderProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-removeheader.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The name of an HTTP header that CloudFront removes from HTTP responses to requests that match the cache behavior that this response headers policy is attached to.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst removeHeaderProperty: cloudfront.CfnResponseHeadersPolicy.RemoveHeaderProperty = {\n  header: 'header',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.RemoveHeaderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8057
      },
      "name": "RemoveHeaderProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-removeheader.html#cfn-cloudfront-responseheaderspolicy-removeheader-header"
            },
            "stability": "external",
            "summary": "The HTTP header name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8063
          },
          "name": "header",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.RemoveHeaderProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.RemoveHeadersConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-removeheadersconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A list of HTTP header names that CloudFront removes from HTTP responses to requests that match the cache behavior that this response headers policy is attached to.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst removeHeadersConfigProperty: cloudfront.CfnResponseHeadersPolicy.RemoveHeadersConfigProperty = {\n  items: [{\n    header: 'header',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.RemoveHeadersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8125
      },
      "name": "RemoveHeadersConfigProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-removeheadersconfig.html#cfn-cloudfront-responseheaderspolicy-removeheadersconfig-items"
            },
            "stability": "external",
            "summary": "The list of HTTP header names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8131
          },
          "name": "items",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.RemoveHeaderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.RemoveHeadersConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ResponseHeadersPolicyConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-responseheaderspolicyconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A response headers policy configuration contains metadata about the response headers policy, and configurations for sets of HTTP response headers.",
        "stability": "external",
        "summary": "A response headers policy configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst responseHeadersPolicyConfigProperty: cloudfront.CfnResponseHeadersPolicy.ResponseHeadersPolicyConfigProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  comment: 'comment',\n  corsConfig: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: {\n      items: ['items'],\n    },\n    accessControlAllowMethods: {\n      items: ['items'],\n    },\n    accessControlAllowOrigins: {\n      items: ['items'],\n    },\n    originOverride: false,\n\n    // the properties below are optional\n    accessControlExposeHeaders: {\n      items: ['items'],\n    },\n    accessControlMaxAgeSec: 123,\n  },\n  customHeadersConfig: {\n    items: [{\n      header: 'header',\n      override: false,\n      value: 'value',\n    }],\n  },\n  removeHeadersConfig: {\n    items: [{\n      header: 'header',\n    }],\n  },\n  securityHeadersConfig: {\n    contentSecurityPolicy: {\n      contentSecurityPolicy: 'contentSecurityPolicy',\n      override: false,\n    },\n    contentTypeOptions: {\n      override: false,\n    },\n    frameOptions: {\n      frameOption: 'frameOption',\n      override: false,\n    },\n    referrerPolicy: {\n      override: false,\n      referrerPolicy: 'referrerPolicy',\n    },\n    strictTransportSecurity: {\n      accessControlMaxAgeSec: 123,\n      override: false,\n\n      // the properties below are optional\n      includeSubdomains: false,\n      preload: false,\n    },\n    xssProtection: {\n      override: false,\n      protection: false,\n\n      // the properties below are optional\n      modeBlock: false,\n      reportUri: 'reportUri',\n    },\n  },\n  serverTimingHeadersConfig: {\n    enabled: false,\n\n    // the properties below are optional\n    samplingRate: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ResponseHeadersPolicyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8195
      },
      "name": "ResponseHeadersPolicyConfigProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-responseheaderspolicyconfig.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig-name"
            },
            "remarks": "The name must be unique for response headers policies in this AWS account .",
            "stability": "external",
            "summary": "A name to identify the response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8223
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-responseheaderspolicyconfig.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig-comment"
            },
            "remarks": "The comment cannot be longer than 128 characters.",
            "stability": "external",
            "summary": "A comment to describe the response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8203
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-responseheaderspolicyconfig.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig-corsconfig"
            },
            "stability": "external",
            "summary": "A configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8209
          },
          "name": "corsConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CorsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-responseheaderspolicyconfig.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig-customheadersconfig"
            },
            "stability": "external",
            "summary": "A configuration for a set of custom HTTP response headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8215
          },
          "name": "customHeadersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.CustomHeadersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-responseheaderspolicyconfig.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig-removeheadersconfig"
            },
            "stability": "external",
            "summary": "A configuration for a set of HTTP headers to remove from the HTTP response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8229
          },
          "name": "removeHeadersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.RemoveHeadersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-responseheaderspolicyconfig.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig-securityheadersconfig"
            },
            "stability": "external",
            "summary": "A configuration for a set of security-related HTTP response headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8235
          },
          "name": "securityHeadersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.SecurityHeadersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-responseheaderspolicyconfig.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig-servertimingheadersconfig"
            },
            "stability": "external",
            "summary": "A configuration for enabling the `Server-Timing` header in HTTP responses sent from CloudFront."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8241
          },
          "name": "serverTimingHeadersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ServerTimingHeadersConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.ResponseHeadersPolicyConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.SecurityHeadersConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-securityheadersconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "CloudFront adds these headers to HTTP responses that it sends for requests that match a cache behavior associated with this response headers policy.",
        "stability": "external",
        "summary": "A configuration for a set of security-related HTTP response headers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst securityHeadersConfigProperty: cloudfront.CfnResponseHeadersPolicy.SecurityHeadersConfigProperty = {\n  contentSecurityPolicy: {\n    contentSecurityPolicy: 'contentSecurityPolicy',\n    override: false,\n  },\n  contentTypeOptions: {\n    override: false,\n  },\n  frameOptions: {\n    frameOption: 'frameOption',\n    override: false,\n  },\n  referrerPolicy: {\n    override: false,\n    referrerPolicy: 'referrerPolicy',\n  },\n  strictTransportSecurity: {\n    accessControlMaxAgeSec: 123,\n    override: false,\n\n    // the properties below are optional\n    includeSubdomains: false,\n    preload: false,\n  },\n  xssProtection: {\n    override: false,\n    protection: false,\n\n    // the properties below are optional\n    modeBlock: false,\n    reportUri: 'reportUri',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.SecurityHeadersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8321
      },
      "name": "SecurityHeadersConfigProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-securityheadersconfig.html#cfn-cloudfront-responseheaderspolicy-securityheadersconfig-contentsecuritypolicy"
            },
            "remarks": "For more information about the `Content-Security-Policy` HTTP response header, see [Content-Security-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) in the MDN Web Docs.",
            "stability": "external",
            "summary": "The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8329
          },
          "name": "contentSecurityPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ContentSecurityPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-securityheadersconfig.html#cfn-cloudfront-responseheaderspolicy-securityheadersconfig-contenttypeoptions"
            },
            "remarks": "For more information about the `X-Content-Type-Options` HTTP response header, see [X-Content-Type-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options) in the MDN Web Docs.",
            "stability": "external",
            "summary": "Determines whether CloudFront includes the `X-Content-Type-Options` HTTP response header with its value set to `nosniff` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8337
          },
          "name": "contentTypeOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ContentTypeOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-securityheadersconfig.html#cfn-cloudfront-responseheaderspolicy-securityheadersconfig-frameoptions"
            },
            "remarks": "For more information about the `X-Frame-Options` HTTP response header, see [X-Frame-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) in the MDN Web Docs.",
            "stability": "external",
            "summary": "Determines whether CloudFront includes the `X-Frame-Options` HTTP response header and the header's value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8345
          },
          "name": "frameOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.FrameOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-securityheadersconfig.html#cfn-cloudfront-responseheaderspolicy-securityheadersconfig-referrerpolicy"
            },
            "remarks": "For more information about the `Referrer-Policy` HTTP response header, see [Referrer-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) in the MDN Web Docs.",
            "stability": "external",
            "summary": "Determines whether CloudFront includes the `Referrer-Policy` HTTP response header and the header's value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8353
          },
          "name": "referrerPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ReferrerPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-securityheadersconfig.html#cfn-cloudfront-responseheaderspolicy-securityheadersconfig-stricttransportsecurity"
            },
            "remarks": "For more information about the `Strict-Transport-Security` HTTP response header, see [Strict-Transport-Security](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security) in the MDN Web Docs.",
            "stability": "external",
            "summary": "Determines whether CloudFront includes the `Strict-Transport-Security` HTTP response header and the header's value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8361
          },
          "name": "strictTransportSecurity",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.StrictTransportSecurityProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-securityheadersconfig.html#cfn-cloudfront-responseheaderspolicy-securityheadersconfig-xssprotection"
            },
            "remarks": "For more information about the `X-XSS-Protection` HTTP response header, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.",
            "stability": "external",
            "summary": "Determines whether CloudFront includes the `X-XSS-Protection` HTTP response header and the header's value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8369
          },
          "name": "xssProtection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.XSSProtectionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.SecurityHeadersConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ServerTimingHeadersConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-servertimingheadersconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A configuration for enabling the `Server-Timing` header in HTTP responses sent from CloudFront.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst serverTimingHeadersConfigProperty: cloudfront.CfnResponseHeadersPolicy.ServerTimingHeadersConfigProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  samplingRate: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ServerTimingHeadersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8445
      },
      "name": "ServerTimingHeadersConfigProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-servertimingheadersconfig.html#cfn-cloudfront-responseheaderspolicy-servertimingheadersconfig-enabled"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8451
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-servertimingheadersconfig.html#cfn-cloudfront-responseheaderspolicy-servertimingheadersconfig-samplingrate"
            },
            "remarks": "When you set the sampling rate to 100, CloudFront adds the `Server-Timing` header to the HTTP response for every request that matches the cache behavior that this response headers policy is attached to. When you set it to 50, CloudFront adds the header to 50% of the responses for requests that match the cache behavior. You can set the sampling rate to any number 0–100 with up to four decimal places.",
            "stability": "external",
            "summary": "A number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the `Server-Timing` header to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8457
          },
          "name": "samplingRate",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.ServerTimingHeadersConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.StrictTransportSecurityProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-stricttransportsecurity.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `Strict-Transport-Security` HTTP response header, see [Strict-Transport-Security](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security) in the MDN Web Docs.",
        "stability": "external",
        "summary": "Determines whether CloudFront includes the `Strict-Transport-Security` HTTP response header and the header's value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst strictTransportSecurityProperty: cloudfront.CfnResponseHeadersPolicy.StrictTransportSecurityProperty = {\n  accessControlMaxAgeSec: 123,\n  override: false,\n\n  // the properties below are optional\n  includeSubdomains: false,\n  preload: false,\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.StrictTransportSecurityProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8524
      },
      "name": "StrictTransportSecurityProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-stricttransportsecurity.html#cfn-cloudfront-responseheaderspolicy-stricttransportsecurity-accesscontrolmaxagesec"
            },
            "stability": "external",
            "summary": "A number that CloudFront uses as the value for the `max-age` directive in the `Strict-Transport-Security` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8530
          },
          "name": "accessControlMaxAgeSec",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-stricttransportsecurity.html#cfn-cloudfront-responseheaderspolicy-stricttransportsecurity-override"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront overrides the `Strict-Transport-Security` HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8542
          },
          "name": "override",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-stricttransportsecurity.html#cfn-cloudfront-responseheaderspolicy-stricttransportsecurity-includesubdomains"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront includes the `includeSubDomains` directive in the `Strict-Transport-Security` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8536
          },
          "name": "includeSubdomains",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-stricttransportsecurity.html#cfn-cloudfront-responseheaderspolicy-stricttransportsecurity-preload"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront includes the `preload` directive in the `Strict-Transport-Security` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8548
          },
          "name": "preload",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.StrictTransportSecurityProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.XSSProtectionProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-xssprotection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about the `X-XSS-Protection` HTTP response header, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.",
        "stability": "external",
        "summary": "Determines whether CloudFront includes the `X-XSS-Protection` HTTP response header and the header's value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst xSSProtectionProperty: cloudfront.CfnResponseHeadersPolicy.XSSProtectionProperty = {\n  override: false,\n  protection: false,\n\n  // the properties below are optional\n  modeBlock: false,\n  reportUri: 'reportUri',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.XSSProtectionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8622
      },
      "name": "XSSProtectionProperty",
      "namespace": "CfnResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-xssprotection.html#cfn-cloudfront-responseheaderspolicy-xssprotection-override"
            },
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront overrides the `X-XSS-Protection` HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8636
          },
          "name": "override",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-xssprotection.html#cfn-cloudfront-responseheaderspolicy-xssprotection-protection"
            },
            "remarks": "When this setting is `true` , the value of the `X-XSS-Protection` header is `1` . When this setting is `false` , the value of the `X-XSS-Protection` header is `0` .\n\nFor more information about these settings, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A Boolean that determines the value of the `X-XSS-Protection` HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8644
          },
          "name": "protection",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-xssprotection.html#cfn-cloudfront-responseheaderspolicy-xssprotection-modeblock"
            },
            "remarks": "For more information about this directive, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A Boolean that determines whether CloudFront includes the `mode=block` directive in the `X-XSS-Protection` header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8630
          },
          "name": "modeBlock",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-responseheaderspolicy-xssprotection.html#cfn-cloudfront-responseheaderspolicy-xssprotection-reporturi"
            },
            "remarks": "You cannot specify a `ReportUri` when `ModeBlock` is `true` .\n\nFor more information about using a reporting URL, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.",
            "stability": "external",
            "summary": "A reporting URI, which CloudFront uses as the value of the `report` directive in the `X-XSS-Protection` header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8654
          },
          "name": "reportUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicy.XSSProtectionProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResponseHeadersPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnResponseHeadersPolicyProps: cloudfront.CfnResponseHeadersPolicyProps = {\n  responseHeadersPolicyConfig: {\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n    corsConfig: {\n      accessControlAllowCredentials: false,\n      accessControlAllowHeaders: {\n        items: ['items'],\n      },\n      accessControlAllowMethods: {\n        items: ['items'],\n      },\n      accessControlAllowOrigins: {\n        items: ['items'],\n      },\n      originOverride: false,\n\n      // the properties below are optional\n      accessControlExposeHeaders: {\n        items: ['items'],\n      },\n      accessControlMaxAgeSec: 123,\n    },\n    customHeadersConfig: {\n      items: [{\n        header: 'header',\n        override: false,\n        value: 'value',\n      }],\n    },\n    removeHeadersConfig: {\n      items: [{\n        header: 'header',\n      }],\n    },\n    securityHeadersConfig: {\n      contentSecurityPolicy: {\n        contentSecurityPolicy: 'contentSecurityPolicy',\n        override: false,\n      },\n      contentTypeOptions: {\n        override: false,\n      },\n      frameOptions: {\n        frameOption: 'frameOption',\n        override: false,\n      },\n      referrerPolicy: {\n        override: false,\n        referrerPolicy: 'referrerPolicy',\n      },\n      strictTransportSecurity: {\n        accessControlMaxAgeSec: 123,\n        override: false,\n\n        // the properties below are optional\n        includeSubdomains: false,\n        preload: false,\n      },\n      xssProtection: {\n        override: false,\n        protection: false,\n\n        // the properties below are optional\n        modeBlock: false,\n        reportUri: 'reportUri',\n      },\n    },\n    serverTimingHeadersConfig: {\n      enabled: false,\n\n      // the properties below are optional\n      samplingRate: 123,\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 6984
      },
      "name": "CfnResponseHeadersPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig"
            },
            "stability": "external",
            "summary": "A response headers policy configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 6991
          },
          "name": "responseHeadersPolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnResponseHeadersPolicy.ResponseHeadersPolicyConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnResponseHeadersPolicyProps"
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::StreamingDistribution",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This resource is deprecated. Amazon CloudFront is deprecating real-time messaging protocol (RTMP) distributions on December 31, 2020. For more information, [read the announcement](https://docs.aws.amazon.com/ann.jspa?annID=7356) on the Amazon CloudFront discussion forum.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::StreamingDistribution`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnStreamingDistribution = new cloudfront.CfnStreamingDistribution(this, 'MyCfnStreamingDistribution', {\n  streamingDistributionConfig: {\n    comment: 'comment',\n    enabled: false,\n    s3Origin: {\n      domainName: 'domainName',\n      originAccessIdentity: 'originAccessIdentity',\n    },\n    trustedSigners: {\n      enabled: false,\n\n      // the properties below are optional\n      awsAccountNumbers: ['awsAccountNumbers'],\n    },\n\n    // the properties below are optional\n    aliases: ['aliases'],\n    logging: {\n      bucket: 'bucket',\n      enabled: false,\n      prefix: 'prefix',\n    },\n    priceClass: 'priceClass',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::StreamingDistribution`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 8854
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistributionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8802
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8870
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8882
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStreamingDistribution",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8806
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DomainName"
            },
            "stability": "external",
            "summary": "The domain name of the resource, such as `d111111abcdef8.cloudfront.net` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8831
          },
          "name": "attrDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8875
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-tags"
            },
            "stability": "external",
            "summary": "A complex type that contains zero or more `Tag` elements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8845
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig"
            },
            "stability": "external",
            "summary": "The current configuration information for the RTMP distribution."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8838
          },
          "name": "streamingDistributionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnStreamingDistribution"
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.LoggingProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex type that controls whether access logs are written for the streaming distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst loggingProperty: cloudfront.CfnStreamingDistribution.LoggingProperty = {\n  bucket: 'bucket',\n  enabled: false,\n  prefix: 'prefix',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.LoggingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8896
      },
      "name": "LoggingProperty",
      "namespace": "CfnStreamingDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html#cfn-cloudfront-streamingdistribution-logging-bucket"
            },
            "stability": "external",
            "summary": "The Amazon S3 bucket to store the access logs in, for example, `myawslogbucket.s3.amazonaws.com` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8902
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html#cfn-cloudfront-streamingdistribution-logging-enabled"
            },
            "remarks": "If you don't want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify `false` for `Enabled` , and specify `empty Bucket` and `Prefix` elements. If you specify `false` for `Enabled` but you specify values for `Bucket` and `Prefix` , the values are automatically deleted.",
            "stability": "external",
            "summary": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8908
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html#cfn-cloudfront-streamingdistribution-logging-prefix"
            },
            "remarks": "If you want to enable logging, but you don't want to specify a prefix, you still must include an empty `Prefix` element in the `Logging` element.",
            "stability": "external",
            "summary": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, `myprefix/` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8914
          },
          "name": "prefix",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnStreamingDistribution.LoggingProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.S3OriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-s3origin.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst s3OriginProperty: cloudfront.CfnStreamingDistribution.S3OriginProperty = {\n  domainName: 'domainName',\n  originAccessIdentity: 'originAccessIdentity',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.S3OriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8984
      },
      "name": "S3OriginProperty",
      "namespace": "CfnStreamingDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-s3origin.html#cfn-cloudfront-streamingdistribution-s3origin-domainname"
            },
            "stability": "external",
            "summary": "The DNS name of the Amazon S3 origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8990
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-s3origin.html#cfn-cloudfront-streamingdistribution-s3origin-originaccessidentity"
            },
            "remarks": "Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty `OriginAccessIdentity` element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty `OriginAccessIdentity` element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see [Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "The CloudFront origin access identity to associate with the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9004
          },
          "name": "originAccessIdentity",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnStreamingDistribution.S3OriginProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The RTMP distribution's configuration information.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst streamingDistributionConfigProperty: cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty = {\n  comment: 'comment',\n  enabled: false,\n  s3Origin: {\n    domainName: 'domainName',\n    originAccessIdentity: 'originAccessIdentity',\n  },\n  trustedSigners: {\n    enabled: false,\n\n    // the properties below are optional\n    awsAccountNumbers: ['awsAccountNumbers'],\n  },\n\n  // the properties below are optional\n  aliases: ['aliases'],\n  logging: {\n    bucket: 'bucket',\n    enabled: false,\n    prefix: 'prefix',\n  },\n  priceClass: 'priceClass',\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 9070
      },
      "name": "StreamingDistributionConfigProperty",
      "namespace": "CfnStreamingDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-comment"
            },
            "stability": "external",
            "summary": "Any comments you want to include about the streaming distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9082
          },
          "name": "comment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-enabled"
            },
            "stability": "external",
            "summary": "Whether the streaming distribution is enabled to accept user requests for content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9088
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-s3origin"
            },
            "stability": "external",
            "summary": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9106
          },
          "name": "s3Origin",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.S3OriginProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-trustedsigners"
            },
            "remarks": "If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see [Serving Private Content through CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide* .",
            "stability": "external",
            "summary": "A complex type that specifies any AWS accounts that you want to permit to create signed URLs for private content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9112
          },
          "name": "trustedSigners",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.TrustedSignersProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-aliases"
            },
            "stability": "external",
            "summary": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9076
          },
          "name": "aliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-logging"
            },
            "stability": "external",
            "summary": "A complex type that controls whether access logs are written for the streaming distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9094
          },
          "name": "logging",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.LoggingProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-priceclass"
            },
            "stability": "external",
            "summary": "A complex type that contains information about price class for this streaming distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9100
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnStreamingDistribution.StreamingDistributionConfigProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.TrustedSignersProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-trustedsigners.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A list of AWS accounts whose public keys CloudFront can use to verify the signatures of signed URLs and signed cookies.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst trustedSignersProperty: cloudfront.CfnStreamingDistribution.TrustedSignersProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  awsAccountNumbers: ['awsAccountNumbers'],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.TrustedSignersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 9195
      },
      "name": "TrustedSignersProperty",
      "namespace": "CfnStreamingDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-trustedsigners.html#cfn-cloudfront-streamingdistribution-trustedsigners-enabled"
            },
            "remarks": "If not, this field is `false` .",
            "stability": "external",
            "summary": "This field is `true` if any of the AWS accounts in the list are configured as trusted signers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9207
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-trustedsigners.html#cfn-cloudfront-streamingdistribution-trustedsigners-awsaccountnumbers"
            },
            "remarks": "If the AWS account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is `self` .",
            "stability": "external",
            "summary": "An AWS account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 9201
          },
          "name": "awsAccountNumbers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnStreamingDistribution.TrustedSignersProperty"
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistributionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnStreamingDistribution`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cfnStreamingDistributionProps: cloudfront.CfnStreamingDistributionProps = {\n  streamingDistributionConfig: {\n    comment: 'comment',\n    enabled: false,\n    s3Origin: {\n      domainName: 'domainName',\n      originAccessIdentity: 'originAccessIdentity',\n    },\n    trustedSigners: {\n      enabled: false,\n\n      // the properties below are optional\n      awsAccountNumbers: ['awsAccountNumbers'],\n    },\n\n    // the properties below are optional\n    aliases: ['aliases'],\n    logging: {\n      bucket: 'bucket',\n      enabled: false,\n      prefix: 'prefix',\n    },\n    priceClass: 'priceClass',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 8725
      },
      "name": "CfnStreamingDistributionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig"
            },
            "stability": "external",
            "summary": "The current configuration information for the RTMP distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8732
          },
          "name": "streamingDistributionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-tags"
            },
            "stability": "external",
            "summary": "A complex type that contains zero or more `Tag` elements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 8739
          },
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cloudfront.generated:CfnStreamingDistributionProps"
    },
    "@aws-cdk/aws-cloudfront.CloudFrontAllowedCachedMethods": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Enums for the methods CloudFront can cache."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontAllowedCachedMethods",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 347
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GET_HEAD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GET_HEAD_OPTIONS"
        }
      ],
      "name": "CloudFrontAllowedCachedMethods",
      "symbolId": "lib/web-distribution:CloudFrontAllowedCachedMethods"
    },
    "@aws-cdk/aws-cloudfront.CloudFrontAllowedMethods": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "An enum for the supported methods to a CloudFront distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontAllowedMethods",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 338
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GET_HEAD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GET_HEAD_OPTIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALL"
        }
      ],
      "name": "CloudFrontAllowedMethods",
      "symbolId": "lib/web-distribution:CloudFrontAllowedMethods"
    },
    "@aws-cdk/aws-cloudfront.CloudFrontWebDistribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::Distribution",
          "exampleMetadata": "infused"
        },
        "remarks": "CloudFront fronts user provided content and caches it at edge locations across the world.\n\nHere's how you can use this construct:\n\n```ts\nconst sourceBucket = new s3.Bucket(this, 'Bucket');\n\nconst distribution = new cloudfront.CloudFrontWebDistribution(this, 'MyDistribution', {\n   originConfigs: [\n     {\n       s3OriginSource: {\n       s3BucketSource: sourceBucket,\n       },\n       behaviors : [ {isDefaultBehavior: true}],\n     },\n   ],\n});\n```\n\nThis will create a CloudFront distribution that uses your S3Bucket as it's origin.\n\nYou can customize the distribution using additional properties from the CloudFrontWebDistributionProps interface.",
        "stability": "stable",
        "summary": "Amazon CloudFront is a global content delivery network (CDN) service that securely delivers data, videos, applications, and APIs to your viewers with low latency and high transfer speeds.",
        "example": "declare const sourceBucket: s3.Bucket;\nconst viewerCertificate = cloudfront.ViewerCertificate.fromIamCertificate('MYIAMROLEIDENTIFIER', {\n  aliases: ['MYALIAS'],\n});\n\nnew cloudfront.CloudFrontWebDistribution(this, 'MyCfWebDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors : [ {isDefaultBehavior: true} ],\n    },\n  ],\n  viewerCertificate: viewerCertificate,\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistribution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/web-distribution.ts",
          "line": 812
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IDistribution"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 744
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a construct that represents an external (imported) distribution."
          },
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 749
          },
          "name": "fromDistributionAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IDistribution"
            }
          },
          "static": true
        }
      ],
      "name": "CloudFrontWebDistribution",
      "properties": [
        {
          "docs": {
            "remarks": "If you are using aliases for your distribution, this is the domainName your DNS records should point to.\n(In Route53, you could create an ALIAS record to this value, for example.)",
            "stability": "stable",
            "summary": "The domain name created by CloudFront for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 784
          },
          "name": "distributionDomainName",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 789
          },
          "name": "distributionId",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "deprecated": "- Use `distributionDomainName` instead.",
            "remarks": "If you are using aliases for your distribution, this is the domainName your DNS records should point to.\n(In Route53, you could create an ALIAS record to this value, for example.)",
            "stability": "deprecated",
            "summary": "The domain name created by CloudFront for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 777
          },
          "name": "domainName",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "If logging is not enabled for this distribution - this property will be undefined.",
            "stability": "stable",
            "summary": "The logging bucket for this CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 768
          },
          "name": "loggingBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ],
      "symbolId": "lib/web-distribution:CloudFrontWebDistribution"
    },
    "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionAttributes": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes used to import a Distribution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst cloudFrontWebDistributionAttributes: cloudfront.CloudFrontWebDistributionAttributes = {\n  distributionId: 'distributionId',\n  domainName: 'domainName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 700
      },
      "name": "CloudFrontWebDistributionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 713
          },
          "name": "distributionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The generated domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 706
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/web-distribution:CloudFrontWebDistributionAttributes"
    },
    "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "declare const sourceBucket: s3.Bucket;\nconst viewerCertificate = cloudfront.ViewerCertificate.fromIamCertificate('MYIAMROLEIDENTIFIER', {\n  aliases: ['MYALIAS'],\n});\n\nnew cloudfront.CloudFrontWebDistribution(this, 'MyCfWebDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors : [ {isDefaultBehavior: true} ],\n    },\n  ],\n  viewerCertificate: viewerCertificate,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 573
      },
      "name": "CloudFrontWebDistributionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Behaviors are a part of the origin.",
            "stability": "stable",
            "summary": "The origin configurations for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 635
          },
          "name": "originConfigs",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.SourceConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "deprecated": "see {@link CloudFrontWebDistributionProps#viewerCertificate} with {@link ViewerCertificate#acmCertificate}",
            "stability": "deprecated",
            "summary": "AliasConfiguration is used to configured CloudFront to respond to requests on custom domain names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 581
          },
          "name": "aliasConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AliasConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No comment is added to distribution.",
            "stability": "stable",
            "summary": "A comment for this distribution in the CloudFront console."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 588
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- \"index.html\" is served.",
            "stability": "stable",
            "summary": "The default object to serve."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 602
          },
          "name": "defaultRootObject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Enable or disable the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 595
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "If your distribution should have IPv6 enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 609
          },
          "name": "enableIpV6",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom error configuration.",
            "remarks": "By default, CloudFront does not replace HTTP status codes in the 4xx and 5xx range\nwith custom error messages. CloudFront does not cache HTTP status codes.",
            "stability": "stable",
            "summary": "How CloudFront should handle requests that are not successful (eg PageNotFound)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 654
          },
          "name": "errorConfigurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomErrorResponseProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No geo restriction",
            "stability": "stable",
            "summary": "Controls the countries in which your content is distributed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 687
          },
          "name": "geoRestriction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpVersion.HTTP2",
            "stability": "stable",
            "summary": "The max supported HTTP Versions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 616
          },
          "name": "httpVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.HttpVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no logging is enabled by default.",
            "remarks": "You can pass an empty object ({}) to have us auto create a bucket for logging.\nOmission of this property indicates no logging is to be enabled.",
            "stability": "stable",
            "summary": "Optional - if we should enable logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 644
          },
          "name": "loggingConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.LoggingConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PriceClass.PRICE_CLASS_100 the cheapest option for CloudFront is picked by default.",
            "stability": "stable",
            "summary": "The price class for the distribution (this impacts how many locations CloudFront uses for your distribution, and billing)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 623
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.PriceClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ViewerCertificate.fromCloudFrontDefaultCertificate()",
            "see": "https://aws.amazon.com/premiumsupport/knowledge-center/custom-ssl-certificate-cloudfront/",
            "stability": "stable",
            "summary": "Specifies whether you want viewers to use HTTP or HTTPS to request your objects, whether you're using an alternate domain name with HTTPS, and if so, if you're using AWS Certificate Manager (ACM) or a third-party certificate authority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 680
          },
          "name": "viewerCertificate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RedirectToHTTPs",
            "stability": "stable",
            "summary": "The default viewer policy for incoming clients."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 630
          },
          "name": "viewerProtocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No AWS Web Application Firewall web access control list (web ACL).",
            "remarks": "To specify a web ACL created using the latest version of AWS WAF, use the ACL ARN, for example\n`arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a`.\n\nTo specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `473e64fd-f30b-4765-81a0-62ad96dd167a`.",
            "see": "https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateDistribution.html#API_CreateDistribution_RequestParameters.",
            "stability": "stable",
            "summary": "Unique identifier that specifies the AWS WAF web ACL to associate with this CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 669
          },
          "name": "webACLId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/web-distribution:CloudFrontWebDistributionProps"
    },
    "@aws-cdk/aws-cloudfront.CustomOriginConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A custom origin configuration.",
        "example": "declare const sourceBucket: s3.Bucket;\ndeclare const oai: cloudfront.OriginAccessIdentity;\n\nnew cloudfront.CloudFrontWebDistribution(this, 'MyCfWebDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n        originAccessIdentity: oai,\n      },\n      behaviors: [ {isDefaultBehavior: true}],\n    },\n    {\n      customOriginSource: {\n        domainName: 'MYALIAS',\n      },\n      behaviors: [{ pathPattern: '/somewhere' }]\n    }\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.CustomOriginConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 220
      },
      "name": "CustomOriginConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Should not include the path - that should be in the parent SourceConfiguration",
            "stability": "stable",
            "summary": "The domain name of the custom origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 224
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginSslPolicy.TLS_V1_2",
            "stability": "stable",
            "summary": "The SSL versions to use when interacting with the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 266
          },
          "name": "allowedOriginSSLVersions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginSslPolicy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "80",
            "stability": "stable",
            "summary": "The origin HTTP port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 231
          },
          "name": "httpPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "443",
            "stability": "stable",
            "summary": "The origin HTTPS port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 238
          },
          "name": "httpsPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional headers are passed.",
            "stability": "stable",
            "summary": "Any additional headers to pass to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 280
          },
          "name": "originHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(5)",
            "stability": "stable",
            "summary": "The keep alive timeout when making calls in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 245
          },
          "name": "originKeepaliveTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "stability": "stable",
            "summary": "The relative path to the origin root to use for sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 273
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginProtocolPolicy.HttpsOnly",
            "stability": "stable",
            "summary": "The protocol (http or https) policy to use when interacting with the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 252
          },
          "name": "originProtocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginProtocolPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(30)",
            "stability": "stable",
            "summary": "The read timeout when calling the origin in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 259
          },
          "name": "originReadTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- origin shield not enabled",
            "stability": "stable",
            "summary": "When you enable Origin Shield in the AWS Region that has the lowest latency to your origin, you can get better network performance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 287
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/web-distribution:CustomOriginConfig"
    },
    "@aws-cdk/aws-cloudfront.Distribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A CloudFront distribution with associated origin(s) and caching behavior(s).",
        "example": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.Distribution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/distribution.ts",
          "line": 279
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.DistributionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IDistribution"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 247
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a Distribution construct that represents an external (imported) distribution."
          },
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 252
          },
          "name": "fromDistributionAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.DistributionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IDistribution"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new behavior to this distribution for the given pathPattern."
          },
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 344
          },
          "name": "addBehavior",
          "parameters": [
            {
              "docs": {
                "summary": "the path pattern (e.g., 'images/*') that specifies which requests to apply the behavior to."
              },
              "name": "pathPattern",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the origin to use for this behavior."
              },
              "name": "origin",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.IOrigin"
              }
            },
            {
              "docs": {
                "summary": "the options for the behavior at this path."
              },
              "name": "behaviorOptions",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.AddBehaviorOptions"
              }
            }
          ]
        }
      ],
      "name": "Distribution",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 268
          },
          "name": "distributionDomainName",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 269
          },
          "name": "distributionId",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 267
          },
          "name": "domainName",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/distribution:Distribution"
    },
    "@aws-cdk/aws-cloudfront.DistributionAttributes": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes used to import a Distribution.",
        "example": "// Using a reference to an imported Distribution\nconst distribution = cloudfront.Distribution.fromDistributionAttributes(this, 'ImportedDist', {\n  domainName: 'd111111abcdef8.cloudfront.net',\n  distributionId: '012345ABCDEF',\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.DistributionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 51
      },
      "name": "DistributionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 64
          },
          "name": "distributionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The generated domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 57
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/distribution:DistributionAttributes"
    },
    "@aws-cdk/aws-cloudfront.DistributionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Distribution.",
        "example": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.DistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 75
      },
      "name": "DistributionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The default behavior for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 79
          },
          "name": "defaultBehavior",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.BehaviorOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional behaviors are added.",
            "stability": "stable",
            "summary": "Additional behaviors for the distribution, mapped by the pathPattern that specifies which requests to apply the behavior to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 86
          },
          "name": "additionalBehaviors",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.BehaviorOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the CloudFront wildcard certificate (*.cloudfront.net) will be used.",
            "remarks": "The certificate must be located in N. Virginia (us-east-1).",
            "stability": "stable",
            "summary": "A certificate to associate with the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 93
          },
          "name": "certificate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "Any comments you want to include about the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 100
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no default root object",
            "stability": "stable",
            "summary": "The object that you want CloudFront to request from your origin (for example, index.html) when a viewer requests the root URL for your distribution. If no default object is set, the request goes to the origin's root (e.g., example.com/)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 109
          },
          "name": "defaultRootObject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The distribution will only support the default generated name (e.g., d111111abcdef8.cloudfront.net)",
            "remarks": "If you want to use your own domain name, such as www.example.com, instead of the cloudfront.net domain name,\nyou can add an alternate domain name to your distribution. If you attach a certificate to the distribution,\nyou must add (at least one of) the domain names of the certificate to this list.",
            "stability": "stable",
            "summary": "Alternative domain names for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 120
          },
          "name": "domainNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Enable or disable the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 127
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If you specify false, CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses.\nThis allows viewers to submit a second request, for an IPv4 address for your distribution.",
            "stability": "stable",
            "summary": "Whether CloudFront will respond to IPv6 DNS requests with an IPv6 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 137
          },
          "name": "enableIpv6",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false, unless `logBucket` is specified.",
            "stability": "stable",
            "summary": "Enable access logging for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 144
          },
          "name": "enableLogging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom error responses.",
            "stability": "stable",
            "summary": "How CloudFront should handle requests that are not successful (e.g., PageNotFound)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 212
          },
          "name": "errorResponses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.ErrorResponse"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No geographic restrictions",
            "stability": "stable",
            "summary": "Controls the countries in which your content is distributed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 151
          },
          "name": "geoRestriction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpVersion.HTTP2",
            "remarks": "For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support server name identification (SNI).",
            "stability": "stable",
            "summary": "Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 160
          },
          "name": "httpVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.HttpVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A bucket is created if `enableLogging` is true",
            "stability": "stable",
            "summary": "The Amazon S3 bucket to store the access logs in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 167
          },
          "name": "logBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no prefix",
            "stability": "stable",
            "summary": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 181
          },
          "name": "logFilePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether you want CloudFront to include cookies in access logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 174
          },
          "name": "logIncludesCookies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "aws-cdk": "/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021' feature flag is set; otherwise, SecurityPolicyProtocol.TLS_V1_2_2019."
            },
            "default": "- SecurityPolicyProtocol.TLS_V1_2_2021 if the '",
            "remarks": "CloudFront serves your objects only to browsers or devices that support at\nleast the SSL version that you specify.",
            "stability": "stable",
            "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 222
          },
          "name": "minimumProtocolVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PriceClass.PRICE_CLASS_ALL",
            "remarks": "If you specify PriceClass_All, CloudFront responds to requests for your objects from all CloudFront edge locations.\nIf you specify a price class other than PriceClass_All, CloudFront serves your objects from the CloudFront edge location\nthat has the lowest latency among the edge locations in your price class.",
            "stability": "stable",
            "summary": "The price class that corresponds with the maximum price that you want to pay for CloudFront service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 191
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.PriceClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SSLMethod.SNI",
            "remarks": "Server Name Indication (SNI) - is an extension to the TLS computer networking protocol by which a client indicates\nwhich hostname it is attempting to connect to at the start of the handshaking process. This allows a server to present\nmultiple certificates on the same IP address and TCP port number and hence allows multiple secure (HTTPS) websites\n(or any other service over TLS) to be served by the same IP address without requiring all those sites to use the same certificate.\n\nCloudFront can use SNI to host multiple distributions on the same IP - which a large majority of clients will support.\n\nIf your clients cannot support SNI however - CloudFront can use dedicated IPs for your distribution - but there is a prorated monthly charge for\nusing this feature. By default, we use SNI - but you can optionally enable dedicated IPs (VIP).\n\nSee the CloudFront SSL for more details about pricing : https://aws.amazon.com/cloudfront/custom-ssl-domains/",
            "stability": "stable",
            "summary": "The SSL method CloudFront will use for your distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 241
          },
          "name": "sslSupportMethod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SSLMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No AWS Web Application Firewall web access control list (web ACL).",
            "remarks": "To specify a web ACL created using the latest version of AWS WAF, use the ACL ARN, for example\n`arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a`.\nTo specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `473e64fd-f30b-4765-81a0-62ad96dd167a`.",
            "see": "https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateDistribution.html#API_CreateDistribution_RequestParameters.",
            "stability": "stable",
            "summary": "Unique identifier that specifies the AWS WAF web ACL to associate with this CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 205
          },
          "name": "webAclId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/distribution:DistributionProps"
    },
    "@aws-cdk/aws-cloudfront.EdgeLambda": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "The type of the {@link AddBehaviorOptions.edgeLambdas} property.",
        "stability": "stable",
        "summary": "Represents a Lambda function version and event type when using Lambda@Edge.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const version: lambda.Version;\nconst edgeLambda: cloudfront.EdgeLambda = {\n  eventType: cloudfront.LambdaEdgeEventType.ORIGIN_REQUEST,\n  functionVersion: version,\n\n  // the properties below are optional\n  includeBody: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.EdgeLambda",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 662
      },
      "name": "EdgeLambda",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of event in response to which should the function be invoked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 671
          },
          "name": "eventType",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.LambdaEdgeEventType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "**Note**: it's not possible to use the '$LATEST' function version for Lambda@Edge!",
            "stability": "stable",
            "summary": "The version of the Lambda function that will be invoked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 668
          },
          "name": "functionVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Only valid for \"request\" event types (`ORIGIN_REQUEST` or `VIEWER_REQUEST`).\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html",
            "stability": "stable",
            "summary": "Allows a Lambda function to have read access to the body content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 680
          },
          "name": "includeBody",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/distribution:EdgeLambda"
    },
    "@aws-cdk/aws-cloudfront.ErrorResponse": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring custom error responses.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cdk from '@aws-cdk/core';\nconst errorResponse: cloudfront.ErrorResponse = {\n  httpStatus: 123,\n\n  // the properties below are optional\n  responseHttpStatus: 123,\n  responsePagePath: 'responsePagePath',\n  ttl: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ErrorResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 603
      },
      "name": "ErrorResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The HTTP status code for which you want to specify a custom error page and/or a caching duration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 613
          },
          "name": "httpStatus",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the error code will be returned as the response code.",
            "remarks": "If you specify a value for `responseHttpStatus`, you must also specify a value for `responsePagePath`.",
            "stability": "stable",
            "summary": "The HTTP status code that you want CloudFront to return to the viewer along with the custom error page."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 621
          },
          "name": "responseHttpStatus",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the default CloudFront response is shown.",
            "stability": "stable",
            "summary": "The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the `httpStatus`, for example, /4xx-errors/403-forbidden.html."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 628
          },
          "name": "responsePagePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the default caching TTL behavior applies",
            "stability": "stable",
            "summary": "The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 609
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/distribution:ErrorResponse"
    },
    "@aws-cdk/aws-cloudfront.FailoverStatusCode": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "HTTP status code to failover to second origin.",
        "example": "// Configuring origin fallback options for the CloudFrontWebDistribution\nnew cloudfront.CloudFrontWebDistribution(this, 'ADistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: s3.Bucket.fromBucketName(this, 'aBucket', 'myoriginbucket'),\n        originPath: '/',\n        originHeaders: {\n          'myHeader': '42',\n        },\n        originShieldRegion: 'us-west-2',\n      },\n      failoverS3OriginSource: {\n        s3BucketSource: s3.Bucket.fromBucketName(this, 'aBucketFallback', 'myoriginbucketfallback'),\n        originPath: '/somewhere',\n        originHeaders: {\n          'myHeader2': '21',\n        },\n        originShieldRegion: 'us-east-1',\n      },\n      failoverCriteriaStatusCodes: [cloudfront.FailoverStatusCode.INTERNAL_SERVER_ERROR],\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.FailoverStatusCode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 17
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Forbidden (403)."
          },
          "name": "FORBIDDEN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Not found (404)."
          },
          "name": "NOT_FOUND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Internal Server Error (500)."
          },
          "name": "INTERNAL_SERVER_ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Bad Gateway (502)."
          },
          "name": "BAD_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Service Unavailable (503)."
          },
          "name": "SERVICE_UNAVAILABLE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gateway Timeout (504)."
          },
          "name": "GATEWAY_TIMEOUT"
        }
      ],
      "name": "FailoverStatusCode",
      "symbolId": "lib/web-distribution:FailoverStatusCode"
    },
    "@aws-cdk/aws-cloudfront.FileCodeOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options when reading the function's code from an external file.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst fileCodeOptions: cloudfront.FileCodeOptions = {\n  filePath: 'filePath',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.FileCodeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 38
      },
      "name": "FileCodeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path of the file to read the code from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 42
          },
          "name": "filePath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/function:FileCodeOptions"
    },
    "@aws-cdk/aws-cloudfront.Function": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::Function",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A CloudFront Function.",
        "example": "// Add a cloudfront Function to a Distribution\nconst cfFunction = new cloudfront.Function(this, 'Function', {\n  code: cloudfront.FunctionCode.fromInline('function handler(event) { return event.request }'),\n});\n\ndeclare const s3Bucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    functionAssociations: [{\n      function: cfFunction,\n      eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n    }],\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.Function",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/function.ts",
          "line": 159
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.FunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IFunction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 133
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a function by its name and ARN."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 136
          },
          "name": "fromFunctionAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.FunctionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IFunction"
            }
          },
          "static": true
        }
      ],
      "name": "Function",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "the ARN of the CloudFront function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 152
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-cloudfront.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "the name of the CloudFront function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 147
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-cloudfront.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "the deployment stage of the CloudFront function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 157
          },
          "name": "functionStage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/function:Function"
    },
    "@aws-cdk/aws-cloudfront.FunctionAssociation": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "The type of the {@link AddBehaviorOptions.functionAssociations} property.",
        "stability": "stable",
        "summary": "Represents a CloudFront function and event type when using CF Functions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\n\ndeclare const function_: cloudfront.Function;\nconst functionAssociation: cloudfront.FunctionAssociation = {\n  eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n  function: function_,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionAssociation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 207
      },
      "name": "FunctionAssociation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of event which should invoke the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 214
          },
          "name": "eventType",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.FunctionEventType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CloudFront function that will be invoked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 211
          },
          "name": "function",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IFunction"
          }
        }
      ],
      "symbolId": "lib/function:FunctionAssociation"
    },
    "@aws-cdk/aws-cloudfront.FunctionAttributes": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes of an existing CloudFront Function to import it.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst functionAttributes: cloudfront.FunctionAttributes = {\n  functionArn: 'functionArn',\n  functionName: 'functionName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 94
      },
      "name": "FunctionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 103
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 98
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/function:FunctionAttributes"
    },
    "@aws-cdk/aws-cloudfront.FunctionCode": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents the function's source code.",
        "example": "// Add a cloudfront Function to a Distribution\nconst cfFunction = new cloudfront.Function(this, 'Function', {\n  code: cloudfront.FunctionCode.fromInline('function handler(event) { return event.request }'),\n});\n\ndeclare const s3Bucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    functionAssociations: [{\n      function: cfFunction,\n      eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n    }],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionCode",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "returns": "code object with contents from file.",
            "stability": "stable",
            "summary": "Code from external file for function."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 25
          },
          "name": "fromFile",
          "parameters": [
            {
              "docs": {
                "summary": "the options for the external file."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.FileCodeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.FunctionCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "code object with inline code.",
            "stability": "stable",
            "summary": "Inline code for function."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 16
          },
          "name": "fromInline",
          "parameters": [
            {
              "docs": {
                "summary": "The actual function code."
              },
              "name": "code",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.FunctionCode"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "renders the function code."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 32
          },
          "name": "render",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "FunctionCode",
      "symbolId": "lib/function:FunctionCode"
    },
    "@aws-cdk/aws-cloudfront.FunctionEventType": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "The type of events that a CloudFront function can be invoked in response to.",
        "example": "// Add a cloudfront Function to a Distribution\nconst cfFunction = new cloudfront.Function(this, 'Function', {\n  code: cloudfront.FunctionCode.fromInline('function handler(event) { return event.request }'),\n});\n\ndeclare const s3Bucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    functionAssociations: [{\n      function: cfFunction,\n      eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n    }],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionEventType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 190
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The viewer-request specifies the incoming request."
          },
          "name": "VIEWER_REQUEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The viewer-response specifies the outgoing response."
          },
          "name": "VIEWER_RESPONSE"
        }
      ],
      "name": "FunctionEventType",
      "symbolId": "lib/function:FunctionEventType"
    },
    "@aws-cdk/aws-cloudfront.FunctionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a CloudFront Function.",
        "example": "// Add a cloudfront Function to a Distribution\nconst cfFunction = new cloudfront.Function(this, 'Function', {\n  code: cloudfront.FunctionCode.fromInline('function handler(event) { return event.request }'),\n});\n\ndeclare const s3Bucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    functionAssociations: [{\n      function: cfFunction,\n      eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n    }],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 109
      },
      "name": "FunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source code of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 125
          },
          "name": "code",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.FunctionCode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as `functionName`",
            "stability": "stable",
            "summary": "A comment to describe the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 120
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "stability": "stable",
            "summary": "A name to identify the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 114
          },
          "name": "functionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/function:FunctionProps"
    },
    "@aws-cdk/aws-cloudfront.GeoRestriction": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Controls the countries in which content is distributed.",
        "example": "// Adding restrictions to a Cloudfront Web Distribution.\ndeclare const sourceBucket: s3.Bucket;\nnew cloudfront.CloudFrontWebDistribution(this, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors : [ {isDefaultBehavior: true}],\n    },\n  ],\n  geoRestriction: cloudfront.GeoRestriction.allowlist('US', 'GB'),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/geo-restriction.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow specific countries which you want CloudFront to distribute your content."
          },
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 13
          },
          "name": "allowlist",
          "parameters": [
            {
              "docs": {
                "remarks": "Include one element for each country.\nSee ISO 3166-1-alpha-2 code on the *International Organization for Standardization* website",
                "summary": "Two-letter, uppercase country code for a country that you want to allow."
              },
              "name": "locations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "deprecated": "use `denylist`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 40
          },
          "name": "blacklist",
          "parameters": [
            {
              "name": "locations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Deny specific countries which you don't want CloudFront to distribute your content."
          },
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 24
          },
          "name": "denylist",
          "parameters": [
            {
              "docs": {
                "remarks": "Include one element for each country.\nSee ISO 3166-1-alpha-2 code on the *International Organization for Standardization* website",
                "summary": "Two-letter, uppercase country code for a country that you want to deny."
              },
              "name": "locations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "deprecated": "use `allowlist`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 32
          },
          "name": "whitelist",
          "parameters": [
            {
              "name": "locations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
            }
          },
          "static": true,
          "variadic": true
        }
      ],
      "name": "GeoRestriction",
      "properties": [
        {
          "docs": {
            "remarks": "Include one element for each country.\nSee ISO 3166-1-alpha-2 code on the *International Organization for Standardization* website",
            "stability": "stable",
            "summary": "Two-letter, uppercase country code for a country that you want to allow/deny."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 67
          },
          "name": "locations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specifies the restriction type to impose."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 67
          },
          "name": "restrictionType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/geo-restriction:GeoRestriction"
    },
    "@aws-cdk/aws-cloudfront.HeadersFrameOption": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Enum representing possible values of the X-Frame-Options HTTP response header.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.HeadersFrameOption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 401
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The page can only be displayed in a frame on the same origin as the page itself."
          },
          "name": "DENY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The page can only be displayed in a frame on the specified origin."
          },
          "name": "SAMEORIGIN"
        }
      ],
      "name": "HeadersFrameOption",
      "symbolId": "lib/response-headers-policy:HeadersFrameOption"
    },
    "@aws-cdk/aws-cloudfront.HeadersReferrerPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Enum representing possible values of the Referrer-Policy HTTP response header.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.HeadersReferrerPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 416
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The referrer policy is not set."
          },
          "name": "NO_REFERRER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The referrer policy is no-referrer-when-downgrade."
          },
          "name": "NO_REFERRER_WHEN_DOWNGRADE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The referrer policy is origin."
          },
          "name": "ORIGIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The referrer policy is origin-when-cross-origin."
          },
          "name": "ORIGIN_WHEN_CROSS_ORIGIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The referrer policy is same-origin."
          },
          "name": "SAME_ORIGIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The referrer policy is strict-origin."
          },
          "name": "STRICT_ORIGIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The referrer policy is strict-origin-when-cross-origin."
          },
          "name": "STRICT_ORIGIN_WHEN_CROSS_ORIGIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The referrer policy is unsafe-url."
          },
          "name": "UNSAFE_URL"
        }
      ],
      "name": "HeadersReferrerPolicy",
      "symbolId": "lib/response-headers-policy:HeadersReferrerPolicy"
    },
    "@aws-cdk/aws-cloudfront.HttpVersion": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Maximum HTTP version to support."
      },
      "fqn": "@aws-cdk/aws-cloudfront.HttpVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 489
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP 1.1."
          },
          "name": "HTTP1_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP 2."
          },
          "name": "HTTP2"
        }
      ],
      "name": "HttpVersion",
      "symbolId": "lib/distribution:HttpVersion"
    },
    "@aws-cdk/aws-cloudfront.ICachePolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Cache Policy."
      },
      "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 8
      },
      "name": "ICachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 13
          },
          "name": "cachePolicyId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cache-policy:ICachePolicy"
    },
    "@aws-cdk/aws-cloudfront.IDistribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Interface for CloudFront distributions."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IDistribution",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 24
      },
      "name": "IDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 38
          },
          "name": "distributionDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 45
          },
          "name": "distributionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "deprecated": "- Use `distributionDomainName` instead.",
            "stability": "deprecated",
            "summary": "The domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 31
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/distribution:IDistribution"
    },
    "@aws-cdk/aws-cloudfront.IFunction": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a CloudFront Function."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IFunction",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 77
      },
      "name": "IFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 88
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 82
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/function:IFunction"
    },
    "@aws-cdk/aws-cloudfront.IKeyGroup": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Key Group."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IKeyGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/key-group.ts",
        "line": 9
      },
      "name": "IKeyGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 14
          },
          "name": "keyGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/key-group:IKeyGroup"
    },
    "@aws-cdk/aws-cloudfront.IOrigin": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "remarks": "You provide one or more origins when creating a Distribution.",
        "stability": "stable",
        "summary": "Represents the concept of a CloudFront Origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IOrigin",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 45
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The method called when a given Origin is added (for the first time) to a Distribution."
          },
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 50
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginBindConfig"
            }
          }
        }
      ],
      "name": "IOrigin",
      "symbolId": "lib/origin:IOrigin"
    },
    "@aws-cdk/aws-cloudfront.IOriginAccessIdentity": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Interface for CloudFront OriginAccessIdentity."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-access-identity.ts",
        "line": 21
      },
      "name": "IOriginAccessIdentity",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Origin Access Identity Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 25
          },
          "name": "originAccessIdentityName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/origin-access-identity:IOriginAccessIdentity"
    },
    "@aws-cdk/aws-cloudfront.IOriginRequestPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Origin Request Policy."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 8
      },
      "name": "IOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 13
          },
          "name": "originRequestPolicyId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/origin-request-policy:IOriginRequestPolicy"
    },
    "@aws-cdk/aws-cloudfront.IPublicKey": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Public Key."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IPublicKey",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/public-key.ts",
        "line": 8
      },
      "name": "IPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 13
          },
          "name": "publicKeyId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/public-key:IPublicKey"
    },
    "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a response headers policy."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 8
      },
      "name": "IResponseHeadersPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 13
          },
          "name": "responseHeadersPolicyId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:IResponseHeadersPolicy"
    },
    "@aws-cdk/aws-cloudfront.KeyGroup": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::KeyGroup",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A Key Group configuration.",
        "example": "// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\ndeclare const publicKey: string;\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(this, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.KeyGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/key-group.ts",
          "line": 54
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.KeyGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IKeyGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key-group.ts",
        "line": 44
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Key Group from its id."
          },
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 47
          },
          "name": "fromKeyGroupId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "keyGroupId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IKeyGroup"
            }
          },
          "static": true
        }
      ],
      "name": "KeyGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 52
          },
          "name": "keyGroupId",
          "overrides": "@aws-cdk/aws-cloudfront.IKeyGroup",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/key-group:KeyGroup"
    },
    "@aws-cdk/aws-cloudfront.KeyGroupProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Public Key.",
        "example": "// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\ndeclare const publicKey: string;\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(this, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.KeyGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/key-group.ts",
        "line": 20
      },
      "name": "KeyGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A list of public keys to add to the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 36
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.IPublicKey"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 31
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "stability": "stable",
            "summary": "A name to identify the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 25
          },
          "name": "keyGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/key-group:KeyGroupProps"
    },
    "@aws-cdk/aws-cloudfront.LambdaEdgeEventType": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "The type of events that a Lambda@Edge function can be invoked in response to.",
        "example": "// A Lambda@Edge function added to default behavior of a Distribution\n// and triggered on every request\nconst myFunc = new cloudfront.experimental.EdgeFunction(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n\ndeclare const myBucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    edgeLambdas: [\n      {\n        functionVersion: myFunc.currentVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      }\n    ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.LambdaEdgeEventType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 634
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The origin-request specifies the request to the origin location (e.g. S3)."
          },
          "name": "ORIGIN_REQUEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The origin-response specifies the response from the origin location (e.g. S3)."
          },
          "name": "ORIGIN_RESPONSE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The viewer-request specifies the incoming request."
          },
          "name": "VIEWER_REQUEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The viewer-response specifies the outgoing response."
          },
          "name": "VIEWER_RESPONSE"
        }
      ],
      "name": "LambdaEdgeEventType",
      "symbolId": "lib/distribution:LambdaEdgeEventType"
    },
    "@aws-cdk/aws-cloudfront.LambdaFunctionAssociation": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const version: lambda.Version;\nconst lambdaFunctionAssociation: cloudfront.LambdaFunctionAssociation = {\n  eventType: cloudfront.LambdaEdgeEventType.ORIGIN_REQUEST,\n  lambdaFunction: version,\n\n  // the properties below are optional\n  includeBody: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.LambdaFunctionAssociation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 465
      },
      "name": "LambdaFunctionAssociation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The lambda event type defines at which event the lambda is called during the request lifecycle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 471
          },
          "name": "eventType",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.LambdaEdgeEventType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A version of the lambda to associate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 476
          },
          "name": "lambdaFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Only valid for \"request\" event types (`ORIGIN_REQUEST` or `VIEWER_REQUEST`).\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html",
            "stability": "stable",
            "summary": "Allows a Lambda function to have read access to the body content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 485
          },
          "name": "includeBody",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/web-distribution:LambdaFunctionAssociation"
    },
    "@aws-cdk/aws-cloudfront.LoggingConfiguration": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Logging configuration for incoming requests.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst loggingConfiguration: cloudfront.LoggingConfiguration = {\n  bucket: bucket,\n  includeCookies: false,\n  prefix: 'prefix',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.LoggingConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 95
      },
      "name": "LoggingConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A logging bucket is automatically created.",
            "stability": "stable",
            "summary": "Bucket to log requests to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 101
          },
          "name": "bucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to include the cookies in the logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 108
          },
          "name": "includeCookies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No prefix.",
            "stability": "stable",
            "summary": "Where in the bucket to store logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 115
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/web-distribution:LoggingConfiguration"
    },
    "@aws-cdk/aws-cloudfront.OriginAccessIdentity": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "An origin access identity is a special CloudFront user that you can associate with Amazon S3 origins, so that you can secure all or just some of your Amazon S3 content.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originAccessIdentity = new cloudfront.OriginAccessIdentity(this, 'MyOriginAccessIdentity', /* all optional props */ {\n  comment: 'comment',\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginAccessIdentity",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/origin-access-identity.ts",
          "line": 107
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginAccessIdentityProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IOriginAccessIdentity"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-access-identity.ts",
        "line": 61
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a OriginAccessIdentity by providing the OriginAccessIdentityName."
          },
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 65
          },
          "name": "fromOriginAccessIdentityName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "originAccessIdentityName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN to include in S3 bucket policy to allow CloudFront access."
          },
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 41
          },
          "name": "arn",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "OriginAccessIdentity",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 88
          },
          "name": "cloudFrontOriginAccessIdentityS3CanonicalUserId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Derived principal value for bucket access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 93
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Origin Access Identity Name (physical id)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 100
          },
          "name": "originAccessIdentityName",
          "overrides": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/origin-access-identity:OriginAccessIdentity"
    },
    "@aws-cdk/aws-cloudfront.OriginAccessIdentityProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of CloudFront OriginAccessIdentity.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originAccessIdentityProps: cloudfront.OriginAccessIdentityProps = {\n  comment: 'comment',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginAccessIdentityProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-access-identity.ts",
        "line": 9
      },
      "name": "OriginAccessIdentityProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "\"Allows CloudFront to reach the bucket\"",
            "stability": "stable",
            "summary": "Any comments you want to include about the origin access identity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 15
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/origin-access-identity:OriginAccessIdentityProps"
    },
    "@aws-cdk/aws-cloudfront.OriginBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a distribution origin, that describes the Amazon S3 bucket, HTTP server (for example, a web server), Amazon MediaStore, or other server from which CloudFront gets your files."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/origin.ts",
          "line": 125
        },
        "parameters": [
          {
            "name": "domainName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginProps"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IOrigin"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 117
      },
      "methods": [
        {
          "docs": {
            "remarks": "Can be used to grant permissions, create dependent resources, etc.",
            "stability": "stable",
            "summary": "Binds the origin to the associated Distribution."
          },
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 141
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cloudfront.IOrigin",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginBindConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 170
          },
          "name": "renderCustomOriginConfig",
          "protected": true,
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 165
          },
          "name": "renderS3OriginConfig",
          "protected": true,
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.S3OriginConfigProperty"
            }
          }
        }
      ],
      "name": "OriginBase",
      "symbolId": "lib/origin:OriginBase"
    },
    "@aws-cdk/aws-cloudfront.OriginBindConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The struct returned from {@link IOrigin.bind}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\n\ndeclare const origin: cloudfront.IOrigin;\nconst originBindConfig: cloudfront.OriginBindConfig = {\n  failoverConfig: {\n    failoverOrigin: origin,\n\n    // the properties below are optional\n    statusCodes: [123],\n  },\n  originProperty: {\n    domainName: 'domainName',\n    id: 'id',\n\n    // the properties below are optional\n    connectionAttempts: 123,\n    connectionTimeout: 123,\n    customOriginConfig: {\n      originProtocolPolicy: 'originProtocolPolicy',\n\n      // the properties below are optional\n      httpPort: 123,\n      httpsPort: 123,\n      originKeepaliveTimeout: 123,\n      originReadTimeout: 123,\n      originSslProtocols: ['originSslProtocols'],\n    },\n    originAccessControlId: 'originAccessControlId',\n    originCustomHeaders: [{\n      headerName: 'headerName',\n      headerValue: 'headerValue',\n    }],\n    originPath: 'originPath',\n    originShield: {\n      enabled: false,\n      originShieldRegion: 'originShieldRegion',\n    },\n    s3OriginConfig: {\n      originAccessIdentity: 'originAccessIdentity',\n    },\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginBindConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 25
      },
      "name": "OriginBindConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- nothing is returned",
            "stability": "stable",
            "summary": "The failover configuration for this Origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 38
          },
          "name": "failoverConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginFailoverConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- nothing is returned",
            "stability": "stable",
            "summary": "The CloudFormation OriginProperty configuration for this Origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 31
          },
          "name": "originProperty",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginProperty"
          }
        }
      ],
      "symbolId": "lib/origin:OriginBindConfig"
    },
    "@aws-cdk/aws-cloudfront.OriginBindOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options passed to Origin.bind().",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst originBindOptions: cloudfront.OriginBindOptions = {\n  originId: 'originId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 105
      },
      "name": "OriginBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The identifier of this Origin, as assigned by the Distribution this Origin has been used added to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 110
          },
          "name": "originId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/origin:OriginBindOptions"
    },
    "@aws-cdk/aws-cloudfront.OriginFailoverConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The failover configuration used for Origin Groups, returned in {@link OriginBindConfig.failoverConfig}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\n\ndeclare const origin: cloudfront.IOrigin;\nconst originFailoverConfig: cloudfront.OriginFailoverConfig = {\n  failoverOrigin: origin,\n\n  // the properties below are optional\n  statusCodes: [123],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginFailoverConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 12
      },
      "name": "OriginFailoverConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The origin to use as the fallback origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 14
          },
          "name": "failoverOrigin",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOrigin"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 500, 502, 503 and 504",
            "stability": "stable",
            "summary": "The HTTP status codes of the response that trigger querying the failover Origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 21
          },
          "name": "statusCodes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/origin:OriginFailoverConfig"
    },
    "@aws-cdk/aws-cloudfront.OriginOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to define an Origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cdk from '@aws-cdk/core';\nconst originOptions: cloudfront.OriginOptions = {\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customHeaders: {\n    customHeadersKey: 'customHeaders',\n  },\n  originShieldRegion: 'originShieldRegion',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 56
      },
      "name": "OriginOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "valid values are 1, 2, or 3 attempts.",
            "stability": "stable",
            "summary": "The number of times that CloudFront attempts to connect to the origin;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 70
          },
          "name": "connectionAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(10)",
            "remarks": "Valid values are 1-10 seconds, inclusive.",
            "stability": "stable",
            "summary": "The number of seconds that CloudFront waits when trying to establish a connection to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 63
          },
          "name": "connectionTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "stable",
            "summary": "A list of HTTP header names and values that CloudFront adds to requests it sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 77
          },
          "name": "customHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- origin shield not enabled",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html",
            "stability": "stable",
            "summary": "When you enable Origin Shield in the AWS Region that has the lowest latency to your origin, you can get better network performance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 86
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/origin:OriginOptions"
    },
    "@aws-cdk/aws-cloudfront.OriginProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to define an Origin.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cdk from '@aws-cdk/core';\nconst originProps: cloudfront.OriginProps = {\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customHeaders: {\n    customHeadersKey: 'customHeaders',\n  },\n  originPath: 'originPath',\n  originShieldRegion: 'originShieldRegion',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginProps",
      "interfaces": [
        "@aws-cdk/aws-cloudfront.OriginOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 92
      },
      "name": "OriginProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "'/'",
            "remarks": "Must begin, but not end, with '/' (e.g., '/production/images').",
            "stability": "stable",
            "summary": "An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 99
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/origin:OriginProps"
    },
    "@aws-cdk/aws-cloudfront.OriginProtocolPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Defines what protocols CloudFront will use to connect to an origin.",
        "example": "import * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const loadBalancer: elbv2.ApplicationLoadBalancer;\nconst origin = new origins.LoadBalancerV2Origin(loadBalancer, {\n  connectionAttempts: 3,\n  connectionTimeout: Duration.seconds(5),\n  readTimeout: Duration.seconds(45),\n  keepaliveTimeout: Duration.seconds(45),\n  protocolPolicy: cloudfront.OriginProtocolPolicy.MATCH_VIEWER,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginProtocolPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 524
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Connect on HTTP only."
          },
          "name": "HTTP_ONLY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Connect with the same protocol as the viewer."
          },
          "name": "MATCH_VIEWER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Connect on HTTPS only."
          },
          "name": "HTTPS_ONLY"
        }
      ],
      "name": "OriginProtocolPolicy",
      "symbolId": "lib/distribution:OriginProtocolPolicy"
    },
    "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any cookies in viewer requests (and if so, which cookies) are included in requests that CloudFront sends to the origin.",
        "example": "// Creating a custom origin request policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myOriginRequestPolicy = new cloudfront.OriginRequestPolicy(this, 'OriginRequestPolicy', {\n  originRequestPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  cookieBehavior: cloudfront.OriginRequestCookieBehavior.none(),\n  headerBehavior: cloudfront.OriginRequestHeaderBehavior.all('CloudFront-Is-Android-Viewer'),\n  queryStringBehavior: cloudfront.OriginRequestQueryStringBehavior.allowList('username'),\n});\n\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    originRequestPolicy: myOriginRequestPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 127
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All cookies in viewer requests are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 135
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only the provided `cookies` are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 138
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "cookies",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Any cookies that are listed in a CachePolicy are still included in origin requests.",
            "stability": "stable",
            "summary": "Cookies in viewer requests are not included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 132
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "OriginRequestCookieBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of cookies: allow all, none or an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 146
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The cookies to allow, if the behavior is an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 148
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/origin-request-policy:OriginRequestCookieBehavior"
    },
    "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any HTTP headers (and if so, which headers) are included in requests that CloudFront sends to the origin.",
        "example": "// Creating a custom origin request policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myOriginRequestPolicy = new cloudfront.OriginRequestPolicy(this, 'OriginRequestPolicy', {\n  originRequestPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  cookieBehavior: cloudfront.OriginRequestCookieBehavior.none(),\n  headerBehavior: cloudfront.OriginRequestHeaderBehavior.all('CloudFront-Is-Android-Viewer'),\n  queryStringBehavior: cloudfront.OriginRequestQueryStringBehavior.allowList('username'),\n});\n\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    originRequestPolicy: myOriginRequestPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 159
      },
      "methods": [
        {
          "docs": {
            "remarks": "Additionally, any additional CloudFront headers provided are included; the additional headers are added by CloudFront.",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-cloudfront-headers.html",
            "stability": "stable",
            "summary": "All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 171
          },
          "name": "all",
          "parameters": [
            {
              "name": "cloudfrontHeaders",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Listed headers are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 183
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "headers",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Any headers that are listed in a CachePolicy are still included in origin requests.",
            "stability": "stable",
            "summary": "HTTP headers are not included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 164
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "OriginRequestHeaderBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of headers: allow all, none or an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 194
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The headers for the allow list or the included CloudFront headers, if applicable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 196
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/origin-request-policy:OriginRequestHeaderBehavior"
    },
    "@aws-cdk/aws-cloudfront.OriginRequestPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::OriginRequestPolicy",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A Origin Request Policy configuration.",
        "example": "// Using an existing origin request policy for a Distribution\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    originRequestPolicy: cloudfront.OriginRequestPolicy.CORS_S3_ORIGIN,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/origin-request-policy.ts",
          "line": 86
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 57
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Origin Request Policy from its id."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 71
          },
          "name": "fromOriginRequestPolicyId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "originRequestPolicyId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
            }
          },
          "static": true
        }
      ],
      "name": "OriginRequestPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy includes all values (query strings, headers, and cookies) in the viewer request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 66
          },
          "name": "ALL_VIEWER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy includes the header that enables cross-origin resource sharing (CORS) requests when the origin is a custom origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 62
          },
          "name": "CORS_CUSTOM_ORIGIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy includes the headers that enable cross-origin resource sharing (CORS) requests when the origin is an Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 64
          },
          "name": "CORS_S3_ORIGIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy is designed for use with an origin that is an AWS Elemental MediaTailor endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 68
          },
          "name": "ELEMENTAL_MEDIA_TAILOR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "It doesn’t include any query strings or cookies.",
            "stability": "stable",
            "summary": "This policy includes only the User-Agent and Referer headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 60
          },
          "name": "USER_AGENT_REFERER_HEADERS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 84
          },
          "name": "originRequestPolicyId",
          "overrides": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/origin-request-policy:OriginRequestPolicy"
    },
    "@aws-cdk/aws-cloudfront.OriginRequestPolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Origin Request Policy.",
        "example": "// Creating a custom origin request policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myOriginRequestPolicy = new cloudfront.OriginRequestPolicy(this, 'OriginRequestPolicy', {\n  originRequestPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  cookieBehavior: cloudfront.OriginRequestCookieBehavior.none(),\n  headerBehavior: cloudfront.OriginRequestHeaderBehavior.all('CloudFront-Is-Android-Viewer'),\n  queryStringBehavior: cloudfront.OriginRequestQueryStringBehavior.allowList('username'),\n});\n\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    originRequestPolicy: myOriginRequestPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 19
      },
      "name": "OriginRequestPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 31
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginRequestCookieBehavior.none()",
            "stability": "stable",
            "summary": "The cookies from viewer requests to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 37
          },
          "name": "cookieBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginRequestHeaderBehavior.none()",
            "remarks": "These can include headers from viewer requests and additional headers added by CloudFront.",
            "stability": "stable",
            "summary": "The HTTP headers to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 43
          },
          "name": "headerBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "remarks": "The name must only include '-', '_', or alphanumeric characters.",
            "stability": "stable",
            "summary": "A unique name to identify the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 25
          },
          "name": "originRequestPolicyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginRequestQueryStringBehavior.none()",
            "stability": "stable",
            "summary": "The URL query strings from viewer requests to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 49
          },
          "name": "queryStringBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior"
          }
        }
      ],
      "symbolId": "lib/origin-request-policy:OriginRequestPolicyProps"
    },
    "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any URL query strings in viewer requests (and if so, which query strings) are included in requests that CloudFront sends to the origin.",
        "example": "// Creating a custom origin request policy for a Distribution -- all parameters optional\ndeclare const bucketOrigin: origins.S3Origin;\nconst myOriginRequestPolicy = new cloudfront.OriginRequestPolicy(this, 'OriginRequestPolicy', {\n  originRequestPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  cookieBehavior: cloudfront.OriginRequestCookieBehavior.none(),\n  headerBehavior: cloudfront.OriginRequestHeaderBehavior.all('CloudFront-Is-Android-Viewer'),\n  queryStringBehavior: cloudfront.OriginRequestQueryStringBehavior.allowList('username'),\n});\n\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    originRequestPolicy: myOriginRequestPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 208
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All query strings in viewer requests are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 216
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only the provided `queryStrings` are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 219
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "queryStrings",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Any query strings that are listed in a CachePolicy are still included in origin requests.",
            "stability": "stable",
            "summary": "Query strings in viewer requests are not included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 213
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "OriginRequestQueryStringBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of query strings -- allow all, none, or only an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 227
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The query strings to allow, if the behavior is an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 229
          },
          "name": "queryStrings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/origin-request-policy:OriginRequestQueryStringBehavior"
    },
    "@aws-cdk/aws-cloudfront.OriginSslPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginSslPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 290
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SSL_V3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2"
        }
      ],
      "name": "OriginSslPolicy",
      "symbolId": "lib/web-distribution:OriginSslPolicy"
    },
    "@aws-cdk/aws-cloudfront.PriceClass": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "remarks": "See https://aws.amazon.com/cloudfront/pricing/ for full list of supported regions.",
        "stability": "stable",
        "summary": "The price class determines how many edge locations CloudFront will use for your distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.PriceClass",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 500
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "USA, Canada, Europe, & Israel."
          },
          "name": "PRICE_CLASS_100"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PRICE_CLASS_100 + South Africa, Kenya, Middle East, Japan, Singapore, South Korea, Taiwan, Hong Kong, & Philippines."
          },
          "name": "PRICE_CLASS_200"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All locations."
          },
          "name": "PRICE_CLASS_ALL"
        }
      ],
      "name": "PriceClass",
      "symbolId": "lib/distribution:PriceClass"
    },
    "@aws-cdk/aws-cloudfront.PublicKey": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::PublicKey",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A Public Key Configuration.",
        "example": "// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\ndeclare const publicKey: string;\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(this, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.PublicKey",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/public-key.ts",
          "line": 57
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.PublicKeyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IPublicKey"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/public-key.ts",
        "line": 46
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Public Key from its id."
          },
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 49
          },
          "name": "fromPublicKeyId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "publicKeyId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IPublicKey"
            }
          },
          "static": true
        }
      ],
      "name": "PublicKey",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 55
          },
          "name": "publicKeyId",
          "overrides": "@aws-cdk/aws-cloudfront.IPublicKey",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/public-key:PublicKey"
    },
    "@aws-cdk/aws-cloudfront.PublicKeyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Public Key.",
        "example": "// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\ndeclare const publicKey: string;\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(this, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.PublicKeyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/public-key.ts",
        "line": 19
      },
      "name": "PublicKeyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The `encodedKey` parameter must include `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----` lines.",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html",
            "stability": "stable",
            "summary": "The public key that you can use with signed URLs and signed cookies, or with field-level encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 38
          },
          "name": "encodedKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the public key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 30
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "stability": "stable",
            "summary": "A name to identify the public key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 24
          },
          "name": "publicKeyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/public-key:PublicKeyProps"
    },
    "@aws-cdk/aws-cloudfront.ResponseCustomHeader": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "CloudFront includes this header in HTTP responses that it sends for requests that match a cache behavior that’s associated with this response headers policy.",
        "stability": "stable",
        "summary": "An HTTP response header name and its value.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nconst responseCustomHeader: cloudfront.ResponseCustomHeader = {\n  header: 'header',\n  override: false,\n  value: 'value',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseCustomHeader",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 209
      },
      "name": "ResponseCustomHeader",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The HTTP response header name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 213
          },
          "name": "header",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront overrides a response header with the same name received from the origin with the header specified here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 219
          },
          "name": "override",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value for the HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 224
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseCustomHeader"
    },
    "@aws-cdk/aws-cloudfront.ResponseCustomHeadersBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for a set of HTTP response headers that are sent for requests that match a cache behavior that’s associated with this response headers policy.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseCustomHeadersBehavior",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 198
      },
      "name": "ResponseCustomHeadersBehavior",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The list of HTTP response headers and their values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 202
          },
          "name": "customHeaders",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.ResponseCustomHeader"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseCustomHeadersBehavior"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersContentSecurityPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersContentSecurityPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 279
      },
      "name": "ResponseHeadersContentSecurityPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 283
          },
          "name": "contentSecurityPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront overrides the Content-Security-Policy HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 289
          },
          "name": "override",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersContentSecurityPolicy"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersContentTypeOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersContentTypeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 295
      },
      "name": "ResponseHeadersContentTypeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront overrides the X-Content-Type-Options HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 300
          },
          "name": "override",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersContentTypeOptions"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersCorsBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "CloudFront adds these headers to HTTP responses that it sends for CORS requests that match a cache behavior\nassociated with this response headers policy.",
        "stability": "stable",
        "summary": "Configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS).",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersCorsBehavior",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 150
      },
      "name": "ResponseHeadersCorsBehavior",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that CloudFront uses as the value for the Access-Control-Allow-Credentials HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 154
          },
          "name": "accessControlAllowCredentials",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can specify `['*']` to allow all headers.",
            "stability": "stable",
            "summary": "A list of HTTP header names that CloudFront includes as values for the Access-Control-Allow-Headers HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 160
          },
          "name": "accessControlAllowHeaders",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A list of HTTP methods that CloudFront includes as values for the Access-Control-Allow-Methods HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 165
          },
          "name": "accessControlAllowMethods",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can specify `['*']` to allow all origins.",
            "stability": "stable",
            "summary": "A list of origins (domain names) that CloudFront can use as the value for the Access-Control-Allow-Origin HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 171
          },
          "name": "accessControlAllowOrigins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront overrides HTTP response headers received from the origin with the ones specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 191
          },
          "name": "originOverride",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no headers exposed",
            "remarks": "You can specify `['*']` to expose all headers.",
            "stability": "stable",
            "summary": "A list of HTTP headers that CloudFront includes as values for the Access-Control-Expose-Headers HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 179
          },
          "name": "accessControlExposeHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no max age",
            "stability": "stable",
            "summary": "A number that CloudFront uses as the value for the Access-Control-Max-Age HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 186
          },
          "name": "accessControlMaxAge",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersCorsBehavior"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersFrameOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersFrameOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 306
      },
      "name": "ResponseHeadersFrameOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value of the X-Frame-Options HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 310
          },
          "name": "frameOption",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.HeadersFrameOption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront overrides the X-Frame-Options HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 316
          },
          "name": "override",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersFrameOptions"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::ResponseHeadersPolicy",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A Response Headers Policy configuration.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/response-headers-policy.ts",
          "line": 92
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 61
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing Response Headers Policy from its ID."
          },
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 77
          },
          "name": "fromResponseHeadersPolicyId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "responseHeadersPolicyId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy"
            }
          },
          "static": true
        }
      ],
      "name": "ResponseHeadersPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Use this managed policy to allow simple CORS requests from any origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 64
          },
          "name": "CORS_ALLOW_ALL_ORIGINS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Use this managed policy to allow simple CORS requests from any origin and add a set of security headers to all responses that CloudFront sends to viewers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 70
          },
          "name": "CORS_ALLOW_ALL_ORIGINS_AND_SECURITY_HEADERS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Use this managed policy to allow CORS requests from any origin, including preflight requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 66
          },
          "name": "CORS_ALLOW_ALL_ORIGINS_WITH_PREFLIGHT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Use this managed policy to allow CORS requests from any origin, including preflight requests, and add a set of security headers to all responses that CloudFront sends to viewers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 72
          },
          "name": "CORS_ALLOW_ALL_ORIGINS_WITH_PREFLIGHT_AND_SECURITY_HEADERS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Use this managed policy to add a set of security headers to all responses that CloudFront sends to viewers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 68
          },
          "name": "SECURITY_HEADERS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 90
          },
          "name": "responseHeadersPolicyId",
          "overrides": "@aws-cdk/aws-cloudfront.IResponseHeadersPolicy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersPolicy"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersPolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Response Headers Policy.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 19
      },
      "name": "ResponseHeadersPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 32
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no cors behavior",
            "stability": "stable",
            "summary": "A configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 39
          },
          "name": "corsBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersCorsBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no custom headers behavior",
            "stability": "stable",
            "summary": "A configuration for a set of custom HTTP response headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 46
          },
          "name": "customHeadersBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseCustomHeadersBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "stability": "stable",
            "summary": "A unique name to identify the response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 25
          },
          "name": "responseHeadersPolicyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no security headers behavior",
            "stability": "stable",
            "summary": "A configuration for a set of security-related HTTP response headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 53
          },
          "name": "securityHeadersBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseSecurityHeadersBehavior"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersPolicyProps"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersReferrerPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Determines whether CloudFront includes the Referrer-Policy HTTP response header and the header’s value.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersReferrerPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 322
      },
      "name": "ResponseHeadersReferrerPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront overrides the Referrer-Policy HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 332
          },
          "name": "override",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value of the Referrer-Policy HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 326
          },
          "name": "referrerPolicy",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.HeadersReferrerPolicy"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersReferrerPolicy"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersStrictTransportSecurity": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Determines whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersStrictTransportSecurity",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 338
      },
      "name": "ResponseHeadersStrictTransportSecurity",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 342
          },
          "name": "accessControlMaxAge",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront overrides the Strict-Transport-Security HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 355
          },
          "name": "override",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 349
          },
          "name": "includeSubdomains",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 362
          },
          "name": "preload",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersStrictTransportSecurity"
    },
    "@aws-cdk/aws-cloudfront.ResponseHeadersXSSProtection": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Determines whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersXSSProtection",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 368
      },
      "name": "ResponseHeadersXSSProtection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 380
          },
          "name": "override",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When this setting is true, the value of the X-XSS-Protection header is 1.\nWhen this setting is false, the value of the X-XSS-Protection header is 0.",
            "stability": "stable",
            "summary": "A Boolean that determines the value of the X-XSS-Protection HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 387
          },
          "name": "protection",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "A Boolean that determines whether CloudFront includes the mode=block directive in the X-XSS-Protection header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 374
          },
          "name": "modeBlock",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no report uri",
            "remarks": "You cannot specify a ReportUri when ModeBlock is true.",
            "stability": "stable",
            "summary": "A reporting URI, which CloudFront uses as the value of the report directive in the X-XSS-Protection header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 395
          },
          "name": "reportUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseHeadersXSSProtection"
    },
    "@aws-cdk/aws-cloudfront.ResponseSecurityHeadersBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "CloudFront adds these headers to HTTP responses that it sends for requests that match a cache behavior\nassociated with this response headers policy.",
        "stability": "stable",
        "summary": "Configuration for a set of security-related HTTP response headers.",
        "example": "// Using an existing managed response headers policy\ndeclare const bucketOrigin: origins.S3Origin;\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: cloudfront.ResponseHeadersPolicy.CORS_ALLOW_ALL_ORIGINS,\n  },\n});\n\n// Creating a custom response headers policy -- all parameters optional\nconst myResponseHeadersPolicy = new cloudfront.ResponseHeadersPolicy(this, 'ResponseHeadersPolicy', {\n  responseHeadersPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  corsBehavior: {\n    accessControlAllowCredentials: false,\n    accessControlAllowHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlAllowMethods: ['GET', 'POST'],\n    accessControlAllowOrigins: ['*'],\n    accessControlExposeHeaders: ['X-Custom-Header-1', 'X-Custom-Header-2'],\n    accessControlMaxAge: Duration.seconds(600),\n    originOverride: true,\n  },\n  customHeadersBehavior: {\n    customHeaders: [\n      { header: 'X-Amz-Date', value: 'some-value', override: true },\n      { header: 'X-Amz-Security-Token', value: 'some-value', override: false },\n    ],\n  },\n  securityHeadersBehavior: {\n    contentSecurityPolicy: { contentSecurityPolicy: 'default-src https:;', override: true },\n    contentTypeOptions: { override: true },\n    frameOptions: { frameOption: cloudfront.HeadersFrameOption.DENY, override: true },\n    referrerPolicy: { referrerPolicy: cloudfront.HeadersReferrerPolicy.NO_REFERRER, override: true },\n    strictTransportSecurity: { accessControlMaxAge: Duration.seconds(600), includeSubdomains: true, override: true },\n    xssProtection: { protection: true, modeBlock: true, reportUri: 'https://example.com/csp-report', override: true },\n  },\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    responseHeadersPolicy: myResponseHeadersPolicy,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ResponseSecurityHeadersBehavior",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/response-headers-policy.ts",
        "line": 232
      },
      "name": "ResponseSecurityHeadersBehavior",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no content security policy",
            "stability": "stable",
            "summary": "The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 238
          },
          "name": "contentSecurityPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersContentSecurityPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no content type options",
            "stability": "stable",
            "summary": "Determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 245
          },
          "name": "contentTypeOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersContentTypeOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no frame options",
            "stability": "stable",
            "summary": "Determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 252
          },
          "name": "frameOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersFrameOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no referrer policy",
            "stability": "stable",
            "summary": "Determines whether CloudFront includes the Referrer-Policy HTTP response header and the header’s value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 259
          },
          "name": "referrerPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersReferrerPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no strict transport security",
            "stability": "stable",
            "summary": "Determines whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 266
          },
          "name": "strictTransportSecurity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersStrictTransportSecurity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no xss protection",
            "stability": "stable",
            "summary": "Determines whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/response-headers-policy.ts",
            "line": 273
          },
          "name": "xssProtection",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ResponseHeadersXSSProtection"
          }
        }
      ],
      "symbolId": "lib/response-headers-policy:ResponseSecurityHeadersBehavior"
    },
    "@aws-cdk/aws-cloudfront.S3OriginConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "S3 origin configuration for CloudFront.",
        "example": "declare const sourceBucket: s3.Bucket;\nconst viewerCertificate = cloudfront.ViewerCertificate.fromIamCertificate('MYIAMROLEIDENTIFIER', {\n  aliases: ['MYALIAS'],\n});\n\nnew cloudfront.CloudFrontWebDistribution(this, 'MyCfWebDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors : [ {isDefaultBehavior: true} ],\n    },\n  ],\n  viewerCertificate: viewerCertificate,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.S3OriginConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 300
      },
      "name": "S3OriginConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source bucket to serve content from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 304
          },
          "name": "s3BucketSource",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No Origin Access Identity which requires the S3 bucket to be public accessible",
            "stability": "stable",
            "summary": "The optional Origin Access Identity of the origin identity cloudfront will use when calling your s3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 311
          },
          "name": "originAccessIdentity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional headers are passed.",
            "stability": "stable",
            "summary": "Any additional headers to pass to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 325
          },
          "name": "originHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "stability": "stable",
            "summary": "The relative path to the origin root to use for sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 318
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- origin shield not enabled",
            "stability": "stable",
            "summary": "When you enable Origin Shield in the AWS Region that has the lowest latency to your origin, you can get better network performance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 332
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/web-distribution:S3OriginConfig"
    },
    "@aws-cdk/aws-cloudfront.SSLMethod": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "remarks": "Server Name Indication (SNI) - is an extension to the TLS computer networking protocol by which a client indicates\n  which hostname it is attempting to connect to at the start of the handshaking process. This allows a server to present\n  multiple certificates on the same IP address and TCP port number and hence allows multiple secure (HTTPS) websites\n(or any other service over TLS) to be served by the same IP address without requiring all those sites to use the same certificate.\n\nCloudFront can use SNI to host multiple distributions on the same IP - which a large majority of clients will support.\n\nIf your clients cannot support SNI however - CloudFront can use dedicated IPs for your distribution - but there is a prorated monthly charge for\nusing this feature. By default, we use SNI - but you can optionally enable dedicated IPs (VIP).\n\nSee the CloudFront SSL for more details about pricing : https://aws.amazon.com/cloudfront/custom-ssl-domains/",
        "stability": "stable",
        "summary": "The SSL method CloudFront will use for your distribution.",
        "example": "    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromIamCertificate(\n        'certificateId',\n        {\n          aliases: ['example.com'],\n          securityPolicy: cloudfront.SecurityPolicyProtocol.SSL_V3, // default\n          sslMethod: cloudfront.SSLMethod.SNI, // default\n        },\n      ),\n    });",
        "custom": {
          "exampleMetadata": "lit=test/example.iam-cert-alias.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.SSLMethod",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 549
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VIP"
        }
      ],
      "name": "SSLMethod",
      "symbolId": "lib/distribution:SSLMethod"
    },
    "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "remarks": "CloudFront serves your objects only to browsers or devices that support at least the SSL version that you specify.",
        "stability": "stable",
        "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections.",
        "example": "    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromIamCertificate(\n        'certificateId',\n        {\n          aliases: ['example.com'],\n          securityPolicy: cloudfront.SecurityPolicyProtocol.SSL_V3, // default\n          sslMethod: cloudfront.SSLMethod.SNI, // default\n        },\n      ),\n    });",
        "custom": {
          "exampleMetadata": "lit=test/example.iam-cert-alias.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 558
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SSL_V3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2016"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_1_2016"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2_2018"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2_2019"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2_2021"
        }
      ],
      "name": "SecurityPolicyProtocol",
      "symbolId": "lib/distribution:SecurityPolicyProtocol"
    },
    "@aws-cdk/aws-cloudfront.SourceConfiguration": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "An origin is what CloudFront will \"be in front of\" - that is, CloudFront will pull it's assets from an origin.\n\nIf you're using s3 as a source - pass the `s3Origin` property, otherwise, pass the `customOriginSource` property.\n\nOne or the other must be passed, and it is invalid to pass both in the same SourceConfiguration.",
        "stability": "stable",
        "summary": "A source configuration is a wrapper for CloudFront origins and behaviors.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\ndeclare const function_: cloudfront.Function;\ndeclare const keyGroup: cloudfront.KeyGroup;\ndeclare const originAccessIdentity: cloudfront.OriginAccessIdentity;\ndeclare const version: lambda.Version;\nconst sourceConfiguration: cloudfront.SourceConfiguration = {\n  behaviors: [{\n    allowedMethods: cloudfront.CloudFrontAllowedMethods.GET_HEAD,\n    cachedMethods: cloudfront.CloudFrontAllowedCachedMethods.GET_HEAD,\n    compress: false,\n    defaultTtl: cdk.Duration.minutes(30),\n    forwardedValues: {\n      queryString: false,\n\n      // the properties below are optional\n      cookies: {\n        forward: 'forward',\n\n        // the properties below are optional\n        whitelistedNames: ['whitelistedNames'],\n      },\n      headers: ['headers'],\n      queryStringCacheKeys: ['queryStringCacheKeys'],\n    },\n    functionAssociations: [{\n      eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n      function: function_,\n    }],\n    isDefaultBehavior: false,\n    lambdaFunctionAssociations: [{\n      eventType: cloudfront.LambdaEdgeEventType.ORIGIN_REQUEST,\n      lambdaFunction: version,\n\n      // the properties below are optional\n      includeBody: false,\n    }],\n    maxTtl: cdk.Duration.minutes(30),\n    minTtl: cdk.Duration.minutes(30),\n    pathPattern: 'pathPattern',\n    trustedKeyGroups: [keyGroup],\n    trustedSigners: ['trustedSigners'],\n    viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.HTTPS_ONLY,\n  }],\n\n  // the properties below are optional\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customOriginSource: {\n    domainName: 'domainName',\n\n    // the properties below are optional\n    allowedOriginSSLVersions: [cloudfront.OriginSslPolicy.SSL_V3],\n    httpPort: 123,\n    httpsPort: 123,\n    originHeaders: {\n      originHeadersKey: 'originHeaders',\n    },\n    originKeepaliveTimeout: cdk.Duration.minutes(30),\n    originPath: 'originPath',\n    originProtocolPolicy: cloudfront.OriginProtocolPolicy.HTTP_ONLY,\n    originReadTimeout: cdk.Duration.minutes(30),\n    originShieldRegion: 'originShieldRegion',\n  },\n  failoverCriteriaStatusCodes: [cloudfront.FailoverStatusCode.FORBIDDEN],\n  failoverCustomOriginSource: {\n    domainName: 'domainName',\n\n    // the properties below are optional\n    allowedOriginSSLVersions: [cloudfront.OriginSslPolicy.SSL_V3],\n    httpPort: 123,\n    httpsPort: 123,\n    originHeaders: {\n      originHeadersKey: 'originHeaders',\n    },\n    originKeepaliveTimeout: cdk.Duration.minutes(30),\n    originPath: 'originPath',\n    originProtocolPolicy: cloudfront.OriginProtocolPolicy.HTTP_ONLY,\n    originReadTimeout: cdk.Duration.minutes(30),\n    originShieldRegion: 'originShieldRegion',\n  },\n  failoverS3OriginSource: {\n    s3BucketSource: bucket,\n\n    // the properties below are optional\n    originAccessIdentity: originAccessIdentity,\n    originHeaders: {\n      originHeadersKey: 'originHeaders',\n    },\n    originPath: 'originPath',\n    originShieldRegion: 'originShieldRegion',\n  },\n  originHeaders: {\n    originHeadersKey: 'originHeaders',\n  },\n  originPath: 'originPath',\n  originShieldRegion: 'originShieldRegion',\n  s3OriginSource: {\n    s3BucketSource: bucket,\n\n    // the properties below are optional\n    originAccessIdentity: originAccessIdentity,\n    originHeaders: {\n      originHeadersKey: 'originHeaders',\n    },\n    originPath: 'originPath',\n    originShieldRegion: 'originShieldRegion',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.SourceConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 137
      },
      "name": "SourceConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "At least one (default) behavior must be included.",
            "stability": "stable",
            "summary": "The behaviors associated with this source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 189
          },
          "name": "behaviors",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.Behavior"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "You can specify 1, 2, or 3 as the number of attempts.",
            "stability": "stable",
            "summary": "The number of times that CloudFront attempts to connect to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 144
          },
          "name": "connectionAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "cdk.Duration.seconds(10)",
            "remarks": "You can specify a number of seconds between 1 and 10 (inclusive).",
            "stability": "stable",
            "summary": "The number of seconds that CloudFront waits when trying to establish a connection to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 152
          },
          "name": "connectionTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A custom origin source - for all non-s3 sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 162
          },
          "name": "customOriginSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CustomOriginConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[500, 502, 503, 504]",
            "stability": "stable",
            "summary": "HTTP status code to failover to second origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 183
          },
          "name": "failoverCriteriaStatusCodes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.FailoverStatusCode"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no failover configuration",
            "stability": "stable",
            "summary": "A custom origin source for failover in case the s3OriginSource returns invalid status code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 176
          },
          "name": "failoverCustomOriginSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CustomOriginConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no failover configuration",
            "stability": "stable",
            "summary": "An s3 origin source for failover in case the s3OriginSource returns invalid status code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 169
          },
          "name": "failoverS3OriginSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.S3OriginConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional headers are passed.",
            "deprecated": "Use originHeaders on s3OriginSource or customOriginSource",
            "stability": "deprecated",
            "summary": "Any additional headers to pass to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 205
          },
          "name": "originHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "deprecated": "Use originPath on s3OriginSource or customOriginSource",
            "stability": "deprecated",
            "summary": "The relative path to the origin root to use for sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 197
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- origin shield not enabled",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html",
            "stability": "stable",
            "summary": "When you enable Origin Shield in the AWS Region that has the lowest latency to your origin, you can get better network performance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 214
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "An s3 origin source - if you're using s3 for your assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 157
          },
          "name": "s3OriginSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.S3OriginConfig"
          }
        }
      ],
      "symbolId": "lib/web-distribution:SourceConfiguration"
    },
    "@aws-cdk/aws-cloudfront.ViewerCertificate": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Viewer certificate configuration class.",
        "example": "    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromIamCertificate(\n        'certificateId',\n        {\n          aliases: ['example.com'],\n          securityPolicy: cloudfront.SecurityPolicyProtocol.SSL_V3, // default\n          sslMethod: cloudfront.SSLMethod.SNI, // default\n        },\n      ),\n    });",
        "custom": {
          "exampleMetadata": "lit=test/example.iam-cert-alias.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 518
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate an AWS Certificate Manager (ACM) viewer certificate configuration."
          },
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 526
          },
          "name": "fromAcmCertificate",
          "parameters": [
            {
              "docs": {
                "remarks": "Your certificate must be located in the us-east-1 (US East (N. Virginia)) region to be accessed by CloudFront",
                "summary": "AWS Certificate Manager (ACM) certificate."
              },
              "name": "certificate",
              "type": {
                "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
              }
            },
            {
              "docs": {
                "summary": "certificate configuration options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificateOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate a viewer certifcate configuration using the CloudFront default certificate (e.g. d111111abcdef8.cloudfront.net) and a {@link SecurityPolicyProtocol.TLS_V1} security policy."
          },
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 564
          },
          "name": "fromCloudFrontDefaultCertificate",
          "parameters": [
            {
              "docs": {
                "summary": "Alternative CNAME aliases You also must create a CNAME record with your DNS service to route queries."
              },
              "name": "aliases",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate an IAM viewer certificate configuration."
          },
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 544
          },
          "name": "fromIamCertificate",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier of the IAM certificate."
              },
              "name": "iamCertificateId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "certificate configuration options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificateOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate"
            }
          },
          "static": true
        }
      ],
      "name": "ViewerCertificate",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 570
          },
          "name": "aliases",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 569
          },
          "name": "props",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ViewerCertificateProperty"
          }
        }
      ],
      "symbolId": "lib/web-distribution:ViewerCertificate"
    },
    "@aws-cdk/aws-cloudfront.ViewerCertificateOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromIamCertificate(\n        'certificateId',\n        {\n          aliases: ['example.com'],\n          securityPolicy: cloudfront.SecurityPolicyProtocol.SSL_V3, // default\n          sslMethod: cloudfront.SSLMethod.SNI, // default\n        },\n      ),\n    });",
        "custom": {
          "exampleMetadata": "lit=test/example.iam-cert-alias.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 488
      },
      "name": "ViewerCertificateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Domain names on the certificate (both main domain name and Subject Alternative names)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 512
          },
          "name": "aliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SSLv3 if sslMethod VIP, TLSv1 if sslMethod SNI",
            "remarks": "CloudFront serves your objects only to browsers or devices that support at\nleast the SSL version that you specify.",
            "stability": "stable",
            "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 507
          },
          "name": "securityPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SSLMethod.SNI",
            "remarks": "See the notes on SSLMethod if you wish to use other SSL termination types.",
            "see": "https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html",
            "stability": "stable",
            "summary": "How CloudFront should serve HTTPS requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 497
          },
          "name": "sslMethod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SSLMethod"
          }
        }
      ],
      "symbolId": "lib/web-distribution:ViewerCertificateOptions"
    },
    "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "How HTTPs should be handled with your distribution.",
        "example": "// Create a Distribution with configured HTTP methods and viewer protocol policy of the cache.\ndeclare const myBucket: s3.Bucket;\nconst myWebDistribution = new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    allowedMethods: cloudfront.AllowedMethods.ALLOW_ALL,\n    viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 512
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTPS only."
          },
          "name": "HTTPS_ONLY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Will redirect HTTP requests to HTTPS."
          },
          "name": "REDIRECT_TO_HTTPS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Both HTTP and HTTPS supported."
          },
          "name": "ALLOW_ALL"
        }
      ],
      "name": "ViewerProtocolPolicy",
      "symbolId": "lib/distribution:ViewerProtocolPolicy"
    },
    "@aws-cdk/aws-cloudfront.experimental.EdgeFunction": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Lambda::Function",
          "exampleMetadata": "infused"
        },
        "remarks": "Convenience resource for requesting a Lambda function in the 'us-east-1' region for use with Lambda@Edge.\nImplements several restrictions enforced by Lambda@Edge.\n\nNote that this construct requires that the 'us-east-1' region has been bootstrapped.\nSee https://docs.aws.amazon.com/cdk/latest/guide/bootstrapping.html or 'cdk bootstrap --help' for options.",
        "stability": "stable",
        "summary": "A Lambda@Edge function.",
        "example": "// A Lambda@Edge function added to default behavior of a Distribution\n// and triggered on every request\nconst myFunc = new cloudfront.experimental.EdgeFunction(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n\ndeclare const myBucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    edgeLambdas: [\n      {\n        functionVersion: myFunc.currentVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      }\n    ],\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-cloudfront.experimental.EdgeFunction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/experimental/edge-function.ts",
          "line": 54
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.experimental.EdgeFunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.IVersion"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/experimental/edge-function.ts",
        "line": 37
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an alias for this version."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 88
          },
          "name": "addAlias",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "parameters": [
            {
              "name": "aliasName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AliasOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Alias"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an event source to this function."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 137
          },
          "name": "addEventSource",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "source",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IEventSource"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an event source that maps to this AWS Lambda function."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 106
          },
          "name": "addEventSourceMapping",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventSourceMappingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.EventSourceMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a url to this lambda function."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 143
          },
          "name": "addFunctionUrl",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.FunctionUrlOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.FunctionUrl"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a permission to the Lambda resource policy."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 109
          },
          "name": "addPermission",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Permission"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role assumed by the instance."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 112
          },
          "name": "addToRolePolicy",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Configures options for asynchronous invocation."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 140
          },
          "name": "configureAsyncInvoke",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 115
          },
          "name": "grantInvoke",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda Function URL."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 118
          },
          "name": "grantInvokeUrl",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this Lambda Return the given named metric for this Function."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 121
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Average over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the Duration of this Lambda How long execution of this Lambda takes."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 124
          },
          "name": "metricDuration",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "How many invocations of this Lambda fail."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 127
          },
          "name": "metricErrors",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of invocations of this Lambda How often this Lambda is invoked."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 130
          },
          "name": "metricInvocations",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of throttled invocations of this Lambda How often this Lambda is throttled."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 133
          },
          "name": "metricThrottles",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "EdgeFunction",
      "namespace": "experimental",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The system architectures compatible with this lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 49
          },
          "name": "architecture",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Architecture"
          }
        },
        {
          "docs": {
            "remarks": "Connections are only applicable to VPC-enabled functions.",
            "stability": "stable",
            "summary": "Not supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 99
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Convenience method to make `EdgeFunction` conform to the same interface as `Function`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 84
          },
          "name": "currentVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the version for Lambda@Edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 41
          },
          "name": "edgeArn",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 43
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 42
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 44
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "remarks": "If this is is `false`, trying to access the `connections` object will fail.",
            "stability": "stable",
            "summary": "Whether or not this Lambda function was bound to a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 45
          },
          "name": "isBoundToVpc",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The underlying AWS Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 77
          },
          "name": "lambda",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "docs": {
            "remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
            "stability": "stable",
            "summary": "The `$LATEST` version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 102
          },
          "name": "latestVersion",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The construct node where permissions are attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 46
          },
          "name": "permissionsNode",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/core.ConstructNode"
          }
        },
        {
          "docs": {
            "remarks": "This property is for cdk modules to consume only. You should not need to use this property.\nInstead, use grantInvoke() directly.",
            "stability": "stable",
            "summary": "The ARN(s) to put into the resource field of the generated IAM policy for grantInvoke()."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 50
          },
          "name": "resourceArnsForGrantInvoke",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The most recently deployed version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 48
          },
          "name": "version",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 47
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/experimental/edge-function:EdgeFunction"
    },
    "@aws-cdk/aws-cloudfront.experimental.EdgeFunctionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Lambda@Edge function.",
        "example": "// A Lambda@Edge function added to default behavior of a Distribution\n// and triggered on every request\nconst myFunc = new cloudfront.experimental.EdgeFunction(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n\ndeclare const myBucket: s3.Bucket;\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    edgeLambdas: [\n      {\n        functionVersion: myFunc.currentVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      }\n    ],\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront.experimental.EdgeFunctionProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.FunctionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/experimental/edge-function.ts",
        "line": 17
      },
      "name": "EdgeFunctionProps",
      "namespace": "experimental",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- `edge-lambda-stack-${region}`",
            "stability": "stable",
            "summary": "The stack ID of Lambda@Edge function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 23
          },
          "name": "stackId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/experimental/edge-function:EdgeFunctionProps"
    }
  },
  "version": "1.204.0",
  "fingerprint": "**********"
}